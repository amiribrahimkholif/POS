{"version":3,"file":"src_app_page_page_module_ts.js","mappings":"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","sources":["./src/app/core/services/action.service.ts","./src/app/core/services/page.service.ts","./src/app/page/manage-action/manage-action.component.ts","./src/app/page/manage-action/manage-action.component.html","./src/app/page/manage-page/manage-page.component.ts","./src/app/page/manage-page/manage-page.component.html","./src/app/page/page-list-presentation/page-list-presentation.component.ts","./src/app/page/page-list-presentation/page-list-presentation.component.html","./src/app/page/page-list/page-list.component.ts","./src/app/page/page-list/page-list.component.html","./src/app/page/page-routing.module.ts","./src/app/page/page.module.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\r\nimport { EntityCollectionServiceBase, EntityCollectionServiceElementsFactory } from '@ngrx/data';\r\nimport { Action } from '@core/domain-classes/action';\r\nimport { HttpClient, HttpParams } from '@angular/common/http';\r\nimport { map } from 'rxjs/operators';\r\n\r\n@Injectable({ providedIn: 'root' })\r\nexport class ActionService extends EntityCollectionServiceBase<Action>  {\r\n\r\n  constructor(serviceElementsFactory: EntityCollectionServiceElementsFactory, private httpClient: HttpClient) {\r\n    super('Action', serviceElementsFactory);\r\n  }\r\n\r\n  getActionByPage(id: string) {\r\n   return this.getAll().pipe(\r\n      map(response => {\r\n        return response.filter(c => c.pageId == id);\r\n      })\r\n    )\r\n  }\r\n\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { Page } from '@core/domain-classes/page';\r\nimport { EntityCollectionServiceBase, EntityCollectionServiceElementsFactory } from '@ngrx/data';\r\n\r\n@Injectable({ providedIn: 'root' })\r\nexport class PageService extends EntityCollectionServiceBase<Page>  {\r\n\r\n  constructor(serviceElementsFactory: EntityCollectionServiceElementsFactory) {\r\n    super('Page', serviceElementsFactory);\r\n  }\r\n\r\n}\r\n","import { Component, Inject, OnChanges, OnInit, SimpleChanges } from '@angular/core';\r\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\r\nimport { BaseComponent } from 'src/app/base.component';\r\nimport { Action } from '@core/domain-classes/action';\r\nimport { ActionService } from '@core/services/action.service';\r\nimport { ToastrService } from 'ngx-toastr';\r\nimport { TranslationService } from '@core/services/translation.service';\r\nimport { UntypedFormBuilder, UntypedFormGroup, Validators } from '@angular/forms';\r\n\r\n@Component({\r\n  selector: 'app-manage-action',\r\n  templateUrl: './manage-action.component.html',\r\n  styleUrls: ['./manage-action.component.scss']\r\n})\r\nexport class ManageActionComponent extends BaseComponent implements OnInit {\r\n  isEdit: boolean = false;\r\n  actionForm: UntypedFormGroup;\r\n  isDisabled = true;\r\n\r\n  constructor(\r\n    public dialogRef: MatDialogRef<ManageActionComponent>,\r\n    @Inject(MAT_DIALOG_DATA) public data: any,\r\n    private actionService: ActionService,\r\n    private toastrService: ToastrService,\r\n    private fb: UntypedFormBuilder,\r\n    public translationService: TranslationService) {\r\n    super(translationService);\r\n    \r\n  }\r\n  ngOnInit(): void {\r\n    this.createForm();\r\n    if (this.data.id) {\r\n      this.actionForm.patchValue(this.data);\r\n      this.isEdit = true;\r\n    }\r\n  }\r\n  createForm() {\r\n    this.actionForm = this.fb.group({\r\n      pagename: [{ value: this.data.pagename, disabled: this.isDisabled }],\r\n      name: ['', Validators.required],\r\n      order: ['', [Validators.required]]\r\n    });\r\n  }\r\n\r\n\r\n  onCancel(): void {\r\n    this.dialogRef.close();\r\n  }\r\n\r\n  saveAction(): void {\r\n    if (!this.actionForm.valid) {\r\n      this.actionForm.markAllAsTouched();\r\n      return;\r\n    }\r\n    const action: Action = this.actionForm.value;\r\n    action.pageId = this.data.pageId;\r\n    if (this.data.id) {\r\n      action.id = this.data.id;\r\n      this.actionService.update(action).subscribe(() => {\r\n        this.toastrService.success(this.translationService.getValue('ACTION_UPDATED_SUCCESSFULLY'));\r\n        this.dialogRef.close(this.data);\r\n      });\r\n    } else {\r\n      this.actionService.add(action).subscribe(() => {\r\n        this.toastrService.success(this.translationService.getValue('ACTION_SAVED_SUCCESSFULLY'));\r\n        this.dialogRef.close(this.data);\r\n      });\r\n    }\r\n  }\r\n}\r\n","<div class=\"modal-content1\">\r\n    <div class=\"modal-header\">\r\n        <div class=\"d-flex w-100 align-items-center justify-content-between\">\r\n            <div class=\"col-md-10 col\">\r\n                <h4 class=\"modal-title\">\r\n                    {{'MANAGE_ACTION' | translate}}\r\n                </h4>\r\n            </div>\r\n            <div class=\"col-sm-auto col-auto ml-auto\">\r\n                <button type=\"button\" class=\"close\" (click)=\"onCancel()\" data-dismiss=\"modal\">\r\n                    <i class=\"fas fa-times\"></i>\r\n                </button>\r\n            </div>\r\n        </div>\r\n    </div>\r\n    <form [formGroup]=\"actionForm\">\r\n        <div class=\"modal-body\">\r\n            <div class=\"row\">\r\n                <div class=\"col-md-12\">\r\n                    <div class=\"form-group\">\r\n                        <label>{{'PAGE' | translate}}</label>\r\n                        <div class=\"input-group\">\r\n                            <input formControlName=\"pagename\"  type=\"text\" class=\"form-control\"\r\n                                id=\"actionName\">\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div class=\"row\">\r\n                <div class=\"col-md-12\">\r\n                    <div class=\"form-group\">\r\n                        <label class=\"text-danger\" for=\"actionName\">{{'NAME' | translate}} *</label>\r\n                        <input formControlName=\"name\" type=\"text\" class=\"form-control\" id=\"actionName\">\r\n                        <div *ngIf=\"actionForm.get('name').touched && actionForm.get('name').errors\">\r\n                            <div class=\"text-danger\"\r\n                                *ngIf=\"actionForm.get('name').touched && actionForm.get('name').errors?.required\">\r\n                                {{'ACTION_NAME_IS_REQUIRED ' | translate}}\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div class=\"row\">\r\n                <div class=\"col-md-12\">\r\n                    <div class=\"form-group\">\r\n                        <label class=\"text-danger\" for=\"order\">{{'ORDER_NUMBER' | translate}} *</label>\r\n                        <input formControlName=\"order\" type=\"number\" class=\"form-control\" id=\"order\">\r\n                        <div *ngIf=\"actionForm.get('order').touched && actionForm.get('order').errors\">\r\n                            <div class=\"text-danger\"\r\n                                *ngIf=\"actionForm.get('order').touched && actionForm.get('order').errors?.required\">\r\n                                {{'ORDER_IS_REQUIRED' | translate}}\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n        <div class=\"modal-footer\">\r\n            <div class=\"form-row w-100 justify-content-end\">\r\n                <div class=\"col-md-auto col-auto\">\r\n                    <ng-container *ngIf=\"!isEdit\">\r\n                        <button class=\"btn btn-success btn-sm m-right-10\" (click)=\"saveAction()\" cdkFocusInitial>\r\n                            <i class=\"fas fa-save\"></i>\r\n                            {{\"SAVE\" | translate}}\r\n                        </button>\r\n                    </ng-container>\r\n                    <ng-container *ngIf=\"isEdit\">\r\n                        <button class=\"btn btn-success btn-sm m-right-10\" (click)=\"saveAction()\" cdkFocusInitial><i\r\n                                class=\"fas fa-save\"></i>\r\n                            {{\"SAVE\" | translate}}\r\n                        </button>\r\n                    </ng-container>\r\n                    <button class=\"btn btn-danger btn-sm\" (click)=\"onCancel()\">\r\n                        <i class=\"fas fa-times-circle\"></i>\r\n                        {{\"CANCEL\" | translate}}\r\n                    </button>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </form>\r\n</div>","import { Component, Inject, OnChanges, OnInit, SimpleChanges } from '@angular/core';\r\nimport { UntypedFormBuilder, UntypedFormGroup, Validators } from '@angular/forms';\r\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\r\nimport { Page } from '@core/domain-classes/page';\r\nimport { PageService } from '@core/services/page.service';\r\nimport { TranslationService } from '@core/services/translation.service';\r\nimport { ToastrService } from 'ngx-toastr';\r\nimport { BaseComponent } from 'src/app/base.component';\r\n\r\n@Component({\r\n  selector: 'app-manage-page',\r\n  templateUrl: './manage-page.component.html',\r\n  styleUrls: ['./manage-page.component.scss']\r\n})\r\nexport class ManagePageComponent extends BaseComponent implements OnInit {\r\n  pageForm: UntypedFormGroup;\r\n  isEdit: boolean = false;\r\n  constructor(\r\n    public dialogRef: MatDialogRef<ManagePageComponent>,\r\n    @Inject(MAT_DIALOG_DATA) public data: Page,\r\n    private pageService: PageService,\r\n    private toastrServoce: ToastrService,\r\n    private fb: UntypedFormBuilder,\r\n    public translationService: TranslationService) {\r\n    super(translationService);\r\n    \r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.createForm();\r\n    if (this.data.id) {\r\n      this.pageForm.patchValue(this.data);\r\n      this.isEdit = true;\r\n    }\r\n  }\r\n  createForm() {\r\n    this.pageForm = this.fb.group({\r\n      name: ['', Validators.required],\r\n      order: ['', [Validators.required]]\r\n    });\r\n  }\r\n\r\n  onNoClick(): void {\r\n    this.dialogRef.close();\r\n  }\r\n\r\n  savePage(): void {\r\n    if (!this.pageForm.valid) {\r\n      this.pageForm.markAllAsTouched();\r\n      return;\r\n    }\r\n    const page: Page = this.pageForm.value;\r\n    if (this.data.id) {\r\n      page.id = this.data.id;\r\n      this.pageService.update(page).subscribe(d => {\r\n        this.toastrServoce.success(this.translationService.getValue('PAGE_UPDATED_SUCCESSFULLY'));\r\n        this.dialogRef.close();\r\n      });\r\n    } else {\r\n      this.pageService.add(page).subscribe(() => {\r\n        this.toastrServoce.success(this.translationService.getValue('PAGE_ADDED_SUCCESSFULLY'));\r\n        this.dialogRef.close();\r\n      });\r\n    }\r\n  }\r\n}\r\n","<div class=\"modal-content1\">\r\n    <div class=\"modal-header\">\r\n        <div class=\"d-flex w-100 align-items-center justify-content-between\">\r\n            <div class=\"col-md-8 col\">\r\n                <h4 class=\"modal-title\">\r\n                    {{'PAGE' | translate}}\r\n                </h4>\r\n            </div>\r\n            <div class=\"col-sm-auto ml-auto col-auto\">\r\n                <button type=\"button\" class=\"close\" (click)=\"onNoClick()\" data-dismiss=\"modal\">\r\n                    <i class=\"fas fa-times\"></i>\r\n                </button>\r\n            </div>\r\n        </div>\r\n    </div>\r\n    <form [formGroup]=\"pageForm\">\r\n        <div class=\"modal-body\">\r\n            <div class=\"row\">\r\n                <div class=\"col-md-12\">\r\n                    <div class=\"form-group\">\r\n                        <label class=\"text-danger\" for=\"pageName\">{{'NAME' | translate}} *</label>\r\n                        <input formControlName=\"name\" type=\"text\" class=\"form-control\" id=\"pageName\">\r\n                        <div *ngIf=\"pageForm.get('name').touched && pageForm.get('name').errors\">\r\n                            <div class=\"text-danger\"\r\n                                *ngIf=\"pageForm.get('name').touched && pageForm.get('name').errors?.required\">\r\n                                {{'PAGE_NAME_IS_REQUIRED' | translate}}\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div class=\"row\">\r\n                <div class=\"col-md-12\">\r\n                    <div class=\"form-group\">\r\n                        <label class=\"text-danger\" for=\"order\"> {{'ORDER_NUMBER' | translate}}*</label>\r\n                        <input formControlName=\"order\" type=\"number\" class=\"form-control\" id=\"order\">\r\n                        <div *ngIf=\"pageForm.get('order').touched && pageForm.get('order').errors\">\r\n                            <div class=\"text-danger\"\r\n                                *ngIf=\"pageForm.get('order').touched && pageForm.get('order').errors?.required\">\r\n                                {{'ORDER_IS_REQUIRED' | translate}} \r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n        <div class=\"modal-footer\">\r\n            <div class=\"form-row w-100 justify-content-end\">\r\n                <div class=\"col-md-auto col-auto\">\r\n                    <ng-container *ngIf=\"!isEdit\">\r\n                        <button class=\"btn btn-success btn-sm m-right-10\" (click)=\"savePage()\" cdkFocusInitial>\r\n                            <i class=\"fas fa-save\"></i> {{'SAVE' | translate}}</button>\r\n                    </ng-container>\r\n                    <ng-container *ngIf=\"isEdit\">\r\n                        <button class=\"btn btn-success btn-sm m-right-10\" (click)=\"savePage()\" cdkFocusInitial><i\r\n                                class=\"fas fa-save\"></i> {{'SAVE' | translate}}</button>\r\n                    </ng-container>\r\n                    <button class=\"btn btn-danger btn-sm\" (click)=\"onNoClick()\"><i class=\"fas fa-times-circle\"></i>\r\n                        {{'CANCEL' | translate}}</button>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </form>\r\n</div>","import { ChangeDetectionStrategy, ChangeDetectorRef, Component, EventEmitter, Input, OnInit, Output } from '@angular/core';\r\nimport { MatDialog } from '@angular/material/dialog';\r\nimport { CommonDialogService } from '@core/common-dialog/common-dialog.service';\r\nimport { BaseComponent } from 'src/app/base.component';\r\nimport { Page } from '@core/domain-classes/page';\r\nimport { ManagePageComponent } from '../manage-page/manage-page.component';\r\nimport { TranslationService } from '@core/services/translation.service';\r\nimport { ActionService } from '@core/services/action.service';\r\nimport { ManageActionComponent } from 'src/app/page/manage-action/manage-action.component';\r\nimport { animate, state, style, transition, trigger } from '@angular/animations';\r\nimport { Action } from '@core/domain-classes/action';\r\nimport { ToastrService } from 'ngx-toastr';\r\n\r\n@Component({\r\n  selector: 'app-page-list-presentation',\r\n  templateUrl: './page-list-presentation.component.html',\r\n  styleUrls: ['./page-list-presentation.component.scss'],\r\n  animations: [\r\n    trigger('detailExpand', [\r\n      state('collapsed', style({ height: '0px', minHeight: '0' })),\r\n      state('expanded', style({ height: '*' })),\r\n      transition('expanded <=> collapsed', animate('225ms cubic-bezier(0.4, 0.0, 0.2, 1)')),\r\n    ]),\r\n  ],\r\n})\r\nexport class PageListPresentationComponent extends BaseComponent implements OnInit {\r\n  @Input() pages: Page[];\r\n  @Input() loading: boolean;\r\n  @Output() deletePageHandler: EventEmitter<string> = new EventEmitter<string>();\r\n  displayedColumns: string[] = ['subaction', 'action', 'name','order'];\r\n  subActionColumnToDisplay: string[] = ['action', 'name','order','code'];\r\n  subActions: Page[] = [];\r\n  expandedElement: Page | null;\r\n\r\n  constructor(\r\n    private dialog: MatDialog,\r\n    private commonDialogService: CommonDialogService,\r\n    private actionService: ActionService,\r\n    private cd: ChangeDetectorRef,\r\n    private toastrServoce: ToastrService,\r\n    public translationService: TranslationService,\r\n\r\n  ) {\r\n    super(translationService);\r\n    this.getLangDir();\r\n  }\r\n\r\n  ngOnInit(): void {\r\n\r\n  }\r\n\r\n  toggleRow(element: Page) {\r\n    this.subActions = [];\r\n    if (element) {\r\n      this.actionService.getActionByPage(element.id).subscribe(subCat => {\r\n        this.subActions = subCat;\r\n      });\r\n    }\r\n    this.expandedElement = this.expandedElement === element ? null : element;\r\n    this.cd.detectChanges();\r\n  }\r\n\r\n  deletePage(page: Page): void {\r\n    this.sub$.sink = this.commonDialogService\r\n      .deleteConformationDialog(`${this.translationService.getValue('ARE_YOU_SURE_YOU_WANT_TO_DELETE')} ${page.name}`)\r\n      .subscribe(isTrue => {\r\n        if (isTrue) {\r\n          this.deletePageHandler.emit(page.id);\r\n        }\r\n      });\r\n  }\r\n\r\n  manageAction(action: Action): void {\r\n    const dialogRef = this.dialog.open(ManageActionComponent, {\r\n      width: '350px',\r\n      direction:this.langDir,\r\n      data: Object.assign({}, action, { pageId: this.expandedElement.id },{pagename:this.expandedElement.name})\r\n    });\r\n\r\n    this.sub$.sink = dialogRef.afterClosed()\r\n      .subscribe((result: Action) => {\r\n        if (result) {\r\n          this.actionService.getActionByPage(this.expandedElement.id).subscribe(subCat => {\r\n            this.subActions = subCat;\r\n          });\r\n        }\r\n      });\r\n  }\r\n\r\n  deleteAction(action: Action): void {\r\n    this.sub$.sink = this.commonDialogService\r\n      .deleteConformationDialog(`${this.translationService.getValue('ARE_YOU_SURE_YOU_WANT_TO_DELETE')} ${action.name}?`)\r\n      .subscribe(isTrue => {\r\n        if (isTrue) {\r\n          this.sub$.sink = this.actionService.delete(action.id).subscribe(() => {\r\n            this.toastrServoce.success(this.translationService.getValue('ACTION_DELETED_SUCCESSFULLY'));\r\n            this.actionService.getActionByPage(this.expandedElement.id).subscribe(subCat => {\r\n              this.subActions = subCat;\r\n            });\r\n          })\r\n        }\r\n      });\r\n  }\r\n\r\n  managePage(page: Page): void {\r\n    this.dialog.open(ManagePageComponent, {\r\n      width: '350px',\r\n      direction:this.langDir,\r\n      data: Object.assign({}, page)\r\n    });\r\n  }\r\n\r\n  addAction(action: Action) {\r\n    this.manageAction({\r\n      id: '',\r\n      name: '',\r\n      code: ''\r\n    });\r\n  }\r\n}\r\n","<div class=\"page-header-main\">\r\n    <div class=\"row align-items-center justify-content-between\">\r\n        <div class=\"col-md-auto col-sm-auto col\">\r\n            <div class=\"content-header\">\r\n                <h1>{{'PAGES' | translate}}</h1>\r\n            </div>\r\n        </div>\r\n        <div class=\"col-md-auto col-sm-auto col-auto\">\r\n            <button class=\"btn blue-btn btn-sm m-right-10\" (click)=\"managePage({})\">\r\n                <i class=\"fas fa-plus\"></i>\r\n                {{'ADD_PAGE' | translate}}\r\n            </button>\r\n        </div>\r\n    </div>\r\n</div>\r\n<div class=\"loading-shade\" *ngIf=\"!loading\">\r\n    <mat-spinner></mat-spinner>\r\n</div>\r\n<div class=\"table-responsive\">\r\n    <table  [dir]=\"langDir\" mat-table [dataSource]=\"pages\" multiTemplateDataRows class=\"table table-bordered table-hover grid-height\">\r\n        <ng-container matColumnDef=\"subaction\">\r\n            <th mat-header-cell *matHeaderCellDef> </th>\r\n            <td mat-cell *matCellDef=\"let element\">\r\n                <mat-icon class=\"cursor-pointer\" *ngIf=\"element != expandedElement\" (click)=\"toggleRow(element)\">\r\n                    chevron_right</mat-icon>\r\n                <mat-icon class=\"cursor-pointer\" *ngIf=\"element == expandedElement\" (click)=\"toggleRow(element)\">\r\n                    expand_more</mat-icon>\r\n            </td>\r\n        </ng-container>\r\n        <!-- Action Column -->\r\n        <ng-container matColumnDef=\"action\">\r\n            <th style=\"width:30%\" mat-header-cell *matHeaderCellDef>{{'ACTION' | translate}} </th>\r\n            <td style=\"width:30%\" mat-cell *matCellDef=\"let element\">\r\n                <button (click)=\"managePage(element)\" class=\"btn btn-success btn-sm m-right-10\" type=\"button\">\r\n                    <i class=\"fas fa-pencil-alt\"></i>\r\n                    <span class=\"d-none d-sm-inline\"> {{'EDIT' | translate}}</span>\r\n                </button>\r\n                <button (click)=\"deletePage(element)\" class=\"btn btn-danger btn-sm\" type=\"button\">\r\n                    <i class=\"fas fa-trash-alt\"></i>\r\n                    <span class=\"d-none d-sm-inline\"> {{'DELETE' | translate}}</span>\r\n                </button>\r\n            </td>\r\n        </ng-container>\r\n        <!-- Name Column -->\r\n        <ng-container matColumnDef=\"name\">\r\n            <th mat-header-cell *matHeaderCellDef> {{'NAME' | translate}} </th>\r\n            <td mat-cell *matCellDef=\"let element\"> {{element.name}} </td>\r\n        </ng-container>\r\n        <ng-container matColumnDef=\"order\">\r\n            <th mat-header-cell *matHeaderCellDef> {{'ORDER' | translate}} </th>\r\n            <td mat-cell *matCellDef=\"let element\"> {{element.order}} </td>\r\n        </ng-container>\r\n\r\n        <ng-container matColumnDef=\"expandedDetail\">\r\n            <td mat-cell *matCellDef=\"let actionObject\" [attr.colspan]=\"displayedColumns.length\">\r\n                <div class=\"example-element-detail\"\r\n                    [@detailExpand]=\"actionObject == expandedElement ? 'expanded' : 'collapsed'\">\r\n                    <div class=\"inner-table mat-elevation-z8\">\r\n                        <div class=\"row mb-3 align-items-center justify-content-between\">\r\n                            <div class=\"col-md-auto col-sm-auto\">\r\n                                <div class=\"section-title\">\r\n                                    <h2> {{'ACTION' |translate}}</h2>\r\n                                </div>\r\n                            </div>\r\n                            <div class=\"col-md-auto col-sm-auto\">\r\n                                <h4 class=\"widget-title\">\r\n                                    <button class=\"btn blue-btn btn-sm m-right-10\" (click)=\"addAction(actionObject)\">\r\n                                        <i class=\"las la-plus\"></i>\r\n                                        {{'ADD_ACTION' |translate}}\r\n                                    </button>\r\n                                </h4>\r\n                            </div>\r\n                        </div>\r\n                        <table mat-table [dataSource]=\"subActions\" multiTemplateDataRows class=\"table\">\r\n                            <ng-container matColumnDef=\"action\">\r\n                                <th  mat-header-cell *matHeaderCellDef>{{'ACTION' | translate}}\r\n                                </th>\r\n                                <td  mat-cell *matCellDef=\"let element\">\r\n                                    <button (click)=\"manageAction(element)\" class=\"btn btn-success btn-sm m-right-10\"\r\n                                        type=\"button\"><i class=\"las la-pen\"></i>\r\n                                        {{'EDIT' | translate}}\r\n                                    </button>\r\n                                    <button (click)=\"deleteAction(element)\" class=\"btn btn-danger btn-sm\" type=\"button\">\r\n                                        <i class=\"las la-trash\"></i>\r\n                                        {{'DELETE' | translate}}\r\n                                    </button>\r\n                                </td>\r\n                            </ng-container>\r\n                            <ng-container matColumnDef=\"name\">\r\n                                <th mat-header-cell *matHeaderCellDef> {{'NAME' | translate}} </th>\r\n                                <td mat-cell *matCellDef=\"let element\"> {{element.name}} </td>\r\n                            </ng-container>\r\n                            <ng-container matColumnDef=\"order\">\r\n                                <th mat-header-cell *matHeaderCellDef> {{'ORDER' | translate}} </th>\r\n                                <td mat-cell *matCellDef=\"let element\"> {{element.order}} </td>\r\n                            </ng-container>\r\n                            <ng-container matColumnDef=\"code\">\r\n                                <th mat-header-cell *matHeaderCellDef> {{'CODE' | translate}} </th>\r\n                                <td mat-cell *matCellDef=\"let element\"> {{element.code}} </td>\r\n                            </ng-container>\r\n\r\n                            <tr mat-header-row *matHeaderRowDef=\"subActionColumnToDisplay;sticky: true\"></tr>\r\n                            <tr mat-row *matRowDef=\"let row; columns: subActionColumnToDisplay;\"></tr>\r\n                        </table>\r\n                    </div>\r\n                </div>\r\n            </td>\r\n        </ng-container>\r\n\r\n        <tr mat-header-row *matHeaderRowDef=\"displayedColumns;sticky: true\"></tr>\r\n        <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\"></tr>\r\n        <tr mat-row *matRowDef=\"let row; columns: ['expandedDetail']\" class=\"example-detail-row\"></tr>\r\n    </table>\r\n</div>","import { Component, OnInit } from '@angular/core';\r\nimport { ToastrService } from 'ngx-toastr';\r\nimport { Page } from '@core/domain-classes/page';\r\nimport { BaseComponent } from 'src/app/base.component';\r\nimport { PageService } from '@core/services/page.service';\r\nimport { tap } from 'rxjs/operators';\r\nimport { Observable } from 'rxjs';\r\nimport { TranslationService } from '@core/services/translation.service';\r\n\r\n@Component({\r\n  selector: 'app-page-list',\r\n  templateUrl: './page-list.component.html',\r\n  styleUrls: ['./page-list.component.scss']\r\n})\r\nexport class PageListComponent extends BaseComponent implements OnInit {\r\n  pages$: Observable<Page[]>;\r\n  displayedColumns: string[] = ['action', 'name'];\r\n  loading$: Observable<boolean>;\r\n\r\n  constructor(\r\n    private pageService: PageService,\r\n    private toastrServoce: ToastrService,\r\n    public translationService: TranslationService) {\r\n    super(translationService);\r\n    \r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.loading$ = this.pageService.loaded$\r\n      .pipe(\r\n        tap(loaded => {\r\n          if (!loaded) {\r\n            this.getPages();\r\n          }\r\n        })\r\n      );\r\n\r\n    this.pages$ = this.pageService.entities$;\r\n\r\n  }\r\n\r\n  deletePage(pageId: number) {\r\n    this.sub$.sink = this.pageService.delete(pageId).subscribe(() => {\r\n      this.toastrServoce.success(this.translationService.getValue('PAGE_DELETED_SUCCESSFULLY'));\r\n    })\r\n  }\r\n\r\n  getPages(): void {\r\n    this.pageService.getAll()\r\n  }\r\n}\r\n","<app-page-list-presentation [pages]=\"pages$ | async\" [loading]=\"loading$ | async\"\r\n  (deletePageHandler)=\"deletePage($event)\">\r\n</app-page-list-presentation>\r\n","import { NgModule } from '@angular/core';\r\nimport { RouterModule, Routes } from '@angular/router';\r\nimport { AuthGuard } from '@core/security/auth.guard';\r\nimport { PageListComponent } from './page-list/page-list.component';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: '',\r\n    component: PageListComponent,\r\n    canActivate: [AuthGuard],\r\n    // data: { claimType: 'permission' },\r\n  }\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class PageRoutingModule { }\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { PageListComponent } from './page-list/page-list.component';\r\nimport { PageRoutingModule } from './page-routing.module';\r\nimport { MatTableModule } from '@angular/material/table';\r\nimport { MatProgressSpinnerModule } from '@angular/material/progress-spinner';\r\nimport { ManagePageComponent } from './manage-page/manage-page.component';\r\nimport { MatDialogModule } from '@angular/material/dialog';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport { PageListPresentationComponent } from './page-list-presentation/page-list-presentation.component';\r\nimport { SharedModule } from '@shared/shared.module';\r\nimport { MatIconModule } from '@angular/material/icon';\r\nimport { ManageActionComponent } from './manage-action/manage-action.component';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    PageListComponent,\r\n    ManagePageComponent,\r\n    ManageActionComponent,\r\n    PageListPresentationComponent\r\n  ],\r\n  imports: [\r\n    CommonModule,\r\n    FormsModule,\r\n    PageRoutingModule,\r\n    MatTableModule,\r\n    MatProgressSpinnerModule,\r\n    MatDialogModule,\r\n    SharedModule,\r\n    ReactiveFormsModule,\r\n    MatIconModule,\r\n  ]\r\n})\r\nexport class PageModule { }\r\n"],"names":[],"sourceRoot":"webpack:///","x_google_ignoreList":[]}