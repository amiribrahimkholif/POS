{"version":3,"file":"src_app_sale-order-return_sale-order-return_module_ts.js","mappings":"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","sources":["./src/app/sale-order-return/sale-order-return-item/sale-order-return-item.component.ts","./src/app/sale-order-return/sale-order-return-item/sale-order-return-item.component.html","./src/app/sale-order-return/sale-order-return-list/sale-order-return-list.component.ts","./src/app/sale-order-return/sale-order-return-list/sale-order-return-list.component.html","./src/app/sale-order-return/sale-order-return-routing.module.ts","./src/app/sale-order-return/sale-order-return.module.ts","./src/app/sale-order-return/sale-order-return/sale-order-return.component.ts","./src/app/sale-order-return/sale-order-return/sale-order-return.component.html"],"sourcesContent":["import { Component, Input, OnInit, SimpleChanges } from '@angular/core';\r\nimport { SalesOrder } from '@core/domain-classes/sales-order';\r\nimport { SalesOrderItem } from '@core/domain-classes/sales-order-item';\r\nimport { TranslationService } from '@core/services/translation.service';\r\nimport { BaseComponent } from 'src/app/base.component';\r\nimport { SalesOrderService } from 'src/app/sales-order/sales-order.service';\r\n\r\n@Component({\r\n  selector: 'app-sale-order-return-item',\r\n  templateUrl: './sale-order-return-item.component.html',\r\n  styleUrls: ['./sale-order-return-item.component.scss']\r\n})\r\nexport class SaleOrderReturnItemComponent extends BaseComponent implements OnInit {\r\n  @Input() salesOrder: SalesOrder;\r\n  salesOrderItems: SalesOrderItem[] = [];\r\n  isLoading = false;\r\n  displayedColumns: string[] = ['productName', 'source', 'unitName', 'unitPrice', 'quantity', 'totalDiscount', 'taxes', 'totalTax', 'totalAmount','warehouse'];\r\n\r\n  constructor(private salesOrderService: SalesOrderService,public translationService:TranslationService) {\r\n    super(translationService);\r\n    this.getLangDir();\r\n   }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n  ngOnChanges(changes: SimpleChanges): void {\r\n    if (changes['salesOrder']) {\r\n      this.getSalesOrderItems();\r\n    }\r\n  }\r\n\r\n  getSalesOrderItems() {\r\n    this.isLoading = true;\r\n    this.salesOrderService.getSalesOrderItems(this.salesOrder.id, true)\r\n      .subscribe((data: SalesOrderItem[]) => {\r\n        this.isLoading = false;\r\n        this.salesOrderItems = data;\r\n      }, () => this.isLoading = false)\r\n  }\r\n}\r\n","<div class=\"page-header-main\">\r\n    <div class=\"row align-items-center\">\r\n        <div class=\"col-md-auto col-sm-auto\">\r\n            <div class=\"content-header\">\r\n                <h1>{{\"SALES_ORDER_ITEMS\" | translate}}</h1>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>\r\n<div class=\"loading-shade\" *ngIf=\"isLoading\">\r\n    <mat-spinner></mat-spinner>\r\n</div>\r\n\r\n<div class=\"table-responsive\">\r\n    <table [dir]=\"langDir\" mat-table [dataSource]=\"salesOrderItems\" class=\"table table-bordered table-hover\">\r\n        <ng-container matColumnDef=\"productName\">\r\n            <th mat-header-cell *matHeaderCellDef>{{\"PRODUCT_NAME\" | translate}}</th>\r\n            <td mat-cell *matCellDef=\"let element\">\r\n                {{element.productName}}\r\n            </td>\r\n        </ng-container>\r\n        <ng-container matColumnDef=\"source\">\r\n          <th mat-header-cell *matHeaderCellDef>{{\"SOURCE\" | translate}}</th>\r\n          <td mat-cell *matCellDef=\"let element\">\r\n            <ng-container *ngIf=\"element.status===1\">\r\n              {{'SALES_ORDER_RETURN' | translate}}\r\n            </ng-container>\r\n            <ng-container *ngIf=\"element.status !==1\">\r\n              {{'SALES_ORDER' | translate}}\r\n            </ng-container>\r\n          </td>\r\n      </ng-container>\r\n        <ng-container matColumnDef=\"unitName\">\r\n            <th mat-header-cell *matHeaderCellDef> {{\"UNIT\" | translate}} </th>\r\n            <td mat-cell *matCellDef=\"let element\">\r\n                {{element.unitName}}\r\n            </td>\r\n        </ng-container>\r\n        <ng-container matColumnDef=\"unitPrice\">\r\n            <th mat-header-cell *matHeaderCellDef> {{\"UNIT_PER_PRICE\" | translate}} </th>\r\n            <td mat-cell *matCellDef=\"let element\">\r\n                {{element.unitPrice  | customCurrency}}\r\n            </td>\r\n        </ng-container>\r\n        <ng-container matColumnDef=\"quantity\">\r\n            <th mat-header-cell *matHeaderCellDef> {{\"QUANTITY\" | translate}} </th>\r\n            <td mat-cell *matCellDef=\"let element\">\r\n              {{element.status===1 ? -1 * element.quantity :element.quantity }}\r\n            </td>\r\n        </ng-container>\r\n        <ng-container matColumnDef=\"totalDiscount\">\r\n            <th mat-header-cell *matHeaderCellDef> {{'TOTAL_DISCOUNT' | translate}} </th>\r\n            <td mat-cell *matCellDef=\"let element\">\r\n                {{element.discount | customCurrency}}({{element.discountPercentage}}%)\r\n            </td>\r\n        </ng-container>\r\n        <ng-container matColumnDef=\"taxes\">\r\n            <th mat-header-cell *matHeaderCellDef> {{\"TAX\" | translate}} </th>\r\n            <td mat-cell *matCellDef=\"let element\">\r\n                <span *ngFor=\"let tax of element.salesOrderItemTaxes;let last = last\">\r\n                    {{tax.taxName}}({{tax.taxPercentage}}%) <span *ngIf=\"!last\"> ,</span>\r\n                </span>\r\n            </td>\r\n        </ng-container>\r\n        <ng-container matColumnDef=\"totalTax\">\r\n            <th mat-header-cell *matHeaderCellDef> {{'TOTAL_TAX' | translate}} </th>\r\n            <td mat-cell *matCellDef=\"let element\">\r\n                {{element.taxValue | customCurrency}}\r\n            </td>\r\n        </ng-container>\r\n        <ng-container matColumnDef=\"totalAmount\">\r\n            <th mat-header-cell *matHeaderCellDef> {{'TOTAL' | translate}} </th>\r\n            <td mat-cell *matCellDef=\"let element\">\r\n                {{(element.unitPrice * element.quantity) - element.discount + element.taxValue | customCurrency}}\r\n            </td>\r\n        </ng-container>\r\n        <ng-container matColumnDef=\"warehouse\">\r\n            <th mat-header-cell *matHeaderCellDef> {{'WAREHOUSE' | translate}}</th>\r\n            <td mat-cell *matCellDef=\"let element\">\r\n                {{element.warehouseName}}\r\n            </td>\r\n        </ng-container>\r\n        <tr mat-header-row *matHeaderRowDef=\"displayedColumns;sticky: true\"></tr>\r\n        <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\"></tr>\r\n    </table>\r\n</div>\r\n","import { animate, state, style, transition, trigger } from '@angular/animations';\r\nimport { ChangeDetectorRef, Component, OnInit, ViewChild } from '@angular/core';\r\nimport { UntypedFormControl } from '@angular/forms';\r\nimport { MatDialog } from '@angular/material/dialog';\r\nimport { MatPaginator } from '@angular/material/paginator';\r\nimport { MatSort } from '@angular/material/sort';\r\nimport { Router } from '@angular/router';\r\nimport { CommonDialogService } from '@core/common-dialog/common-dialog.service';\r\nimport { Customer } from '@core/domain-classes/customer';\r\nimport { ResponseHeader } from '@core/domain-classes/response-header';\r\nimport { SalesOrder } from '@core/domain-classes/sales-order';\r\nimport { SalesOrderResourceParameter } from '@core/domain-classes/sales-order-resource-parameter';\r\nimport { SalesOrderStatusEnum } from '@core/domain-classes/sales-order-status';\r\nimport { ClonerService } from '@core/services/clone.service';\r\nimport { TranslationService } from '@core/services/translation.service';\r\nimport { ToastrService } from 'ngx-toastr';\r\nimport { forkJoin, merge, Observable, Subject } from 'rxjs';\r\nimport { debounceTime, distinctUntilChanged, switchMap, tap } from 'rxjs/operators';\r\nimport { BaseComponent } from 'src/app/base.component';\r\nimport { CustomerService } from 'src/app/customer/customer.service';\r\nimport { AddSalesOrderPaymentComponent } from 'src/app/sales-order/add-sales-order-payment/add-sales-order-payment.component';\r\nimport { SalesOrderDataSource } from 'src/app/sales-order/sales-order-datasource';\r\nimport { SalesOrderService } from 'src/app/sales-order/sales-order.service';\r\nimport { ViewSalesOrderPaymentComponent } from 'src/app/sales-order/view-sales-order-payment/view-sales-order-payment.component';\r\n\r\n@Component({\r\n  selector: 'app-sale-order-return-list',\r\n  templateUrl: './sale-order-return-list.component.html',\r\n  styleUrls: ['./sale-order-return-list.component.scss'],\r\n  animations: [\r\n    trigger('detailExpand', [\r\n      state('collapsed', style({ height: '0px', minHeight: '0' })),\r\n      state('expanded', style({ height: '*' })),\r\n      transition('expanded <=> collapsed', animate('225ms cubic-bezier(0.4, 0.0, 0.2, 1)')),\r\n    ]),\r\n  ],\r\n})\r\nexport class SaleOrderReturnListComponent extends BaseComponent implements OnInit {\r\n\r\n  dataSource: SalesOrderDataSource;\r\n  salesOrders: SalesOrder[] = [];\r\n  displayedColumns: string[] = ['action', 'soCreatedDate', 'orderNumber', 'deliveryDate', 'customerName', 'totalDiscount', 'totalTax', 'totalAmount','totalPaidAmount', 'paymentStatus'];\r\n  filterColumns: string[] = ['action-search', 'soCreatedDate-search', 'orderNumber-search', 'deliverDate-search', 'customer-search', 'totalAmount-search', 'totalDiscount-search', 'totalTax-search','totalPaidAmount-search', 'paymentStatus-search'];\r\n  footerToDisplayed: string[] = ['footer'];\r\n  isLoadingResults = true;\r\n  salesOrderResource: SalesOrderResourceParameter;\r\n  loading$: Observable<boolean>;\r\n  @ViewChild(MatPaginator) paginator: MatPaginator;\r\n  @ViewChild(MatSort) sort: MatSort;\r\n  _customerFilter: string;\r\n  _orderNumberFilter: string;\r\n  customerNameControl: UntypedFormControl = new UntypedFormControl();\r\n  customerList$: Observable<Customer[]>;\r\n  expandedElement: SalesOrder | null;\r\n  public filterObservable$: Subject<string> = new Subject<string>();\r\n  salesOrderForInvoice: SalesOrder;\r\n\r\n  public get CustomerFilter(): string {\r\n    return this._customerFilter;\r\n  }\r\n\r\n  public set CustomerFilter(v: string) {\r\n    this._customerFilter = v;\r\n    const customerFilter = `customerName:${v}`;\r\n    this.filterObservable$.next(customerFilter);\r\n  }\r\n\r\n  public get OrderNumberFilter(): string {\r\n    return this._orderNumberFilter;\r\n  }\r\n\r\n  public set OrderNumberFilter(v: string) {\r\n    this._orderNumberFilter = v;\r\n    const orderNumberFilter = `orderNumber:${v}`;\r\n    this.filterObservable$.next(orderNumberFilter);\r\n  }\r\n\r\n  constructor(\r\n    private salesOrderService: SalesOrderService,\r\n    private customerService: CustomerService,\r\n    private cd: ChangeDetectorRef,\r\n    private commonDialogService: CommonDialogService,\r\n    private toastrService: ToastrService,\r\n    private router: Router,\r\n    public translationService: TranslationService,\r\n    private dialog: MatDialog,\r\n    private clonerService: ClonerService) {\r\n    super(translationService);\r\n    this.getLangDir();\r\n    this.salesOrderResource = new SalesOrderResourceParameter();\r\n    this.salesOrderResource.pageSize = 50;\r\n    this.salesOrderResource.orderBy = 'soCreatedDate asc',\r\n    this.salesOrderResource.status = SalesOrderStatusEnum.Return;\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.customerNameControlOnChange();\r\n    this.dataSource = new SalesOrderDataSource(this.salesOrderService);\r\n    this.dataSource.loadData(this.salesOrderResource);\r\n    this.getResourceParameter();\r\n    this.sub$.sink = this.filterObservable$\r\n      .pipe(\r\n        debounceTime(1000),\r\n        distinctUntilChanged())\r\n      .subscribe((c) => {\r\n        this.salesOrderResource.skip = 0;\r\n        this.paginator.pageIndex = 0;\r\n        const strArray: Array<string> = c.split(':');\r\n        if (strArray[0] === 'customerName') {\r\n          this.salesOrderResource.customerName = strArray[1];\r\n        } else if (strArray[0] === 'orderNumber') {\r\n          this.salesOrderResource.orderNumber = strArray[1];\r\n        }\r\n        this.dataSource.loadData(this.salesOrderResource);\r\n      });\r\n  }\r\n\r\n  customerNameControlOnChange() {\r\n    this.customerList$ = this.customerNameControl.valueChanges.pipe(\r\n      debounceTime(1000),\r\n      distinctUntilChanged(),\r\n      switchMap(c => {\r\n        return this.customerService.getCustomersForDropDown('CustomerName', c);\r\n      })\r\n    );\r\n  }\r\n\r\n  ngAfterViewInit() {\r\n    this.sort.sortChange.subscribe(() => this.paginator.pageIndex = 0);\r\n\r\n    this.sub$.sink = merge(this.sort.sortChange, this.paginator.page)\r\n      .pipe(\r\n        tap((c: any) => {\r\n          this.salesOrderResource.skip = this.paginator.pageIndex * this.paginator.pageSize;\r\n          this.salesOrderResource.pageSize = this.paginator.pageSize;\r\n          this.salesOrderResource.orderBy = this.sort.active + ' ' + this.sort.direction;\r\n          this.dataSource.loadData(this.salesOrderResource);\r\n        })\r\n      )\r\n      .subscribe();\r\n  }\r\n\r\n  getResourceParameter() {\r\n    this.sub$.sink = this.dataSource.responseHeaderSubject$\r\n      .subscribe((c: ResponseHeader) => {\r\n        if (c) {\r\n          this.salesOrderResource.pageSize = c.pageSize;\r\n          this.salesOrderResource.skip = c.skip;\r\n          this.salesOrderResource.totalCount = c.totalCount;\r\n        }\r\n      });\r\n  }\r\n\r\n  toggleRow(element: SalesOrder) {\r\n    this.expandedElement = this.expandedElement === element ? null : element;\r\n    this.cd.detectChanges();\r\n  }\r\n\r\n  deleteSalesOrder(salesOrder: SalesOrder) {\r\n    this.commonDialogService.deleteConformationDialog(this.translationService.getValue('ARE_YOU_SURE_YOU_WANT_TO_DELETE'))\r\n      .subscribe((isYes) => {\r\n        if (isYes) {\r\n          this.salesOrderService.deleteSalesOrder(salesOrder.id).subscribe(() => {\r\n            this.toastrService.success(this.translationService.getValue('SALES_ORDER_DELETED_SUCCESSFULLY'))\r\n            this.dataSource.loadData(this.salesOrderResource);\r\n          });\r\n        }\r\n      });\r\n  }\r\n\r\n  addPayment(salesOrder: SalesOrder): void {\r\n    const dialogRef = this.dialog.open(AddSalesOrderPaymentComponent, {\r\n      width: '100vh',\r\n      direction:this.langDir,\r\n      data: Object.assign({}, salesOrder)\r\n    });\r\n    dialogRef.afterClosed().subscribe((isAdded: boolean) => {\r\n      if (isAdded) {\r\n        this.dataSource.loadData(this.salesOrderResource);\r\n      }\r\n    })\r\n  }\r\n\r\n  viewPayment(salesOrder: SalesOrder) {\r\n    const dialogRef = this.dialog.open(ViewSalesOrderPaymentComponent, {\r\n      data: Object.assign({}, salesOrder), direction:this.langDir,\r\n    });\r\n    dialogRef.afterClosed().subscribe((isAdded: boolean) => {\r\n      if (isAdded) {\r\n        this.dataSource.loadData(this.salesOrderResource);\r\n      }\r\n    })\r\n  }\r\n\r\n  onSaleOrderReturn(saleOrder: SalesOrder){\r\n    this.router.navigate(['sales-order-return', saleOrder.id]);\r\n  }\r\n\r\n\r\n  generateInvoice(so: SalesOrder) {\r\n    let soForInvoice = this.clonerService.deepClone<SalesOrder>(so);\r\n    const getCustomerRequest = this.customerService.getCustomer(so.customerId);\r\n    const getSalesOrderItems = this.salesOrderService.getSalesOrderItems(so.id);\r\n    forkJoin({ getCustomerRequest, getSalesOrderItems }).subscribe(response => {\r\n      soForInvoice.customer = response.getCustomerRequest;\r\n      soForInvoice.salesOrderItems = response.getSalesOrderItems;\r\n      this.salesOrderForInvoice = soForInvoice;\r\n    });\r\n  }\r\n\r\n\r\n}\r\n","<div class=\"page-header-main\">\r\n  <div class=\"row align-items-center justify-content-between\">\r\n    <div class=\"col-md-auto col-sm-auto\">\r\n      <div class=\"content-header\">\r\n        <h1>{{\"SALES_ORDER_RETURN\" | translate}}</h1>\r\n      </div>\r\n    </div>\r\n    <div class=\"col-md-auto col-sm-auto\">\r\n      <button class=\"btn blue-btn btn-sm m-right-10\" *hasClaim=\"'SORE_ADD_SORE'\"\r\n        [routerLink]=\"['/sales-order-return/add']\">\r\n        <i class=\"fas fa-plus\"></i> {{\"ADD_SALES_ORDER_RETURN\" | translate}}\r\n      </button>\r\n    </div>\r\n  </div>\r\n</div>\r\n<div class=\"loading-shade\" *ngIf=\"dataSource.loading$ | async\">\r\n  <mat-spinner></mat-spinner>\r\n</div>\r\n<div class=\"row\">\r\n  <div class=\"col-sm-12\">\r\n    <div class=\"table-responsive\">\r\n      <table [dir]=\"langDir\" mat-table [dataSource]=\"dataSource\" multiTemplateDataRows\r\n        class=\"table table-bordered table-hover grid-height\" matSort matSortActive=\"soCreatedDate\">\r\n        <ng-container matColumnDef=\"action\">\r\n          <th class=\"table-column-150\" mat-header-cell *matHeaderCellDef>\r\n          </th>\r\n          <td class=\"table-column-150\" mat-cell *matCellDef=\"let so\">\r\n            <button mat-icon-button (click)=\"toggleRow(so)\">\r\n              <mat-icon *ngIf=\"so != expandedElement\">chevron_right</mat-icon>\r\n              <mat-icon *ngIf=\"so == expandedElement\">expand_more</mat-icon>\r\n            </button>\r\n\r\n            <button class=\"ml-4\"\r\n              *hasClaim=\"['SO_UPDATE_SO','SO_VIEW_SO_DETAIL','SO_DELETE_SO','SO_RETURN_SO','SO_ADD_SO_PAYMENT','SO_VIEW_SO_PAYMENTS','SO_GENERATE_INVOICE']\"\r\n              mat-icon-button [matMenuTriggerFor]=\"menu\" aria-label=\"Action\">\r\n              <mat-icon>more_vert</mat-icon>\r\n            </button>\r\n            <mat-menu #menu=\"matMenu\" [dir]=\"langDir\">\r\n              <button *hasClaim=\"'SO_VIEW_SO_DETAIL'\" mat-menu-item [routerLink]=\"['/sales-order/detail', so.id]\">\r\n                <mat-icon>info</mat-icon>\r\n                <span>{{'DETAIL' | translate}}</span>\r\n              </button>\r\n              <ng-contaner *ngIf=\"so.paymentStatus != 0\">\r\n                <button *hasClaim=\"'SO_ADD_SO_PAYMENT'\" mat-menu-item (click)=\"addPayment(so)\">\r\n                  <mat-icon>payment</mat-icon>\r\n                  <span>{{\"ADD_PAYMENT\" | translate}}</span>\r\n                </button>\r\n              </ng-contaner>\r\n              <button *hasClaim=\"'SO_VIEW_SO_PAYMENTS'\" mat-menu-item (click)=\"viewPayment(so)\">\r\n                <mat-icon>view_carousel</mat-icon>\r\n                <span>{{\"VIEW_PAYMENT\" | translate}}</span>\r\n              </button>\r\n              <button *hasClaim=\"'SO_GENERATE_INVOICE'\" mat-menu-item (click)=\"generateInvoice(so)\">\r\n                <mat-icon>receipt</mat-icon>\r\n                <span>{{'GENERATE_INVOICE' | translate}}</span>\r\n              </button>\r\n            </mat-menu>\r\n          </td>\r\n        </ng-container>\r\n        <ng-container matColumnDef=\"soCreatedDate\">\r\n          <th class=\"table-column-100\" mat-header-cell *matHeaderCellDef mat-sort-header> {{'CREATED_DATE' | translate}}\r\n          </th>\r\n          <td class=\"table-column-100\" mat-cell *matCellDef=\"let so\"> {{so.soCreatedDate | utcToLocalTime:'shortDate'\r\n            }} </td>\r\n        </ng-container>\r\n        <ng-container matColumnDef=\"orderNumber\">\r\n          <th class=\"table-column-150\" mat-header-cell *matHeaderCellDef mat-sort-header> {{'ORDER_NUMBER' | translate}}\r\n          </th>\r\n          <td class=\"table-column-150\" mat-cell *matCellDef=\"let so\">\r\n            <a [routerLink]=\"['/sales-order/detail', so.id]\">{{so.orderNumber}} </a>\r\n          </td>\r\n        </ng-container>\r\n        <ng-container matColumnDef=\"deliveryDate\">\r\n          <th class=\"table-column-150\" mat-header-cell *matHeaderCellDef mat-sort-header> {{'DELIVERY_DATE' |\r\n            translate}}\r\n          </th>\r\n          <td class=\"table-column-100\" mat-cell *matCellDef=\"let so\"> {{so.deliveryDate | utcToLocalTime:'shortDate'\r\n            }} </td>\r\n        </ng-container>\r\n        <ng-container matColumnDef=\"customerName\">\r\n          <th class=\"table-column-300\" mat-header-cell mat-sort-header *matHeaderCellDef>{{'CUSTOMER_NAME' | translate}}\r\n          </th>\r\n          <td class=\"table-column-300\" mat-cell *matCellDef=\"let so\">\r\n            <a [routerLink]=\"['/customer',so.customerId]\"> {{so.customerName}} </a>\r\n          </td>\r\n        </ng-container>\r\n        <ng-container matColumnDef=\"totalDiscount\">\r\n          <th mat-header-cell *matHeaderCellDef mat-sort-header> {{'TOTAL_DISCOUNT' | translate}} </th>\r\n          <td mat-cell *matCellDef=\"let so\">\r\n            {{so.totalDiscount | customCurrency}}\r\n          </td>\r\n        </ng-container>\r\n        <ng-container matColumnDef=\"totalTax\">\r\n          <th mat-header-cell *matHeaderCellDef mat-sort-header> {{'TOTAL_TAX' | translate}} </th>\r\n          <td mat-cell *matCellDef=\"let so\">\r\n            {{so.totalTax | customCurrency}}\r\n          </td>\r\n        </ng-container>\r\n        <ng-container matColumnDef=\"totalAmount\">\r\n          <th mat-header-cell *matHeaderCellDef mat-sort-header> {{'TOTAL_AMOUNT' | translate}} </th>\r\n          <td mat-cell *matCellDef=\"let so\">\r\n            {{so.totalAmount | customCurrency}}\r\n          </td>\r\n        </ng-container>\r\n        <ng-container matColumnDef=\"totalPaidAmount\">\r\n          <th mat-header-cell *matHeaderCellDef mat-sort-header> {{'TOTAL_PAID_AMOUNT' | translate}} </th>\r\n          <td mat-cell *matCellDef=\"let so\">\r\n            {{so.totalPaidAmount | customCurrency }}\r\n          </td>\r\n        </ng-container>\r\n        <ng-container matColumnDef=\"paymentStatus\">\r\n          <th mat-header-cell *matHeaderCellDef mat-sort-header> {{'PAYMENT_STATUS' | translate}} </th>\r\n          <td mat-cell *matCellDef=\"let so\" style=\"text-align: center;\">\r\n            <span class=\"badge-pill\" [ngClass]=\"{'badge-success': so.paymentStatus ==  0,\r\n                'badge-danger' : so.paymentStatus == 1,\r\n                'badge-warning' : so.paymentStatus == 2}\">{{so.paymentStatus | paymentStatus }}</span>\r\n          </td>\r\n        </ng-container>\r\n        <ng-container matColumnDef=\"action-search\">\r\n          <th mat-header-cell *matHeaderCellDef> </th>\r\n        </ng-container>\r\n        <ng-container matColumnDef=\"soCreatedDate-search\">\r\n          <th mat-header-cell *matHeaderCellDef>\r\n          </th>\r\n        </ng-container>\r\n        <ng-container matColumnDef=\"orderNumber-search\">\r\n          <th mat-header-cell *matHeaderCellDef>\r\n            <input placeholder=\"{{'ORDER_NO' | translate}}\" type=\"text\" class=\"form-control w-90\"\r\n              [(ngModel)]=\"OrderNumberFilter\">\r\n          </th>\r\n        </ng-container>\r\n        <ng-container matColumnDef=\"deliverDate-search\">\r\n          <th mat-header-cell *matHeaderCellDef>\r\n          </th>\r\n        </ng-container>\r\n        <ng-container matColumnDef=\"customer-search\">\r\n          <th mat-header-cell *matHeaderCellDef>\r\n            <input placeholder=\"{{'CUSTOMER' | translate}}\" type=\"text\" class=\"form-control w-90\"\r\n              [formControl]=\"customerNameControl\" [matAutocomplete]=\"autoCustomer\">\r\n            <mat-autocomplete [dir]=\"langDir\" [autoActiveFirstOption]=\"true\"\r\n              (optionSelected)='CustomerFilter=$event.option.value' #autoCustomer=\"matAutocomplete\">\r\n              <mat-option [dir]=\"langDir\" value=\"\">{{'NONE' | translate}}</mat-option>\r\n              <mat-option *ngFor=\"let customer of customerList$ | async\" [value]=\"customer.customerName\">\r\n                {{customer.customerName}}\r\n              </mat-option>\r\n            </mat-autocomplete>\r\n          </th>\r\n        </ng-container>\r\n        <ng-container matColumnDef=\"totalAmount-search\">\r\n          <th mat-header-cell *matHeaderCellDef>\r\n          </th>\r\n        </ng-container>\r\n        <ng-container matColumnDef=\"totalDiscount-search\">\r\n          <th mat-header-cell *matHeaderCellDef>\r\n          </th>\r\n        </ng-container>\r\n        <ng-container matColumnDef=\"totalTax-search\">\r\n          <th mat-header-cell *matHeaderCellDef>\r\n          </th>\r\n        </ng-container>\r\n        <ng-container matColumnDef=\"totalPaidAmount-search\">\r\n          <th mat-header-cell *matHeaderCellDef>\r\n          </th>\r\n        </ng-container>\r\n        <ng-container matColumnDef=\"paymentStatus-search\">\r\n          <th mat-header-cell *matHeaderCellDef>\r\n          </th>\r\n        </ng-container>\r\n        <ng-container matColumnDef=\"footer\">\r\n          <td mat-footer-cell colspan=\"12\" *matFooterCellDef>\r\n            <mat-paginator [length]=\"salesOrderResource.totalCount\" [pageSize]=\"salesOrderResource.pageSize\"\r\n              [pageSizeOptions]=\"[10, 20, 30]\">\r\n            </mat-paginator>\r\n          </td>\r\n        </ng-container>\r\n        <ng-container matColumnDef=\"expandedDetail\">\r\n          <td mat-cell *matCellDef=\"let soObject\" [attr.colspan]=\"displayedColumns.length\">\r\n            <ng-container *ngIf=\"soObject == expandedElement\">\r\n              <div class=\"example-element-detail\"\r\n                [@detailExpand]=\"soObject == expandedElement ? 'expanded' : 'collapsed'\">\r\n                <div class=\"inner-table mat-elevation-z8\">\r\n                  <app-sale-order-return-item [salesOrder]=\"soObject\">\r\n                  </app-sale-order-return-item>\r\n                </div>\r\n              </div>\r\n            </ng-container>\r\n          </td>\r\n        </ng-container>\r\n        <tr *matNoDataRow>\r\n          <td colspan=\"8\">\r\n            <span class=\"p-4 mt-4\">\r\n              <b> {{'NO_DATA_FOUND' | translate}}</b>\r\n            </span>\r\n          </td>\r\n        </tr>\r\n        <tr mat-header-row *matHeaderRowDef=\"displayedColumns;sticky: true\"></tr>\r\n        <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\"></tr>\r\n        <tr mat-header-row *matHeaderRowDef=\"filterColumns;sticky: true\">\r\n\r\n        <tr mat-footer-row *matFooterRowDef=\"footerToDisplayed;sticky: true\"></tr>\r\n        <tr mat-row *matRowDef=\"let row; columns: ['expandedDetail']\" class=\"example-detail-row\"></tr>\r\n      </table>\r\n    </div>\r\n  </div>\r\n</div>\r\n<ng-container *ngIf=\"salesOrderForInvoice\">\r\n  <app-sales-order-invoice [salesOrder]=\"salesOrderForInvoice\"></app-sales-order-invoice>\r\n</ng-container>","import { NgModule } from '@angular/core';\r\nimport { RouterModule, Routes } from '@angular/router';\r\nimport { AuthGuard } from '@core/security/auth.guard';\r\nimport { ProductsResolver } from '@core/services/products.resolve';\r\nimport { SaleOrderWarehouseResolver } from '../sales-order/sales-order-add-edit/sale-order-warehouse.resolve';\r\nimport { SalesOrderTaxResolver } from '../sales-order/sales-order-add-edit/sales-order-tax-resolve';\r\nimport { SalesOrderUnitResolver } from '../sales-order/sales-order-add-edit/sales-order-unit-resolve';\r\nimport { SalesOrderByIdResolver } from '../sales-order/sales-order-add-edit/sales-oredr-by-id-resolve';\r\nimport { SaleOrderReturnListComponent } from './sale-order-return-list/sale-order-return-list.component';\r\nimport { SaleOrderReturnComponent } from './sale-order-return/sale-order-return.component';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: 'list',\r\n    component: SaleOrderReturnListComponent,\r\n    data: { claimType: 'SO_RETURN_SO' },\r\n    canActivate: [AuthGuard]\r\n  },{\r\n    path: 'add',\r\n    component: SaleOrderReturnComponent,\r\n    data: { claimType: 'SO_RETURN_SO' },\r\n    canActivate: [AuthGuard],\r\n    resolve: {\r\n      'units': SalesOrderUnitResolver,\r\n      'taxs': SalesOrderTaxResolver,\r\n      'warehouses':SaleOrderWarehouseResolver,\r\n      'products': ProductsResolver\r\n    }\r\n  },{\r\n    path: ':id',\r\n    component: SaleOrderReturnComponent,\r\n    data: { claimType: 'SO_RETURN_SO' },\r\n    canActivate: [AuthGuard],\r\n    resolve: {\r\n      'units': SalesOrderUnitResolver,\r\n      'taxs': SalesOrderTaxResolver,\r\n      'warehouses':SaleOrderWarehouseResolver,\r\n      'salesorder': SalesOrderByIdResolver,\r\n      'products': ProductsResolver\r\n    }\r\n  }\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class SaleOrderReturnRoutingModule { }\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\n\r\nimport { SaleOrderReturnRoutingModule } from './sale-order-return-routing.module';\r\nimport { SaleOrderReturnComponent } from './sale-order-return/sale-order-return.component';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport { SharedModule } from '@shared/shared.module';\r\nimport { MatDatepickerModule } from '@angular/material/datepicker';\r\nimport { MatNativeDateModule } from '@angular/material/core';\r\nimport { MatInputModule } from '@angular/material/input';\r\nimport { MatFormFieldModule } from '@angular/material/form-field';\r\nimport { MatRadioModule } from '@angular/material/radio';\r\nimport { MatSelectModule } from '@angular/material/select';\r\nimport { MatCardModule } from '@angular/material/card';\r\nimport { MatMenuModule } from '@angular/material/menu';\r\nimport { MatIconModule } from '@angular/material/icon';\r\nimport { MatButtonModule } from '@angular/material/button';\r\nimport { MatAutocompleteModule } from '@angular/material/autocomplete';\r\nimport { MatProgressSpinnerModule } from '@angular/material/progress-spinner';\r\nimport { OwlDateTimeModule, OwlNativeDateTimeModule } from 'ng-pick-datetime-ex';\r\nimport { MatCheckboxModule } from '@angular/material/checkbox';\r\nimport { MatDividerModule } from '@angular/material/divider';\r\nimport { MatDialogModule } from '@angular/material/dialog';\r\nimport { SaleOrderReturnListComponent } from './sale-order-return-list/sale-order-return-list.component';\r\nimport { SaleOrderReturnItemComponent } from './sale-order-return-item/sale-order-return-item.component';\r\nimport { MatTableModule } from '@angular/material/table';\r\nimport { MatPaginatorModule } from '@angular/material/paginator';\r\nimport { MatSortModule } from '@angular/material/sort';\r\n\r\n\r\n@NgModule({\r\n  declarations: [\r\n    SaleOrderReturnComponent,\r\n    SaleOrderReturnListComponent,\r\n    SaleOrderReturnItemComponent\r\n  ],\r\n  imports: [\r\n    CommonModule,\r\n    SaleOrderReturnRoutingModule,\r\n    FormsModule,\r\n    ReactiveFormsModule,\r\n    SharedModule,\r\n    MatDatepickerModule,\r\n    MatNativeDateModule,\r\n    MatInputModule,\r\n    MatFormFieldModule,\r\n    MatRadioModule,\r\n    MatSelectModule,\r\n    MatCardModule,\r\n    MatMenuModule,\r\n    MatIconModule,\r\n    MatButtonModule,\r\n    MatAutocompleteModule,\r\n    MatProgressSpinnerModule,\r\n    OwlDateTimeModule,\r\n    OwlNativeDateTimeModule,\r\n    MatCheckboxModule,\r\n    MatDividerModule,\r\n    MatDialogModule,\r\n    MatTableModule,\r\n    MatPaginatorModule,\r\n    MatSortModule,\r\n\r\n  ]\r\n})\r\nexport class SaleOrderReturnModule { }\r\n","import { HttpResponse } from '@angular/common/http';\r\nimport { Component, OnInit } from '@angular/core';\r\nimport { UntypedFormArray, UntypedFormBuilder, UntypedFormGroup, Validators } from '@angular/forms';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { Customer } from '@core/domain-classes/customer';\r\nimport { CustomerResourceParameter } from '@core/domain-classes/customer-resource-parameter';\r\nimport { DeliveryStatusEnum } from '@core/domain-classes/delivery-status-enum';\r\nimport { Product } from '@core/domain-classes/product';\r\nimport { ProductResourceParameter } from '@core/domain-classes/product-resource-parameter';\r\nimport { PurchaseOrderStatusEnum } from '@core/domain-classes/purchase-order-status';\r\nimport { SalesOrder } from '@core/domain-classes/sales-order';\r\nimport { SalesOrderItem } from '@core/domain-classes/sales-order-item';\r\nimport { SalesOrderItemTax } from '@core/domain-classes/sales-order-item-tax';\r\nimport { SalesOrderResourceParameter } from '@core/domain-classes/sales-order-resource-parameter';\r\nimport { SalesOrderStatusEnum } from '@core/domain-classes/sales-order-status';\r\nimport { Tax } from '@core/domain-classes/tax';\r\nimport { Unit } from '@core/domain-classes/unit';\r\nimport { TaxService } from '@core/services/tax.service';\r\nimport { QuantitiesUnitPriceTaxPipe } from '@shared/pipes/quantities-unitprice-tax.pipe';\r\nimport { QuantitiesUnitPricePipe } from '@shared/pipes/quantities-unitprice.pipe';\r\nimport { ToastrService } from 'ngx-toastr';\r\nimport { Observable } from 'rxjs';\r\nimport { debounceTime, distinctUntilChanged, switchMap, tap } from 'rxjs/operators';\r\nimport { BaseComponent } from 'src/app/base.component';\r\nimport { CustomerService } from 'src/app/customer/customer.service';\r\nimport { ProductService } from 'src/app/product/product.service';\r\nimport { SalesOrderService } from 'src/app/sales-order/sales-order.service';\r\nimport { Location } from '@angular/common';\r\nimport { ClonerService } from '@core/services/clone.service';\r\nimport { TranslationService } from '@core/services/translation.service';\r\nimport { Warehouse } from '@core/domain-classes/warehouse';\r\n\r\n@Component({\r\n  selector: 'app-sale-order-return',\r\n  templateUrl: './sale-order-return.component.html',\r\n  styleUrls: ['./sale-order-return.component.scss'],\r\n  viewProviders: [QuantitiesUnitPricePipe, QuantitiesUnitPriceTaxPipe]\r\n})\r\nexport class SaleOrderReturnComponent extends BaseComponent {\r\n  taxes$: Observable<Tax[]>;\r\n  salesOrderForm: UntypedFormGroup;\r\n  salesOrderReturnForm: UntypedFormGroup;\r\n  products: Product[] = [];\r\n  customersForSearch: Customer[] = [];\r\n  customers: Customer[] = [];\r\n  customerResource: CustomerResourceParameter;\r\n  salesResouce: SalesOrderResourceParameter;\r\n  productResource: ProductResourceParameter;\r\n  salesorders: SalesOrder[] = [];\r\n  isLoading: boolean = false;\r\n  isCustomerLoading: boolean = false;\r\n  filterProductsMap: { [key: string]: Product[] } = {};\r\n  warehouseMap: { [key: string]: Warehouse[] } = {};\r\n  unitsMap: { [key: string]: Unit[] } = {};\r\n  taxsMap: { [key: string]: Tax[] } = {};\r\n  totalBeforeDiscount: number = 0;\r\n  totalAfterDiscount: number = 0;\r\n  totalDiscount: number = 0;\r\n  grandTotal: number = 0;\r\n  totalTax: number = 0;\r\n  timeoutclear: any;\r\n  salesOrder: SalesOrder;\r\n  isEdit: boolean = false;\r\n  salesOrderResource: SalesOrderResourceParameter;\r\n\r\n  get salesOrderItemsArray(): UntypedFormArray {\r\n    return <UntypedFormArray>this.salesOrderForm.get('salesOrderItems');\r\n  }\r\n\r\n  constructor(\r\n    private fb: UntypedFormBuilder,\r\n    private customerService: CustomerService,\r\n    private toastrService: ToastrService,\r\n    private salesOrderService: SalesOrderService,\r\n    private router: Router,\r\n    private taxService: TaxService,\r\n    private productService: ProductService,\r\n    private route: ActivatedRoute,\r\n    private quantitiesUnitPricePipe: QuantitiesUnitPricePipe,\r\n    private quantitiesUnitPriceTaxPipe: QuantitiesUnitPriceTaxPipe,\r\n    private location: Location,\r\n    private cloneService: ClonerService,\r\n    public translationService: TranslationService\r\n  ) {\r\nsuper(translationService);\r\n    this.getLangDir();\r\n    this.salesResouce = new SalesOrderResourceParameter();\r\n    this.salesOrderResource = new SalesOrderResourceParameter();\r\n    this.customerResource = new CustomerResourceParameter();\r\n    this.productResource = new ProductResourceParameter();\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.createSalesOrder();\r\n    this.getTaxes();\r\n  }\r\n\r\n  onFilterValue(filterValue: any) {\r\n    console.log(filterValue);\r\n  }\r\n\r\n  getTaxes() {\r\n    this.taxes$ = this.taxService.entities$;\r\n  }\r\n\r\n  createSalesOrderReturnOrder() {\r\n    this.salesOrderReturnForm = this.fb.group({\r\n      orderNumber: [''],\r\n      filerCustomer: [''],\r\n      customerId: [''],\r\n      salesOrderId: [''],\r\n      filerSalesOrder: ['']\r\n    });\r\n    this.getCustomers();\r\n    this.customerNameForSearchChangeValue();\r\n    this.subscribeCustomerChangeEvent();\r\n    this.subscribeSalesOrderFilterChangeEvent();\r\n    this.onSalesOrderChange();\r\n  }\r\n\r\n  subscribeCustomerChangeEvent() {\r\n    this.salesOrderReturnForm.get('customerId').valueChanges\r\n      .pipe(\r\n        debounceTime(500),\r\n        distinctUntilChanged(),\r\n        switchMap(c => {\r\n          this.salesResouce.customerId = c;\r\n          this.salesResouce.status = SalesOrderStatusEnum.Not_Return;\r\n          return this.salesOrderService.getAllSalesOrder(this.salesResouce);\r\n        })\r\n      ).subscribe((resp: HttpResponse<SalesOrder[]>) => {\r\n        if (resp && resp.headers) {\r\n          this.salesorders = [...resp.body];\r\n        }\r\n      });\r\n  }\r\n\r\n  subscribeSalesOrderFilterChangeEvent() {\r\n    this.salesOrderReturnForm.get('filerSalesOrder').valueChanges\r\n      .pipe(\r\n        debounceTime(500),\r\n        distinctUntilChanged(),\r\n        switchMap(c => {\r\n          this.salesResouce.orderNumber = c;\r\n          return this.salesOrderService.getAllSalesOrder(this.salesResouce);\r\n        })\r\n      ).subscribe((resp: HttpResponse<SalesOrder[]>) => {\r\n        if (resp && resp.headers) {\r\n          this.salesorders = [...resp.body];\r\n        }\r\n      });\r\n  }\r\n\r\n  onSalesOrderChange() {\r\n    this.salesOrderReturnForm.get('salesOrderId').valueChanges\r\n      .subscribe(id => {\r\n        if (id) {\r\n          this.router.navigate(['/sales-order-return', id]);\r\n        }\r\n      });\r\n  }\r\n\r\n\r\n  createSalesOrder() {\r\n    this.route.data\r\n      .pipe(\r\n    )\r\n      .subscribe((salesOrderData: { 'salesorder': SalesOrder }) => {\r\n        this.salesOrder = salesOrderData.salesorder;\r\n        if (this.salesOrder) {\r\n          this.isEdit = true;\r\n          this.salesOrderForm = this.fb.group({\r\n            orderNumber: [{ value: this.salesOrder.orderNumber, disabled: true }],\r\n            filerCustomer: [{ value: '', disabled: true }],\r\n            deliveryDate: [{ value: this.salesOrder.deliveryDate, disabled: true }],\r\n            soCreatedDate: [{ value: this.salesOrder.soCreatedDate, disabled: true }],\r\n            deliveryStatus: [{ value: SalesOrderStatusEnum.Return, disabled: true }],\r\n            customerId: [{ value: this.salesOrder.customerId, disabled: true }],\r\n            note: [{ value: '', disabled: false }],\r\n            salesOrderItems: this.fb.array([])\r\n          });\r\n          this.salesOrder.salesOrderItems.forEach(c => {\r\n            this.salesOrderItemsArray.push(this.createSalesOrderItemPatch(this.salesOrderItemsArray.length, c));\r\n          });\r\n          this.customerNameChangeValue();\r\n          this.getCustomers();\r\n          this.getAllTotal();\r\n        } else {\r\n          this.createSalesOrderReturnOrder();\r\n          this.salesResouce.pageSize = 10;\r\n          this.salesResouce.status = SalesOrderStatusEnum.Not_Return;\r\n          this.salesOrderService.getAllSalesOrder(this.salesResouce)\r\n            .subscribe((resp: HttpResponse<SalesOrder[]>) => {\r\n              if (resp && resp.headers) {\r\n                this.salesorders = [...resp.body];\r\n              }\r\n            })\r\n        }\r\n      });\r\n  }\r\n\r\n  createSalesOrderItemPatch(index: number, salesOrderItem: SalesOrderItem) {\r\n    const taxs = salesOrderItem.salesOrderItemTaxes.map(c => c.taxId);\r\n    const formGroup = this.fb.group({\r\n      productId: [{ value: salesOrderItem.productId, disabled: true }],\r\n      unitPrice: [{ value: salesOrderItem.unitPrice, disabled: true }],\r\n      quantity: [{ value: salesOrderItem.quantity, disabled: true }],\r\n      returnquantity: [{ value: salesOrderItem.quantity, disabled: false }, [Validators.required, Validators.max(salesOrderItem.quantity), Validators.min(1)]],\r\n      taxValue: [{ value: taxs, disabled: true }],\r\n      unitId: [{ value: salesOrderItem.unitId, disabled: true }],\r\n      warehouseId:  [{ value: salesOrderItem.warehouseId, disabled: true }],\r\n      discountPercentage: [{ value: salesOrderItem.discountPercentage, disabled: true }]\r\n    });\r\n    this.unitsMap[index] = [... this.route.snapshot.data['units']];\r\n    this.warehouseMap[index] =  [... this.route.snapshot.data['warehouses']];\r\n    this.taxsMap[index] = [... this.route.snapshot.data['taxs']];\r\n    this.filterProductsMap[index.toString()] = [salesOrderItem.product];\r\n    return formGroup;\r\n  }\r\n\r\n  customerNameForSearchChangeValue() {\r\n    this.sub$.sink = this.salesOrderReturnForm.get('filerCustomer').valueChanges\r\n      .pipe(\r\n        tap(c => this.isCustomerLoading = true),\r\n        debounceTime(500),\r\n        distinctUntilChanged(),\r\n        switchMap(c => {\r\n          this.customerResource.customerName = c;\r\n          this.customerResource.id = null;\r\n          return this.customerService.getCustomers(this.customerResource);\r\n        })\r\n      ).subscribe((resp: HttpResponse<Customer[]>) => {\r\n        this.isCustomerLoading = false;\r\n        if (resp && resp.headers) {\r\n          this.customersForSearch = [...resp.body];\r\n        }\r\n      }, (err) => {\r\n        this.isCustomerLoading = false;\r\n      });\r\n  }\r\n\r\n\r\n  customerNameChangeValue() {\r\n    this.sub$.sink = this.salesOrderForm.get('filerCustomer').valueChanges\r\n      .pipe(\r\n        tap(c => this.isCustomerLoading = true),\r\n        debounceTime(500),\r\n        distinctUntilChanged(),\r\n        switchMap(c => {\r\n          this.customerResource.customerName = c;\r\n          this.customerResource.id = null;\r\n          return this.customerService.getCustomers(this.customerResource);\r\n        })\r\n      ).subscribe((resp: HttpResponse<Customer[]>) => {\r\n        this.isCustomerLoading = false;\r\n        if (resp && resp.headers) {\r\n          this.customers = [...resp.body];\r\n        }\r\n      }, (err) => {\r\n        this.isCustomerLoading = false;\r\n      });\r\n  }\r\n\r\n  getAllTotal() {\r\n    let salesOrderItemsArray = this.salesOrderForm.get('salesOrderItems') as UntypedFormArray;\r\n    let salesOrderItems = salesOrderItemsArray.getRawValue();\r\n    this.totalBeforeDiscount = 0;\r\n    this.grandTotal = 0;\r\n    this.totalDiscount = 0;\r\n    this.totalTax = 0;\r\n    if (salesOrderItems && salesOrderItems.length > 0) {\r\n      salesOrderItems.forEach(so => {\r\n        if (so.unitPrice && so.returnquantity) {\r\n          const totalBeforeDiscount = this.totalBeforeDiscount + parseFloat(this.quantitiesUnitPricePipe.transform(so.returnquantity, so.unitPrice));\r\n          this.totalBeforeDiscount = parseFloat(totalBeforeDiscount.toFixed(2));\r\n          const gradTotal = this.grandTotal + parseFloat(this.quantitiesUnitPricePipe.transform(so.returnquantity, so.unitPrice, so.discountPercentage, so.taxValue, this.taxsMap[0]));\r\n          this.grandTotal = parseFloat(gradTotal.toFixed(2));\r\n          const totalTax = this.totalTax + parseFloat(this.quantitiesUnitPriceTaxPipe.transform(so.returnquantity, so.unitPrice, so.discountPercentage, so.taxValue, this.taxsMap[0]));\r\n          this.totalTax = parseFloat(totalTax.toFixed(2));\r\n          const totalDiscount = this.totalDiscount + parseFloat(this.quantitiesUnitPriceTaxPipe.transform(so.returnquantity, so.unitPrice, so.discountPercentage));\r\n          this.totalDiscount = parseFloat(totalDiscount.toFixed(2));\r\n        }\r\n      })\r\n    }\r\n  }\r\n\r\n  onQuantityChange() {\r\n    this.getAllTotal();\r\n  }\r\n\r\n  onRemoveSalesOrderItem(index: number) {\r\n    this.salesOrderItemsArray.removeAt(index);\r\n\r\n    this.salesOrderItemsArray.controls.forEach((c: UntypedFormGroup, index: number) => {\r\n      const productId = c.get('productId').value;\r\n      this.salesOrder.salesOrderItems.map(pi => {\r\n        if (pi.product.id === productId) {\r\n          this.filterProductsMap[index.toString()] = this.cloneService.deepClone([pi.product]);\r\n        }\r\n      });\r\n    });\r\n\r\n    this.getAllTotal();\r\n  }\r\n\r\n  getProducts(index: number) {\r\n    if (this.products.length === 0) {\r\n      this.productResource.name = '';\r\n      this.productService.getProducts(this.productResource)\r\n        .subscribe((resp: HttpResponse<Product[]>) => {\r\n          this.products = [...resp.body];\r\n          this.filterProductsMap[index.toString()] = [...resp.body];\r\n        }, (err) => {\r\n        });\r\n    } else {\r\n      this.filterProductsMap[index.toString()] = [...this.products];\r\n    }\r\n\r\n  }\r\n\r\n  onProductSelectionChange(value: any, index: number) {\r\n    this.salesOrderItemsArray.controls[index].patchValue({\r\n      filterProductValue: ''\r\n    });\r\n    const product = this.filterProductsMap[index].find((c: Product) => c.id === value.value);\r\n    if (product) {\r\n      this.salesOrderItemsArray.controls[index].patchValue({\r\n        unitId: product.unitId,\r\n        warehouseId: product.warehouseId\r\n      });\r\n    }\r\n  }\r\n\r\n  getNewSalesOrderNumber() {\r\n    this.salesOrderService.getNewSalesOrderNumber().subscribe(salesOrder => {\r\n      if (!this.salesOrder) {\r\n        this.salesOrderForm.patchValue({\r\n          orderNumber: salesOrder.orderNumber\r\n        });\r\n      }\r\n    });\r\n  }\r\n\r\n\r\n  getCustomers() {\r\n    if (this.salesOrder) {\r\n      this.customerResource.id = this.salesOrder.customerId;\r\n    } else {\r\n      this.customerResource.customerName = '';\r\n      this.customerResource.id = null;\r\n    }\r\n    this.customerService.getCustomers(this.customerResource)\r\n      .subscribe(resp => {\r\n        if (resp && resp.headers) {\r\n          this.customers = [...resp.body];\r\n          this.customersForSearch = [...resp.body];\r\n        }\r\n      });\r\n  }\r\n\r\n  onSalesOrderSubmit() {\r\n    if (!this.salesOrderForm.valid) {\r\n      this.salesOrderForm.markAllAsTouched();\r\n    } else {\r\n      if (this.salesOrder && this.salesOrder.salesOrderStatus === SalesOrderStatusEnum.Return) {\r\n        this.toastrService.error(\"Sales Order can't edit becuase it's already approved.\");\r\n        return;\r\n      }\r\n      const salesOrder = this.buildSalesOrder();\r\n      if (salesOrder.id) {\r\n        this.salesOrderService.updateSalesOrderReturn(salesOrder)\r\n          .subscribe((c: SalesOrder) => {\r\n            this.toastrService.success('Sales order return added.');\r\n            this.router.navigate(['/sales-order/list']);\r\n          })\r\n      }\r\n    }\r\n  }\r\n\r\n  buildSalesOrder() {\r\n    const salesOrder: SalesOrder = {\r\n      id: this.salesOrder ? this.salesOrder.id : '',\r\n      orderNumber: this.salesOrderForm.get('orderNumber').value,\r\n      deliveryDate: this.salesOrderForm.get('deliveryDate').value,\r\n      deliveryStatus: DeliveryStatusEnum.UnDelivery,\r\n      isSalesOrderRequest: false,\r\n      soCreatedDate: this.salesOrderForm.get('soCreatedDate').value,\r\n      salesOrderStatus: SalesOrderStatusEnum.Return,\r\n      customerId: this.salesOrderForm.get('customerId').value,\r\n      totalAmount: this.grandTotal,\r\n      totalDiscount: this.totalDiscount,\r\n      totalTax: this.totalTax,\r\n      note: this.salesOrderForm.get('note').value,\r\n      salesOrderItems: []\r\n    };\r\n\r\n    const salesOrderItemsArray = this.salesOrderForm.get('salesOrderItems') as UntypedFormArray;\r\n    const salesOrderItems = salesOrderItemsArray.getRawValue();\r\n    if (salesOrderItems && salesOrderItems.length > 0) {\r\n      salesOrderItems.forEach(so => {\r\n        salesOrder.salesOrderItems.push(\r\n          {\r\n            discount: parseFloat(this.quantitiesUnitPriceTaxPipe.transform(so.returnquantity, so.unitPrice, so.discountPercentage)),\r\n            discountPercentage: so.discountPercentage,\r\n            productId: so.productId,\r\n            unitId:so.unitId,\r\n            warehouseId: so.warehouseId,\r\n            quantity: so.returnquantity,\r\n            taxValue: parseFloat(this.quantitiesUnitPriceTaxPipe.transform(so.returnquantity, so.unitPrice, so.discountPercentage, so.taxValue, this.taxsMap[0])),\r\n            unitPrice: parseFloat(so.unitPrice),\r\n            salesOrderItemTaxes: so.taxValue ? [\r\n              ...so.taxValue.map(element => {\r\n                const salesOrderItemTaxes: SalesOrderItemTax = {\r\n                  taxId: element\r\n                };\r\n                return salesOrderItemTaxes;\r\n              })\r\n            ] : []\r\n          }\r\n        )\r\n      })\r\n    }\r\n    return salesOrder;\r\n  }\r\n\r\n  cancel() {\r\n    this.location.back();\r\n  }\r\n}\r\n","<div class=\"page-header-main\">\r\n  <div class=\"row align-items-center justify-content-between\">\r\n    <div class=\"col-md-auto col-sm-auto\">\r\n      <div class=\"content-header\">\r\n        <h1>{{\"RETURN_SALES_ORDER\" | translate}}</h1>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</div>\r\n\r\n<ng-container *ngIf=\"!salesOrder\">\r\n  <form autocomplete=\"off\" [formGroup]=\"salesOrderReturnForm\">\r\n    <div class=\"row\">\r\n      <div class=\"col-sm-6 col-md-4\">\r\n        <div class=\"form-group\">\r\n          <label>{{'SELECT_CUSTOMER' | translate}}</label>\r\n          <div class=\"input-group\">\r\n            <mat-select [dir]=\"langDir\" formControlName=\"customerId\" placeholder=\"{{'SELECT_CUSTOMER' | translate}}\"\r\n              class=\"form-control\">\r\n              <input class=\"form-control w-100\" formControlName=\"filerCustomer\" focused=\"'true'\" type=\"text\" \r\n                autocomplete=\"off\" placeholder=\"{{'SEARCH_OTHER_CUSTOMERS' | translate}}\">\r\n              <mat-divider></mat-divider>\r\n              <mat-option [dir]=\"langDir\" *ngFor=\"let customer of customersForSearch\" [value]=\"customer.id\">\r\n                {{customer.customerName}}\r\n              </mat-option>\r\n              <mat-option *ngIf=\"customersForSearch.length > 0\" value=\"\">{{'NONE' | translate}}</mat-option>\r\n              <mat-option [value]=\"\" *ngIf=\"customersForSearch.length==0\">\r\n                {{'NO_RECORDS' | translate}}\r\n              </mat-option>\r\n            </mat-select>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div class=\"col-sm-6 col-md-4\">\r\n        <div class=\"form-group\">\r\n          <label>{{'SELECT_SALES_ORDER' | translate}} </label>\r\n          <div class=\"input-group\">\r\n            <mat-select [dir]=\"langDir\" formControlName=\"salesOrderId\" placeholder=\"{{'SELECT_SALES_ORDER' | translate}}\"\r\n              class=\"form-control\">\r\n              <input class=\"form-control w-100\" formControlName=\"filerSalesOrder\" focused=\"'true'\" type=\"text\"\r\n                autocomplete=\"off\" placeholder=\" {{'SEARCH_OTHER_SALES_ORDER' | translate}}\">\r\n              <mat-divider></mat-divider>\r\n              <mat-option [dir]=\"langDir\" *ngFor=\"let so of salesorders\" [value]=\"so.id\">\r\n                {{so.orderNumber}}\r\n              </mat-option>\r\n              <mat-option [value]=\"\" *ngIf=\"salesorders.length==0\">\r\n                {{'NO_RECORDS' | translate}}\r\n              </mat-option>\r\n            </mat-select>\r\n          </div>\r\n\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </form>\r\n</ng-container>\r\n\r\n<ng-container *ngIf=\"salesOrder\">\r\n  <form autocomplete=\"off\" [formGroup]=\"salesOrderForm\" (ngSubmit)=\"onSalesOrderSubmit()\">\r\n    <div class=\"row\">\r\n      <div class=\"col-sm-4\">\r\n        <div class=\"form-group\">\r\n          <label class=\"text-danger\">{{'SO_NUMBER' | translate}} <span>*</span></label>\r\n          <input formControlName=\"orderNumber\" class=\"form-control w-100\" type=\"text\" [readonly]=\"this.isEdit\">\r\n          <div *ngIf=\"salesOrderForm.get('orderNumber').touched && salesOrderForm.get('orderNumber').errors\">\r\n            <div class=\"text-danger\" *ngIf=\"salesOrderForm.get('orderNumber').errors?.required\">\r\n              {{'SO_ORDER_NUMBER_IS_REQUIRED' | translate}}\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div class=\"col-md-4\">\r\n        <div class=\"form-group\">\r\n          <label class=\"text-danger\" for=\"soCreatedDate\">{{'ORDER_DATE' | translate}} *</label>\r\n          <input class=\"form-control\" id=\"soCreatedDate\" formControlName=\"soCreatedDate\"\r\n            [owlDateTimeTrigger]=\"soCreatedDate\" [owlDateTime]=\"soCreatedDate\"\r\n            placeholder=\"{{'DELIVERY_DATE' | translate}}\">\r\n          <div *ngIf=\"salesOrderForm.get('soCreatedDate').touched && salesOrderForm.get('soCreatedDate').errors\">\r\n            <div class=\"text-danger\" *ngIf=\"salesOrderForm.get('soCreatedDate').errors?.required\">\r\n              {{'ORDER_DATE_IS_REQUIRED' | translate}}\r\n            </div>\r\n          </div>\r\n          <owl-date-time [pickerType]=\"'calendar'\" #soCreatedDate></owl-date-time>\r\n        </div>\r\n      </div>\r\n      <div class=\"col-md-4\">\r\n        <div class=\"form-group\">\r\n          <label class=\"text-danger\" for=\"deliveryDate\">{{'DELIVERY_DATE' | translate}} *</label>\r\n          <input class=\"form-control\" id=\"deliveryDate\" formControlName=\"deliveryDate\"\r\n            [owlDateTimeTrigger]=\"deliveryDate\" [owlDateTime]=\"deliveryDate\"\r\n            placeholder=\"{{'DELIVERY_DATE' | translate}}\">\r\n          <div *ngIf=\"salesOrderForm.get('deliveryDate').touched && salesOrderForm.get('deliveryDate').errors\">\r\n            <div class=\"text-danger\" *ngIf=\"salesOrderForm.get('deliveryDate').errors?.required\">\r\n              {{'DELIVERY_DATE_REQUIRED' | translate}}\r\n            </div>\r\n          </div>\r\n          <owl-date-time [pickerType]=\"'calendar'\" #deliveryDate></owl-date-time>\r\n        </div>\r\n      </div>\r\n    </div>\r\n    <div class=\"row\">\r\n      <div class=\"col-sm-6 col-md-4\">\r\n        <div class=\"form-group\">\r\n          <label class=\"text-danger\">{{'CUSTOMER_NAME' | translate}} *</label>\r\n          <div class=\"input-group\">\r\n            <mat-select [dir]=\"langDir\" formControlName=\"customerId\" placeholder=\" {{'SELECT_CUSTOMER' | translate}}\" class=\"form-control\">\r\n              <!-- <input   class=\"form-control w-100\"  formControlName=\"filerCustomer\"  focused=\"'true'\" type=\"text\"  autocomplete=\"off\" placeholder=\"Search other customers\"> -->\r\n              <mat-divider></mat-divider>\r\n              <mat-option [dir]=\"langDir\" *ngFor=\"let customer of customers\" [value]=\"customer.id\">\r\n                {{customer.customerName}}\r\n              </mat-option>\r\n              <mat-option [value]=\"\" *ngIf=\"customers.length==0\">\r\n                {{'NO_RECORDS' | translate}}\r\n              </mat-option>\r\n            </mat-select>\r\n          </div>\r\n          <div *ngIf=\"salesOrderForm.get('customerId').touched && salesOrderForm.get('customerId').errors\">\r\n            <div class=\"text-danger\" *ngIf=\"salesOrderForm.get('customerId').errors?.required\">\r\n              {{'CUSTOMER_NAME_IS_REQUIRED' | translate}}\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n    <div class=\"row\">\r\n      <div class=\"col-sm-12\">\r\n        <div class=\"form-group\">\r\n          <label>{{'RETURN_NOTES' | translate}} </label>\r\n          <div class=\"input-group\">\r\n            <textarea formControlName=\"note\" class=\"form-control w-100\">\r\n          </textarea>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n    <div class=\"row\">\r\n      <div class=\"col-sm-12\" formArrayName=\"salesOrderItems\">\r\n        <div class=\"row\">\r\n          <div class=\"col\">\r\n            <div class=\"table-responsive\">\r\n              <table class=\"table table-bordered table-hover table-sm\">\r\n                <tr>\r\n                  <th class=\"table-column-50\">\r\n                    &nbsp;\r\n                  </th>\r\n                  <th class=\"table-column-200\">\r\n                    {{'PRODUCT' | translate}}\r\n                  </th>\r\n                  <th class=\"table-column-200\">\r\n                    {{'WAREHOUSE' | translate}}\r\n                  </th>\r\n                  <th class=\"table-column-150\">\r\n                    {{'UNIT' | translate}}\r\n                  </th>\r\n                  <th class=\"table-column-130\">\r\n                    {{'PRICE' | translate}}\r\n                  </th>\r\n                  <th class=\"table-column-120\">\r\n                    {{'QUANTITY' | translate}}\r\n                  </th>\r\n                  <th class=\"table-column-120\">\r\n                    {{'RETURN_QUANTITY' | translate}}\r\n                  </th>\r\n                  <th class=\"table-column-100\">\r\n                    {{'SUBTOTAL_BEFORE_DISCOUNT' | translate}}\r\n                  </th>\r\n                  <th class=\"table-column-100\">\r\n                    {{'DISCOUNT' | translate}}%\r\n                  </th>\r\n                  <th class=\"table-column-100\">\r\n                    {{'SUBTOTAL_AFTER_DISCOUNT' | translate}}\r\n                  </th>\r\n                  <th class=\"table-column-300\">\r\n                    {{'TAX' | translate}}\r\n                  </th>\r\n                  <th class=\"table-column-150\">\r\n                    {{'TOTAL' | translate}}\r\n                  </th>\r\n                </tr>\r\n                <tr [formGroupName]=\"i\" *ngFor=\"let salesOrderItem of salesOrderItemsArray?.controls; let i = index\">\r\n                  <td>\r\n                    <button *ngIf=\"salesOrderItemsArray.length !==1\" (click)=\"onRemoveSalesOrderItem(i)\" mat-icon-button\r\n                      aria-label=\"Action\">\r\n                      <mat-icon class=\"btn-danger\">delete_forever</mat-icon>\r\n                    </button>\r\n                  </td>\r\n                  <td>\r\n                    <mat-select [dir]=\"langDir\" formControlName=\"productId\" placeholder=\"{{'SELECT_PRODUCT' | translate}}\"\r\n                      (selectionChange)=\"onProductSelectionChange($event,i)\" class=\"form-control\">\r\n                      <!-- <input   class=\"form-control w-100\"  formControlName=\"filterProductValue\"  focused=\"'true'\" type=\"text\"  autocomplete=\"off\" placeholder=\"search other products\"> -->\r\n                      <mat-divider></mat-divider>\r\n                      <mat-option [dir]=\"langDir\" *ngFor=\"let a of filterProductsMap[i]\" [value]=\"a.id\">\r\n                        {{a.name}}\r\n                      </mat-option>\r\n                      <mat-option [dir]=\"langDir\" [value]=\"\" *ngIf=\"filterProductsMap[i].length==0\">\r\n                        {{'NO_RECORDS' | translate}}\r\n                      </mat-option>\r\n                    </mat-select>\r\n                    <div *ngIf=\"salesOrderItem.get('productId').touched && salesOrderItem.get('productId').errors\">\r\n                      <div class=\"text-danger\" *ngIf=\"salesOrderItem.get('productId').errors?.required\">\r\n                        {{'PRODUCT_IS_REQUIRED' | translate}}\r\n                      </div>\r\n                    </div>\r\n                  </td>\r\n                  <td>\r\n                    <mat-select [dir]=\"langDir\"  class=\"form-control-plaintext\" formControlName=\"warehouseId\">\r\n                      <mat-option *ngFor=\"let warehouse of warehouseMap[i]\" [value]=\"warehouse.id\">\r\n                        {{warehouse.name}}\r\n                      </mat-option>\r\n                    </mat-select>\r\n                  </td>\r\n                  <td>\r\n                    <mat-select [dir]=\"langDir\" formControlName=\"unitId\" class=\"form-control-plaintext\">\r\n                      <mat-option [dir]=\"langDir\" *ngFor=\"let a of unitsMap[i]\" [value]=\"a.id\">\r\n                        {{a.name}}\r\n                      </mat-option>\r\n                    </mat-select>\r\n                  </td>\r\n                  <td>\r\n                    <input class=\"form-control\" type=\"number\" formControlName=\"unitPrice\"\r\n                      placeholder=\"{{'UNIT_PER_PRICE' | translate}}\">\r\n                    <div *ngIf=\"salesOrderItem.get('unitPrice').touched && salesOrderItem.get('unitPrice').errors\">\r\n                      <div class=\"text-danger\" *ngIf=\"salesOrderItem.get('unitPrice').errors?.required\">\r\n                        {{'UNIT_IS_REQUIRED' | translate}}\r\n                      </div>\r\n                    </div>\r\n                  </td>\r\n                  <td>\r\n                    <input class=\"form-control\" type=\"number\" formControlName=\"quantity\"\r\n                      placeholder=\"{{'QUANTITY' | translate}}\">\r\n                    <div *ngIf=\"salesOrderItem.get('quantity').touched && salesOrderItem.get('quantity').errors\">\r\n                      <div class=\"text-danger\" *ngIf=\"salesOrderItem.get('quantity').errors?.required\">\r\n                        {{'QUANTITY_IS_REQUIRED' | translate}}\r\n                      </div>\r\n                    </div>\r\n                  </td>\r\n                  <td>\r\n                    <input class=\"form-control\" type=\"number\" (change)=\"onQuantityChange()\"\r\n                      formControlName=\"returnquantity\" placeholder=\"{{'RETURN_QUANTITY' | translate}}\">\r\n                    <div *ngIf=\"salesOrderItem.get('quantity').touched && salesOrderItem.get('returnquantity').errors\">\r\n                      <div class=\"text-danger\" *ngIf=\"salesOrderItem.get('returnquantity').errors?.required\">\r\n                        {{'QUANTITY_IS_REQUIRED' | translate}}\r\n                      </div>\r\n                      <div class=\"text-danger\" *ngIf=\"salesOrderItem.get('returnquantity').errors?.max\">\r\n                        {{'QUANTITY_IS_MAX' | translate}}\r\n                      </div>\r\n                      <div class=\"text-danger\" *ngIf=\"salesOrderItem.get('returnquantity').errors?.min\">\r\n                        {{'QUANTITY_IS_MIN' | translate}}\r\n                      </div>\r\n                    </div>\r\n                  </td>\r\n                  <td>\r\n                    {{ salesOrderItem.get('returnquantity').value | quantitiesunitprice :\r\n                    salesOrderItem.get('unitPrice').value | customCurrency}}\r\n                  </td>\r\n                  <td>\r\n                    <input class=\"form-control\" formControlName=\"discountPercentage\" (change)=\"onDiscountChange()\"\r\n                      placeholder=\"{{'DISCOUNT' | translate}}\">\r\n                  </td>\r\n                  <td>\r\n                    {{ salesOrderItem.get('returnquantity').value | quantitiesunitprice :\r\n                    salesOrderItem.get('unitPrice').value : salesOrderItem.get('discountPercentage').value |\r\n                    customCurrency }}\r\n\r\n                    <div class=\"text-danger\" *ngIf=\"salesOrderItem.get('discountPercentage').value !=0\">\r\n                      {{'DISCOUNT_AMOUNT' | translate}}: {{ salesOrderItem.get('returnquantity').value |\r\n                      quantitiesunitpriceTax : salesOrderItem.get('unitPrice').value :\r\n                      salesOrderItem.get('discountPercentage').value | customCurrency }}\r\n                    </div>\r\n                  </td>\r\n                  <td>\r\n                    <mat-select [dir]=\"langDir\" formControlName=\"taxValue\" placeholder=\"{{'TAX' | translate}}\"\r\n                      (selectionChange)=\"onTaxSelectionChange()\" class=\"form-control\" multiple>\r\n                      <mat-option [dir]=\"langDir\" *ngFor=\"let tax of taxsMap[i]\" [value]=\"tax.id\">{{tax.name}} ({{tax.percentage}}%)\r\n                      </mat-option>\r\n                    </mat-select>\r\n                    <div *ngIf=\"salesOrderItem.get('taxValue').touched && salesOrderItem.get('taxValue').errors\">\r\n                      <div class=\"text-danger\" *ngIf=\"salesOrderItem.get('taxValue').errors?.required\">\r\n                        {{'TAX_IS_REQUIRED' | translate}}\r\n                      </div>\r\n                    </div>\r\n                  </td>\r\n                  <td>\r\n                    {{ salesOrderItem.get('returnquantity').value | quantitiesunitprice :\r\n                    salesOrderItem.get('unitPrice').value : salesOrderItem.get('discountPercentage').value:\r\n                    salesOrderItem.get('taxValue').value: taxsMap[i] | customCurrency}}\r\n                    <div class=\"text-danger\" *ngIf=\"salesOrderItem.get('taxValue').value\">\r\n                      {{'TAX_AMOUNT' | translate}}: {{ salesOrderItem.get('returnquantity').value |\r\n                      quantitiesunitpriceTax : salesOrderItem.get('unitPrice').value :\r\n                      salesOrderItem.get('discountPercentage').value : salesOrderItem.get('taxValue').value: taxsMap[i]\r\n                      | customCurrency }}\r\n                    </div>\r\n                  </td>\r\n                </tr>\r\n              </table>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n    <div class=\"row mt-2\">\r\n      <div class=\"col-10 text-right font-weight-bold\">\r\n        {{'SUB_TOTAL_BEFORE_DISCOUNT' | translate}}\r\n      </div>\r\n      <div class=\"col-2 text-left  font-weight-bold\">\r\n        {{totalBeforeDiscount | customCurrency}}\r\n      </div>\r\n    </div>\r\n    <div class=\"row\">\r\n      <div class=\"col-10 text-right font-weight-bold\">\r\n        {{\"TOTAL_DISCOUNT\" | translate}}:\r\n      </div>\r\n      <div class=\"col-2 text-left text-danger  font-weight-bold\">\r\n        {{totalDiscount | customCurrency}}\r\n      </div>\r\n    </div>\r\n    <div class=\"row\">\r\n      <div class=\"col-10 text-right font-weight-bold\">\r\n        {{\"TOTAL_TAX\" | translate}}:\r\n      </div>\r\n      <div class=\"col-2 text-left  font-weight-bold\">\r\n        {{totalTax | customCurrency}}\r\n      </div>\r\n    </div>\r\n    <div class=\"row\">\r\n      <div class=\"col-12\">\r\n        <mat-divider></mat-divider>\r\n      </div>\r\n    </div>\r\n    <div class=\"row\">\r\n      <div class=\"col-10 text-right font-weight-bold\">\r\n        {{\"GRAND_TOTAL\" | translate}} :\r\n      </div>\r\n      <div class=\"col-2 text-left font-weight-bold\">\r\n        {{grandTotal | customCurrency}}\r\n      </div>\r\n    </div>\r\n\r\n    <div class=\"row\">\r\n      <div class=\"col-md-12 mb-1\">\r\n        <button *hasClaim=\"'SO_RETURN_SO'\" type=\"submit\" class=\"btn btn-success btn-sm m-right-10\"><i\r\n            class=\"fas fa-save\"></i> {{'RETURN' |\r\n          translate}}</button>\r\n        <button type=\"button\" (click)=\"cancel()\" class=\"btn btn-danger btn-sm\"><i\r\n            class=\"fas fa-times-circle\"></i>\r\n          {{'CANCEL' | translate}}\r\n        </button>\r\n      </div>\r\n    </div>\r\n  </form>\r\n</ng-container>\r\n\r\n\r\n\r\n<div class=\"loading-shade\" *ngIf=\"isLoading\">\r\n  <mat-spinner *ngIf=\"isLoading\"></mat-spinner>\r\n</div>"],"names":[],"sourceRoot":"webpack:///","x_google_ignoreList":[]}