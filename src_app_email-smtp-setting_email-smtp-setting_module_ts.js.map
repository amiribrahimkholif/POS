{"version":3,"file":"src_app_email-smtp-setting_email-smtp-setting_module_ts.js","mappings":";;;;;;;;;;;;;;;AAKyB;;;AAOlB,MAAM,8BAA8B;IACvC,YAAoB,uBAAgD;QAAhD,4BAAuB,GAAvB,uBAAuB,CAAyB;IAAI,CAAC;IACzE,OAAO,CACH,KAA6B,EAC7B,KAA0B;QAE1B,MAAM,EAAE,GAAG,KAAK,CAAC,QAAQ,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC;QACpC,OAAO,IAAI,CAAC,uBAAuB,CAAC,mBAAmB,CAAC,EAAE,CAAiC,CAAC;IAChG,CAAC;;4GARQ,8BAA8B;+HAA9B,8BAA8B,WAA9B,8BAA8B;;;;;;;;;;;;;;;;;;;;;;;;;;ACPY;;;;;;;;;;;;;ICGjD,6EACyC;IACvC,mEAA2B;IAC3B,uDACF;;IAAA,4DAAS;;IAJ6C,6IAAqC;IAGzF,0DACF;IADE,+JACF;;;IAQA,yEAA+D;IAAA,uDAAyB;;IAAA,4DAAK;;IAA9B,0DAAyB;IAAzB,oJAAyB;;;;IAEtF,6EAC0D;IACxD,mEAAiC;IACjC,2EAAiC;IAAC,uDAAuB;;IAAA,4DAAO;;;IAHZ,sKAA0D;IAG5E,0DAAuB;IAAvB,kJAAuB;;;;IAE3D,6EACqD;IAAnD,4ZAAS,8GAAwC,KAAC;IAClD,mEAAgC;IAChC,2EAAiC;IAAC,uDAAyB;;IAAA,4DAAO;;IAAhC,0DAAyB;IAAzB,oJAAyB;;;IAT/D,yEAAyE;IACvE,sIAIS;IACT,sIAIS;IACX,4DAAK;;IAVM,0DAA2C;IAA3C,uGAA2C;IAK3C,0DAA2C;IAA3C,uGAA2C;;;IAStD,yEAA+D;IAAC,uDAAwB;;IAAA,4DAAK;;IAA7B,0DAAwB;IAAxB,mJAAwB;;;IACxF,yEAAyE;IAAC,uDAA0B;IAAA,4DAAK;;;IAA/B,0DAA0B;IAA1B,qGAA0B;;;IAIpG,yEAA+D;IAAC,uDAA4B;;IAAA,4DAAK;;IAAjC,0DAA4B;IAA5B,uJAA4B;;;IAC5F,yEAAyE;IAAC,uDAA8B;IAAA,4DAAK;;;IAAnC,0DAA8B;IAA9B,yGAA8B;;;IAIxG,yEAA+D;IAAC,uDAAwB;;IAAA,4DAAK;;IAA7B,0DAAwB;IAAxB,mJAAwB;;;IACxF,yEAAyE;IAAC,uDAA0B;IAAA,4DAAK;;;IAA/B,0DAA0B;IAA1B,qGAA0B;;;IAIpG,yEAA+D;IAAC,uDAA8B;;IAAA,4DAAK;;IAAnC,0DAA8B;IAA9B,yJAA8B;;;IAC9F,yEAAyE;IAAC,uDACjE;IAAA,4DAAK;;;IAD4D,0DACjE;IADiE,yHACjE;;;IAEX,oEAAyE;;;IACzE,oEAAkE;;AD3C/D,MAAM,6BAA8B,SAAQ,iEAAa;IAI9D,YAAoB,uBAAgD,EAC1D,mBAAwC,EACxC,aAA4B,EAC7B,kBAAsC;QAC7C,KAAK,CAAC,kBAAkB,CAAC,CAAC;QAJR,4BAAuB,GAAvB,uBAAuB,CAAyB;QAC1D,wBAAmB,GAAnB,mBAAmB,CAAqB;QACxC,kBAAa,GAAb,aAAa,CAAe;QAC7B,uBAAkB,GAAlB,kBAAkB,CAAoB;QAN/C,sBAAiB,GAAuB,EAAE,CAAC;QAC3C,qBAAgB,GAAa,CAAC,QAAQ,EAAE,UAAU,EAAE,MAAM,EAAE,MAAM,EAAE,WAAW,CAAC,CAAC;QAO/E,IAAI,CAAC,UAAU,EAAE,CAAC;IACpB,CAAC;IAED,QAAQ;QACN,IAAI,CAAC,oBAAoB,EAAE,CAAC;IAC9B,CAAC;IAED,oBAAoB;QAClB,IAAI,CAAC,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC,uBAAuB,CAAC,oBAAoB,EAAE,CAAC,SAAS,CAAC,CAAC,QAA4B,EAAE,EAAE;YAC9G,IAAI,CAAC,iBAAiB,GAAG,QAAQ,CAAC;QACpC,CAAC,CAAC;IACJ,CAAC;IAED,sBAAsB,CAAC,OAAyB;QAC9C,MAAM,IAAI,GAAE,IAAI,CAAC,kBAAkB,CAAC,QAAQ,CAAC,iCAAiC,CAAC,CAAC;QAChF,IAAI,CAAC,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC,mBAAmB;aACtC,wBAAwB,CAAC,GAAG,IAAI,IAAI,OAAO,CAAC,IAAI,EAAE,CAAC;aACnD,SAAS,CAAC,CAAC,MAAe,EAAE,EAAE;YAC7B,IAAI,MAAM,EAAE;gBACV,IAAI,CAAC,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC,uBAAuB,CAAC,sBAAsB,CAAC,OAAO,CAAC,EAAE,CAAC,CAAC,SAAS,CAAC,GAAG,EAAE;oBAC9F,IAAI,CAAC,aAAa,CAAC,OAAO,CAAC,IAAI,CAAC,kBAAkB,CAAC,QAAQ,CAAC,yCAAyC,CAAC,CAAC,CAAC;oBACxG,IAAI,CAAC,oBAAoB,EAAE,CAAC;gBAC9B,CAAC,CAAC,CAAC;aACJ;QACH,CAAC,CAAC,CAAC;IACP,CAAC;;0GAlCU,6BAA6B;2HAA7B,6BAA6B;QCb1C,yEAA8B;QAIjB,uDAAqC;;QAAA,4DAAK;QAGnD,yEAAqC;QACnC,+HAIS;QACX,4DAAM;QAGV,yEAA8B;QAG1B,4EAAoC;QAClC,yHAA6F;QAC7F,yHAWK;QACP,qEAAe;QAEf,6EAAkC;QAChC,0HAA6F;QAC7F,0HAAyG;QAC3G,qEAAe;QAEf,6EAAsC;QACpC,yHAAiG;QACjG,yHAA6G;QAC/G,qEAAe;QAEf,6EAAkC;QAChC,0HAA6F;QAC7F,0HAAyG;QAC3G,qEAAe;QAEf,6EAAuC;QACrC,0HAAmG;QACnG,0HACc;QAChB,qEAAe;QACf,0HAAyE;QACzE,0HAAkE;QACpE,4DAAQ;;QArDG,0DAAqC;QAArC,gKAAqC;QAInC,0DAA2C;QAA3C,uGAA2C;QASjD,0DAAe;QAAf,4EAAe;QAsCA,2DAAkC;QAAlC,iGAAkC;QACrB,0DAA0B;QAA1B,kGAA0B;;;;;;;;;;;;;;;;;;;;;;ACvDR;AACqD;AACtD;AAC4D;AAChC;;;AAElF,MAAM,MAAM,GAAW;IACrB;QACE,IAAI,EAAE,EAAE;QACR,SAAS,EAAE,qHAA6B;QACxC,IAAI,EAAE,EAAE,SAAS,EAAE,iCAAiC,EAAE;QACtD,WAAW,EAAE,CAAC,gEAAS,CAAC;KACzB,EAAE;QACD,IAAI,EAAE,YAAY;QAClB,SAAS,EAAE,2HAA+B;QAC1C,IAAI,EAAE,EAAE,SAAS,EAAE,iCAAiC,EAAE;QACtD,OAAO,EAAE,EAAE,WAAW,EAAE,2FAA8B,EAAE;QACxD,WAAW,EAAE,CAAC,gEAAS,CAAC;KACzB,EAAE;QACD,IAAI,EAAE,QAAQ;QACd,SAAS,EAAE,2HAA+B;QAC1C,IAAI,EAAE,EAAE,SAAS,EAAE,iCAAiC,EAAE;QACtD,WAAW,EAAE,CAAC,gEAAS,CAAC;KACzB;CACF,CAAC;AAOK,MAAM,6BAA6B;;0GAA7B,6BAA6B;0HAA7B,6BAA6B;8HAH9B,kEAAqB,CAAC,MAAM,CAAC,EAC7B,yDAAY;mIAEX,6BAA6B,oFAF9B,yDAAY;;;;;;;;;;;;;;;;;;;;;;;;;;AC7BuB;AAC6D;AACxB;AAC3B;AACqB;AACoC;AAC7D;AACiB;AACY;AAC7B;;AAiB9C,MAAM,sBAAsB;;4FAAtB,sBAAsB;mHAAtB,sBAAsB;wHAFtB,CAAC,2FAA8B,CAAC,YARzC,yDAAY;QACZ,+DAAY;QACZ,+DAAmB;QACnB,6FAA6B;QAC7B,mEAAc;QACd,wFAAwB;QACxB,iFAAoB;mIAIX,sBAAsB,mBAZlB,qHAA6B,EAAE,2HAA+B,aAE3E,yDAAY;QACZ,+DAAY;QACZ,+DAAmB;QACnB,6FAA6B;QAC7B,mEAAc;QACd,wFAAwB;QACxB,iFAAoB;;;;;;;;;;;;;;;;;;;ACjBoB;;;;AAKrC,MAAM,uBAAuB;IAElC,YAAoB,UAAsB,EAChC,sBAA8C;QADpC,eAAU,GAAV,UAAU,CAAY;QAChC,2BAAsB,GAAtB,sBAAsB,CAAwB;IAAI,CAAC;IAE7D,oBAAoB;QAClB,MAAM,GAAG,GAAG,kBAAkB,CAAC;QAC/B,OAAO,IAAI,CAAC,UAAU,CAAC,GAAG,CAAqB,GAAG,CAAC;aAChD,IAAI,CAAC,0DAAU,CAAC,IAAI,CAAC,sBAAsB,CAAC,WAAW,CAAC,CAAC,CAAC;IAC/D,CAAC;IAED,mBAAmB,CAAC,EAAU;QAC5B,MAAM,GAAG,GAAG,oBAAoB,EAAE,EAAE,CAAC;QACrC,OAAO,IAAI,CAAC,UAAU,CAAC,GAAG,CAAmB,GAAG,CAAC;aAC9C,IAAI,CAAC,0DAAU,CAAC,IAAI,CAAC,sBAAsB,CAAC,WAAW,CAAC,CAAC,CAAC;IAC/D,CAAC;IAED,mBAAmB,CAAC,OAAyB;QAC3C,MAAM,GAAG,GAAG,kBAAkB,CAAC;QAC/B,OAAO,IAAI,CAAC,UAAU,CAAC,IAAI,CAAmB,GAAG,EAAE,OAAO,CAAC;aACxD,IAAI,CAAC,0DAAU,CAAC,IAAI,CAAC,sBAAsB,CAAC,WAAW,CAAC,CAAC,CAAC;IAC/D,CAAC;IAED,sBAAsB,CAAC,OAAyB;QAC9C,MAAM,GAAG,GAAG,oBAAoB,OAAO,CAAC,EAAE,EAAE,CAAC;QAC7C,OAAO,IAAI,CAAC,UAAU,CAAC,GAAG,CAAmB,GAAG,EAAE,OAAO,CAAC;aACvD,IAAI,CAAC,0DAAU,CAAC,IAAI,CAAC,sBAAsB,CAAC,WAAW,CAAC,CAAC,CAAC;IAC/D,CAAC;IAED,sBAAsB,CAAC,EAAU;QAC/B,MAAM,GAAG,GAAG,oBAAoB,EAAE,EAAE,CAAC;QACrC,OAAO,IAAI,CAAC,UAAU,CAAC,MAAM,CAAmB,GAAG,CAAC;aACjD,IAAI,CAAC,0DAAU,CAAC,IAAI,CAAC,sBAAsB,CAAC,WAAW,CAAC,CAAC,CAAC;IAC/D,CAAC;;8FAjCU,uBAAuB;wHAAvB,uBAAuB,WAAvB,uBAAuB,mBAFtB,MAAM;;;;;;;;;;;;;;;;;;;;;;;;;;;ACR8D;AAK3B;;;;;;;;;;;;;ICF/C,qEAAwB;IACtB,uDACF;;IAAA,4DAAK;;IADH,0DACF;IADE,qKACF;;;IACA,qEAAuB;IACrB,uDACF;;IAAA,4DAAK;;IADH,0DACF;IADE,qKACF;;;IAYE,yEAA8E;IAC5E,uDACF;;IAAA,4DAAM;;IADJ,0DACF;IADE,+JACF;;;IAHF,sEAAuF;IACrF,mIAEM;IACR,4DAAM;;;IAHsB,0DAAkD;IAAlD,+KAAkD;;;IAW5E,yEAA8E;IAC5E,uDACF;;IAAA,4DAAM;;IADJ,0DACF;IADE,+JACF;;;IAHF,sEAAuF;IACrF,mIAEM;IACR,4DAAM;;;IAHsB,0DAAkD;IAAlD,+KAAkD;;;IAW5E,yEAAkF;IAChF,uDACF;;IAAA,4DAAM;;IADJ,0DACF;IADE,oKACF;;;IAHF,sEAA+F;IAC7F,mIAEM;IACR,4DAAM;;;IAHsB,0DAAsD;IAAtD,uLAAsD;;;IAWhF,yEAAkF;IAChF,uDACF;;IAAA,4DAAM;;IADJ,0DACF;IADE,mKACF;;;IAHF,sEAA+F;IAC7F,mIAEM;IACR,4DAAM;;;IAHsB,0DAAsD;IAAtD,uLAAsD;;;IAQlF,uEAAuD;IACrD,uDACF;;IAAA,4DAAO;;IADL,0DACF;IADE,yJACF;;;IACA,uEAAwD;IACtD,uDACF;;IAAA,4DAAO;;IADL,0DACF;IADE,yJACF;;;IAKA,uEAAqD;IACnD,uDACF;;IAAA,4DAAO;;IADL,0DACF;IADE,yJACF;;;IACA,uEAAsD;IACpD,uDACF;;IAAA,4DAAO;;IADL,0DACF;IADE,yJACF;;;;IAIF,6EACkB;IAD8E,mTAAS,wFAAsB,KAAC;IAC9G,mEAA2B;IAAC,uDAAuB;;IAAA,4DAAS;;IAAhC,0DAAuB;IAAvB,kJAAuB;;;ADpEpE,MAAM,+BAAgC,SAAQ,iEAAa;IAGhE,YACU,MAAc,EACd,EAAsB,EACtB,WAA2B,EAC3B,uBAAgD,EAChD,aAA4B,EAC7B,kBAAsC;QAE7C,KAAK,CAAC,kBAAkB,CAAC,CAAC;QAPlB,WAAM,GAAN,MAAM,CAAQ;QACd,OAAE,GAAF,EAAE,CAAoB;QACtB,gBAAW,GAAX,WAAW,CAAgB;QAC3B,4BAAuB,GAAvB,uBAAuB,CAAyB;QAChD,kBAAa,GAAb,aAAa,CAAe;QAC7B,uBAAkB,GAAlB,kBAAkB,CAAoB;QAR/C,eAAU,GAAY,KAAK,CAAC;QAW1B,IAAI,CAAC,UAAU,EAAE,CAAC;IACpB,CAAC;IAED,QAAQ;QACN,IAAI,CAAC,mBAAmB,EAAE,CAAC;QAC3B,IAAI,CAAC,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,SAAS,CAC9C,CAAC,IAAuC,EAAE,EAAE;YAC1C,IAAI,IAAI,CAAC,WAAW,EAAE;gBACpB,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC;gBACvB,IAAI,CAAC,eAAe,CAAC,UAAU,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC;aACnD;QACH,CAAC,CAAC,CAAC;IACP,CAAC;IAED,mBAAmB;QACjB,IAAI,CAAC,eAAe,GAAG,IAAI,CAAC,EAAE,CAAC,KAAK,CAAC;YACnC,EAAE,EAAE,CAAC,EAAE,CAAC;YACR,IAAI,EAAE,CAAC,EAAE,EAAE,CAAC,+DAAmB,CAAC,CAAC;YACjC,QAAQ,EAAE,CAAC,EAAE,EAAE,CAAC,+DAAmB,CAAC,CAAC;YACrC,QAAQ,EAAE,CAAC,EAAE,EAAE,CAAC,+DAAmB,CAAC,CAAC;YACrC,WAAW,EAAE,CAAC,KAAK,CAAC;YACpB,IAAI,EAAE,CAAC,EAAE,EAAE,CAAC,+DAAmB,CAAC,CAAC;YACjC,SAAS,EAAE,CAAC,KAAK,CAAC;SACnB,CAAC,CAAC;IACL,CAAC;IAED,oBAAoB;QAClB,IAAI,IAAI,CAAC,eAAe,CAAC,KAAK,EAAE;YAC9B,MAAM,gBAAgB,GAAG,IAAI,CAAC,iBAAiB,EAAE,CAAC;YAClD,IAAI,IAAI,CAAC,UAAU,EAAE;gBACnB,IAAI,CAAC,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC,uBAAuB,CAAC,sBAAsB,CAAC,gBAAgB,CAAC,CAAC,SAAS,CAAC,GAAG,EAAE;oBACpG,IAAI,CAAC,aAAa,CAAC,OAAO,CAAC,IAAI,CAAC,kBAAkB,CAAC,QAAQ,CAAC,yCAAyC,CAAC,CAAC,CAAC;oBACxG,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,aAAa,CAAC,CAAC,CAAC;gBACxC,CAAC,CAAC,CAAC;aACJ;iBAAM;gBACL,IAAI,CAAC,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC,uBAAuB,CAAC,mBAAmB,CAAC,gBAAgB,CAAC,CAAC,SAAS,CAAC,GAAG,EAAE;oBACjG,IAAI,CAAC,aAAa,CAAC,OAAO,CAAC,IAAI,CAAC,kBAAkB,CAAC,QAAQ,CAAC,yCAAyC,CAAC,CAAC,CAAC;oBACxG,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,aAAa,CAAC,CAAC,CAAC;gBACxC,CAAC,CAAC,CAAC;aACJ;SACF;aAAM;YACL,IAAI,CAAC,eAAe,CAAC,gBAAgB,EAAE,CAAC;SACzC;IACH,CAAC;IAED,iBAAiB;QACf,MAAM,EAAE,GAAG,IAAI,CAAC,eAAe,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,KAAK,CAAC;QAChD,MAAM,IAAI,GAAqB;YAC7B,EAAE,EAAE,EAAE;YACN,IAAI,EAAE,IAAI,CAAC,eAAe,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC,KAAK;YAC5C,QAAQ,EAAE,IAAI,CAAC,eAAe,CAAC,GAAG,CAAC,UAAU,CAAC,CAAC,KAAK;YACpD,QAAQ,EAAE,IAAI,CAAC,eAAe,CAAC,GAAG,CAAC,UAAU,CAAC,CAAC,KAAK;YACpD,WAAW,EAAE,IAAI,CAAC,eAAe,CAAC,GAAG,CAAC,aAAa,CAAC,CAAC,KAAK;YAC1D,IAAI,EAAE,IAAI,CAAC,eAAe,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC,KAAK;YAC5C,SAAS,EAAE,IAAI,CAAC,eAAe,CAAC,GAAG,CAAC,WAAW,CAAC,CAAC,KAAK;SACvD;QACD,OAAO,IAAI,CAAC;IACd,CAAC;;8GArEU,+BAA+B;6HAA/B,+BAA+B;QCd5C,yEAA8B;QAItB,yHAEK;QACL,yHAEK;QACP,4DAAM;QAIZ,0EAAoC;QAIA,wDAAyB;;QAAA,4DAAQ;QAC7D,wEAA+D;QAC/D,6HAIM;QACR,4DAAM;QAER,0EAAsB;QAEU,wDAAyB;;QAAA,4DAAQ;QAC7D,wEAAiE;QACjE,6HAIM;QACR,4DAAM;QAER,0EAAsB;QAEU,wDAA8B;;QAAA,4DAAQ;QAClE,wEAAmE;QACnE,6HAIM;QACR,4DAAM;QAER,0EAAsB;QAEU,wDAA6B;;QAAA,4DAAQ;QACjE,wEAAmG;QACnG,6HAIM;QACR,4DAAM;QAER,2EAA+C;QAE3C,+HAEO;QACP,+HAEO;QACT,4DAAmB;QAErB,2EAA+C;QAE3C,+HAEO;QACP,+HAEO;QACT,4DAAmB;QAErB,2EAAgC;QAC9B,oIAC8E;QAC9E,8EAAmF;QAAA,oEAC/C;QAClC,wDACF;;QAAA,4DAAS;;QAlFF,0DAAiB;QAAjB,iFAAiB;QAGjB,0DAAgB;QAAhB,gFAAgB;QAOvB,0DAA6B;QAA7B,0FAA6B;QAIC,0DAAyB;QAAzB,sJAAyB;QAE/C,0DAA+E;QAA/E,mJAA+E;QASzD,0DAAyB;QAAzB,sJAAyB;QAE/C,0DAA+E;QAA/E,mJAA+E;QASzD,0DAA8B;QAA9B,2JAA8B;QAEpD,0DAAuF;QAAvF,2JAAuF;QASjE,0DAA6B;QAA7B,0JAA6B;QAEnD,0DAAuF;QAAvF,2JAAuF;QAQ/C,0DAAe;QAAf,4EAAe;QACtD,0DAA8C;QAA9C,8GAA8C;QAG9C,0DAA+C;QAA/C,+GAA+C;QAMV,0DAAe;QAAf,4EAAe;QACpD,0DAA4C;QAA5C,4GAA4C;QAG5C,0DAA6C;QAA7C,6GAA6C;QAM7C,0DAA2C;QAA3C,uGAA2C;QAEA,0DAA8B;QAA9B,8IAA8B;QAEhF,0DACF;QADE,uJACF","sources":["./src/app/email-smtp-setting/email-settting-detail.resolver.ts","./src/app/email-smtp-setting/email-smtp-setting-list/email-smtp-setting-list.component.ts","./src/app/email-smtp-setting/email-smtp-setting-list/email-smtp-setting-list.component.html","./src/app/email-smtp-setting/email-smtp-setting-routing.module.ts","./src/app/email-smtp-setting/email-smtp-setting.module.ts","./src/app/email-smtp-setting/email-smtp-setting.service.ts","./src/app/email-smtp-setting/manage-email-smtp-setting/manage-email-smtp-setting.component.ts","./src/app/email-smtp-setting/manage-email-smtp-setting/manage-email-smtp-setting.component.html"],"sourcesContent":["import { Injectable } from '@angular/core';\r\nimport {\r\n    Resolve,\r\n    ActivatedRouteSnapshot,\r\n    RouterStateSnapshot\r\n} from '@angular/router';\r\nimport { EmailSMTPSetting } from '@core/domain-classes/email-smtp-setting';\r\nimport { Role } from '@core/domain-classes/role';\r\nimport { Observable } from 'rxjs';\r\nimport { EmailSmtpSettingService } from './email-smtp-setting.service';\r\n\r\n@Injectable()\r\nexport class EmailSMTPSettingDetailResolver implements Resolve<EmailSMTPSetting> {\r\n    constructor(private emailSmtpSettingService: EmailSmtpSettingService) { }\r\n    resolve(\r\n        route: ActivatedRouteSnapshot,\r\n        state: RouterStateSnapshot\r\n    ): Observable<EmailSMTPSetting> {\r\n        const id = route.paramMap.get('id');\r\n        return this.emailSmtpSettingService.getEmailSMTPSetting(id) as Observable<EmailSMTPSetting>;\r\n    }\r\n}","import { Component, OnInit } from '@angular/core';\r\nimport { CommonDialogService } from '@core/common-dialog/common-dialog.service';\r\nimport { EmailSMTPSetting } from '@core/domain-classes/email-smtp-setting';\r\nimport { TranslationService } from '@core/services/translation.service';\r\nimport { ToastrService } from 'ngx-toastr';\r\nimport { BaseComponent } from 'src/app/base.component';\r\nimport { EmailSmtpSettingService } from '../email-smtp-setting.service';\r\n\r\n@Component({\r\n  selector: 'app-email-smtp-setting-list',\r\n  templateUrl: './email-smtp-setting-list.component.html',\r\n  styleUrls: ['./email-smtp-setting-list.component.scss']\r\n})\r\nexport class EmailSmtpSettingListComponent extends BaseComponent implements OnInit {\r\n  emailSMTPSettings: EmailSMTPSetting[] = [];\r\n  displayedColumns: string[] = ['action', 'userName', 'host', 'port', 'isDefault'];\r\n\r\n  constructor(private emailSmtpSettingService: EmailSmtpSettingService,\r\n    private commonDialogService: CommonDialogService,\r\n    private toastrService: ToastrService,\r\n    public translationService: TranslationService) {\r\n    super(translationService);\r\n    this.getLangDir();\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.getEmailSMTPSettings();\r\n  }\r\n\r\n  getEmailSMTPSettings() {\r\n    this.sub$.sink = this.emailSmtpSettingService.getEmailSMTPSettings().subscribe((settings: EmailSMTPSetting[]) => {\r\n      this.emailSMTPSettings = settings;\r\n    })\r\n  }\r\n\r\n  deleteEmailSMTPSetting(setting: EmailSMTPSetting) {\r\n    const areU= this.translationService.getValue('ARE_YOU_SURE_YOU_WANT_TO_DELETE');\r\n    this.sub$.sink = this.commonDialogService\r\n      .deleteConformationDialog(`${areU} ${setting.host}`)\r\n      .subscribe((isTrue: boolean) => {\r\n        if (isTrue) {\r\n          this.sub$.sink = this.emailSmtpSettingService.deleteEmailSMTPSetting(setting.id).subscribe(() => {\r\n            this.toastrService.success(this.translationService.getValue('EMAIL_SMTP_SETTING_DELETED_SUCCESSFULLY'));\r\n            this.getEmailSMTPSettings();\r\n          });\r\n        }\r\n      });\r\n  }\r\n}\r\n","<div class=\"page-header-main\">\r\n  <div class=\"row align-items-center justify-content-between\">\r\n    <div class=\"col-md-auto col-sm-auto\">\r\n      <div class=\"content-header\">\r\n        <h1> {{'EMAIL_SMTP_SETTING' | translate }}</h1>\r\n      </div>\r\n    </div>\r\n    <div class=\"col-md-auto col-sm-auto\">\r\n      <button *hasClaim=\"'EMAIL_MANAGE_EMAIL_SMTP_SETTINS'\" [routerLink]=\"['/email-smtp/manage']\"\r\n        class=\"btn blue-btn btn-sm m-right-10\">\r\n        <i class=\"fas fa-plus\"></i>\r\n        {{'ADD_SMTP_SETTING' | translate }}\r\n      </button>\r\n    </div>\r\n  </div>\r\n</div>\r\n<div class=\"table-responsive\">\r\n  <table [dir]=\"langDir\" mat-table [dataSource]=\"emailSMTPSettings\" class=\"table table-bordered table-hover grid-height\">\r\n    <!-- Action Column -->\r\n    <ng-container matColumnDef=\"action\">\r\n      <th class=\"table-column-300\" mat-header-cell *matHeaderCellDef>{{'ACTION' | translate}} </th>\r\n      <td class=\"table-column-300\" mat-cell *matCellDef=\"let emailSMTPSetting\">\r\n        <button *hasClaim=\"'EMAIL_MANAGE_EMAIL_SMTP_SETTINS'\" [routerLink]=\"['/email-smtp/manage', emailSMTPSetting.id]\"\r\n          class=\"btn btn-success btn-sm m-right-10\" type=\"button\">\r\n          <i class=\"fas fa-pencil-alt\"></i>\r\n          <span class=\"d-none d-sm-inline\"> {{'EDIT' | translate }}</span>\r\n        </button>\r\n        <button *hasClaim=\"'EMAIL_MANAGE_EMAIL_SMTP_SETTINS'\" class=\"btn btn-danger btn-sm\" type=\"button\"\r\n          (click)=\"deleteEmailSMTPSetting(emailSMTPSetting)\">\r\n          <i class=\"fas fa-trash-alt\"></i>\r\n          <span class=\"d-none d-sm-inline\"> {{'DELETE' | translate }}</span>\r\n        </button>\r\n      </td>\r\n    </ng-container>\r\n\r\n    <ng-container matColumnDef=\"host\">\r\n      <th class=\"table-column-200\" mat-header-cell *matHeaderCellDef> {{'HOST' | translate }} </th>\r\n      <td class=\"table-column-200\" mat-cell *matCellDef=\"let emailSMTPSetting\"> {{emailSMTPSetting.host}} </td>\r\n    </ng-container>\r\n\r\n    <ng-container matColumnDef=\"userName\">\r\n      <th class=\"table-column-300\" mat-header-cell *matHeaderCellDef> {{'USER_NAME' | translate }}</th>\r\n      <td class=\"table-column-300\" mat-cell *matCellDef=\"let emailSMTPSetting\"> {{emailSMTPSetting.userName}} </td>\r\n    </ng-container>\r\n\r\n    <ng-container matColumnDef=\"port\">\r\n      <th class=\"table-column-100\" mat-header-cell *matHeaderCellDef> {{'PORT' | translate }} </th>\r\n      <td class=\"table-column-100\" mat-cell *matCellDef=\"let emailSMTPSetting\"> {{emailSMTPSetting.port}} </td>\r\n    </ng-container>\r\n\r\n    <ng-container matColumnDef=\"isDefault\">\r\n      <th class=\"table-column-100\" mat-header-cell *matHeaderCellDef> {{'IS_DEFAULT' | translate }} </th>\r\n      <td class=\"table-column-100\" mat-cell *matCellDef=\"let emailSMTPSetting\"> {{emailSMTPSetting.isDefault ? \"Yes\" :\r\n        \"No\"}} </td>\r\n    </ng-container>\r\n    <tr mat-header-row *matHeaderRowDef=\"displayedColumns;sticky: true\"></tr>\r\n    <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\"></tr>\r\n  </table>\r\n</div>","import { NgModule } from '@angular/core';\r\nimport { RouterModule, Routes } from '@angular/router';\r\nimport { EmailSmtpSettingListComponent } from './email-smtp-setting-list/email-smtp-setting-list.component';\r\nimport { AuthGuard } from '@core/security/auth.guard';\r\nimport { ManageEmailSmtpSettingComponent } from './manage-email-smtp-setting/manage-email-smtp-setting.component';\r\nimport { EmailSMTPSettingDetailResolver } from './email-settting-detail.resolver';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: '',\r\n    component: EmailSmtpSettingListComponent,\r\n    data: { claimType: 'EMAIL_MANAGE_EMAIL_SMTP_SETTINS' },\r\n    canActivate: [AuthGuard]\r\n  }, {\r\n    path: 'manage/:id',\r\n    component: ManageEmailSmtpSettingComponent,\r\n    data: { claimType: 'EMAIL_MANAGE_EMAIL_SMTP_SETTINS' },\r\n    resolve: { smtpSetting: EmailSMTPSettingDetailResolver },\r\n    canActivate: [AuthGuard]\r\n  }, {\r\n    path: 'manage',\r\n    component: ManageEmailSmtpSettingComponent,\r\n    data: { claimType: 'EMAIL_MANAGE_EMAIL_SMTP_SETTINS' },\r\n    canActivate: [AuthGuard]\r\n  },\r\n];\r\n\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class EmailSmtpSettingRoutingModule { }\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { EmailSmtpSettingListComponent } from './email-smtp-setting-list/email-smtp-setting-list.component';\r\nimport { EmailSmtpSettingRoutingModule } from './email-smtp-setting-routing.module';\r\nimport { MatTableModule } from '@angular/material/table';\r\nimport { MatProgressSpinnerModule } from '@angular/material/progress-spinner';\r\nimport { ManageEmailSmtpSettingComponent } from './manage-email-smtp-setting/manage-email-smtp-setting.component';\r\nimport { ReactiveFormsModule } from '@angular/forms';\r\nimport { MatSlideToggleModule } from '@angular/material/slide-toggle';\r\nimport { EmailSMTPSettingDetailResolver } from './email-settting-detail.resolver';\r\nimport { SharedModule } from '@shared/shared.module';\r\n\r\n\r\n\r\n@NgModule({\r\n  declarations: [EmailSmtpSettingListComponent, ManageEmailSmtpSettingComponent],\r\n  imports: [\r\n    CommonModule,\r\n    SharedModule,\r\n    ReactiveFormsModule,\r\n    EmailSmtpSettingRoutingModule,\r\n    MatTableModule,\r\n    MatProgressSpinnerModule,\r\n    MatSlideToggleModule\r\n  ],\r\n  providers: [EmailSMTPSettingDetailResolver]\r\n})\r\nexport class EmailSmtpSettingModule { }\r\n","import { HttpClient } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { EmailSMTPSetting } from '@core/domain-classes/email-smtp-setting';\r\nimport { CommonError } from '@core/error-handler/common-error';\r\nimport { CommonHttpErrorService } from '@core/error-handler/common-http-error.service';\r\nimport { Observable } from 'rxjs';\r\nimport { catchError } from 'rxjs/operators';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class EmailSmtpSettingService {\r\n\r\n  constructor(private httpClient: HttpClient,\r\n    private commonHttpErrorService: CommonHttpErrorService) { }\r\n\r\n  getEmailSMTPSettings(): Observable<EmailSMTPSetting[] | CommonError> {\r\n    const url = 'EmailSMTPSetting';\r\n    return this.httpClient.get<EmailSMTPSetting[]>(url)\r\n      .pipe(catchError(this.commonHttpErrorService.handleError));\r\n  }\r\n\r\n  getEmailSMTPSetting(id: string): Observable<EmailSMTPSetting | CommonError> {\r\n    const url = `EmailSMTPSetting/${id}`;\r\n    return this.httpClient.get<EmailSMTPSetting>(url)\r\n      .pipe(catchError(this.commonHttpErrorService.handleError));\r\n  }\r\n\r\n  addEmailSMTPSetting(setting: EmailSMTPSetting): Observable<EmailSMTPSetting | CommonError> {\r\n    const url = `EmailSMTPSetting`;\r\n    return this.httpClient.post<EmailSMTPSetting>(url, setting)\r\n      .pipe(catchError(this.commonHttpErrorService.handleError));\r\n  }\r\n\r\n  updateEmailSMTPSetting(setting: EmailSMTPSetting): Observable<EmailSMTPSetting | CommonError> {\r\n    const url = `EmailSMTPSetting/${setting.id}`;\r\n    return this.httpClient.put<EmailSMTPSetting>(url, setting)\r\n      .pipe(catchError(this.commonHttpErrorService.handleError));\r\n  }\r\n\r\n  deleteEmailSMTPSetting(id: string): Observable<EmailSMTPSetting | CommonError> {\r\n    const url = `EmailSMTPSetting/${id}`;\r\n    return this.httpClient.delete<EmailSMTPSetting>(url)\r\n      .pipe(catchError(this.commonHttpErrorService.handleError));\r\n  }\r\n}\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { UntypedFormBuilder, UntypedFormGroup, Validators } from '@angular/forms';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { EmailSMTPSetting } from '@core/domain-classes/email-smtp-setting';\r\nimport { TranslationService } from '@core/services/translation.service';\r\nimport { ToastrService } from 'ngx-toastr';\r\nimport { BaseComponent } from 'src/app/base.component';\r\nimport { EmailSmtpSettingService } from '../email-smtp-setting.service';\r\n\r\n@Component({\r\n  selector: 'app-manage-email-smtp-setting',\r\n  templateUrl: './manage-email-smtp-setting.component.html',\r\n  styleUrls: ['./manage-email-smtp-setting.component.scss']\r\n})\r\nexport class ManageEmailSmtpSettingComponent extends BaseComponent implements OnInit {\r\n  isEditMode: boolean = false;\r\n  smtpSettingForm: UntypedFormGroup;\r\n  constructor(\r\n    private router: Router,\r\n    private fb: UntypedFormBuilder,\r\n    private activeRoute: ActivatedRoute,\r\n    private emailSmtpSettingService: EmailSmtpSettingService,\r\n    private toastrService: ToastrService,\r\n    public translationService: TranslationService\r\n  ) {\r\n    super(translationService);\r\n    this.getLangDir();\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.createEmailSMTPForm();\r\n    this.sub$.sink = this.activeRoute.data.subscribe(\r\n      (data: { smtpSetting: EmailSMTPSetting }) => {\r\n        if (data.smtpSetting) {\r\n          this.isEditMode = true;\r\n          this.smtpSettingForm.patchValue(data.smtpSetting);\r\n        }\r\n      });\r\n  }\r\n\r\n  createEmailSMTPForm() {\r\n    this.smtpSettingForm = this.fb.group({\r\n      id: [''],\r\n      host: ['', [Validators.required]],\r\n      userName: ['', [Validators.required]],\r\n      password: ['', [Validators.required]],\r\n      isEnableSSL: [false],\r\n      port: ['', [Validators.required]],\r\n      isDefault: [false],\r\n    });\r\n  }\r\n\r\n  saveEmailSMTPSetting() {\r\n    if (this.smtpSettingForm.valid) {\r\n      const emailSMTPSetting = this.createBuildObject();\r\n      if (this.isEditMode) {\r\n        this.sub$.sink = this.emailSmtpSettingService.updateEmailSMTPSetting(emailSMTPSetting).subscribe(() => {\r\n          this.toastrService.success(this.translationService.getValue('EMAIL_SMTP_SETTING_UPDATED_SUCCESSFULLY'));\r\n          this.router.navigate(['/email-smtp']);\r\n        });\r\n      } else {\r\n        this.sub$.sink = this.emailSmtpSettingService.addEmailSMTPSetting(emailSMTPSetting).subscribe(() => {\r\n          this.toastrService.success(this.translationService.getValue('EMAIL_SMTP_SETTING_CREATED_SUCCESSFULLY'));\r\n          this.router.navigate(['/email-smtp']);\r\n        });\r\n      }\r\n    } else {\r\n      this.smtpSettingForm.markAllAsTouched();\r\n    }\r\n  }\r\n\r\n  createBuildObject(): EmailSMTPSetting {\r\n    const id = this.smtpSettingForm.get('id').value;\r\n    const user: EmailSMTPSetting = {\r\n      id: id,\r\n      host: this.smtpSettingForm.get('host').value,\r\n      userName: this.smtpSettingForm.get('userName').value,\r\n      password: this.smtpSettingForm.get('password').value,\r\n      isEnableSSL: this.smtpSettingForm.get('isEnableSSL').value,\r\n      port: this.smtpSettingForm.get('port').value,\r\n      isDefault: this.smtpSettingForm.get('isDefault').value\r\n    }\r\n    return user;\r\n  }\r\n}\r\n","<div class=\"page-header-main\">\r\n  <div class=\"row align-items-center justify-content-between\">\r\n    <div class=\"col-md-auto col-sm-auto\">\r\n      <div class=\"content-header\">\r\n        <h1 *ngIf=\"!isEditMode\">\r\n          {{'ADD_EMAIL_SMTP_SETTING' | translate }}\r\n        </h1>\r\n        <h1 *ngIf=\"isEditMode\">\r\n          {{'ADD_EMAIL_SMTP_SETTING' | translate }}\r\n        </h1>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</div>\r\n<form [formGroup]=\"smtpSettingForm\">\r\n  <div class=\"row\">\r\n    <div class=\"col-md-6\">\r\n      <div class=\"form-group \">\r\n        <label class=\"text-danger\"> {{'HOST' | translate }} *</label>\r\n        <input formControlName=\"host\" class=\"form-control\" type=\"text\">\r\n        <div *ngIf=\"smtpSettingForm.get('host').touched && smtpSettingForm.get('host').errors\">\r\n          <div class=\"text-danger\" *ngIf=\"smtpSettingForm.get('host').errors?.required\">\r\n            {{'HOST_IS_REQUIRED' | translate }}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n    <div class=\"col-md-6\">\r\n      <div class=\"form-group \">\r\n        <label class=\"text-danger\"> {{'PORT' | translate }} *</label>\r\n        <input formControlName=\"port\" class=\"form-control\" type=\"number\">\r\n        <div *ngIf=\"smtpSettingForm.get('port').touched && smtpSettingForm.get('port').errors\">\r\n          <div class=\"text-danger\" *ngIf=\"smtpSettingForm.get('port').errors?.required\">\r\n            {{'PORT_IS_REQUIRED' | translate }}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n    <div class=\"col-md-6\">\r\n      <div class=\"form-group \">\r\n        <label class=\"text-danger\"> {{'USER_NAME' | translate }} *</label>\r\n        <input formControlName=\"userName\" class=\"form-control\" type=\"text\">\r\n        <div *ngIf=\"smtpSettingForm.get('userName').touched && smtpSettingForm.get('userName').errors\">\r\n          <div class=\"text-danger\" *ngIf=\"smtpSettingForm.get('userName').errors?.required\">\r\n            {{'USER_NAME_IS_REQUIRED' | translate }}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n    <div class=\"col-md-6\">\r\n      <div class=\"form-group\">\r\n        <label class=\"text-danger\"> {{'PASSWORD' | translate }} *</label>\r\n        <input autocomplete=\"new-password\" formControlName=\"password\" class=\"form-control\" type=\"password\">\r\n        <div *ngIf=\"smtpSettingForm.get('password').touched && smtpSettingForm.get('password').errors\">\r\n          <div class=\"text-danger\" *ngIf=\"smtpSettingForm.get('password').errors?.required\">\r\n            {{'PASSWORD_IS_REQUIRED' | translate }}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n    <div class=\"form-group col-md-6 status-switch\">\r\n      <mat-slide-toggle formControlName=\"isEnableSSL\" [dir]=\"langDir\">\r\n        <span *ngIf=\"smtpSettingForm.get('isEnableSSL').value\">\r\n          {{'ENABLE_SSL' | translate }}\r\n        </span>\r\n        <span *ngIf=\"!smtpSettingForm.get('isEnableSSL').value\">\r\n          {{'ENABLE_SSL' | translate }}\r\n        </span>\r\n      </mat-slide-toggle>\r\n    </div>\r\n    <div class=\"form-group col-md-6 status-switch\">\r\n      <mat-slide-toggle formControlName=\"isDefault\" [dir]=\"langDir\">\r\n        <span *ngIf=\"smtpSettingForm.get('isDefault').value\">\r\n          {{'IS_DEFAULT' | translate }}\r\n        </span>\r\n        <span *ngIf=\"!smtpSettingForm.get('isDefault').value\">\r\n          {{'IS_DEFAULT' | translate }}\r\n        </span>\r\n      </mat-slide-toggle>\r\n    </div>\r\n    <div class=\"m-top-10 col-md-12\">\r\n      <button *hasClaim=\"'EMAIL_MANAGE_EMAIL_SMTP_SETTINS'\" class=\"btn btn-success btn-sm m-right-10\" (click)=\"saveEmailSMTPSetting()\"\r\n        cdkFocusInitial><i class=\"fas fa-save\"></i> {{'SAVE' | translate }}</button>\r\n      <button type=\"button\" class=\"btn btn-danger btn-sm\" [routerLink]=\"['/email-smtp']\"><i\r\n          class=\"fas fa-times-circle\"></i>\r\n        {{'CANCEL' | translate }}\r\n      </button>\r\n    </div>\r\n  </div>\r\n</form>"],"names":[],"sourceRoot":"webpack:///","x_google_ignoreList":[]}