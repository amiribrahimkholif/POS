{"version":3,"file":"src_app_testimonial_testimonial_module_ts.js","mappings":"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","sources":["./src/app/testimonial/testimonial-detail/testimonial-detail-resolver.service.ts","./src/app/testimonial/testimonial-detail/testimonial-detail.component.ts","./src/app/testimonial/testimonial-detail/testimonial-detail.component.html","./src/app/testimonial/testimonial-list/testimonial-list.component.ts","./src/app/testimonial/testimonial-list/testimonial-list.component.html","./src/app/testimonial/testimonial-routing.module.ts","./src/app/testimonial/testimonial.module.ts","./src/app/testimonial/testimonial.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\r\nimport {\r\n    Resolve,\r\n    Router,\r\n    ActivatedRouteSnapshot,\r\n    RouterStateSnapshot,\r\n} from '@angular/router';\r\nimport { Testimonial } from '@core/domain-classes/testimonial';\r\nimport { Observable, of } from 'rxjs';\r\nimport { take, mergeMap } from 'rxjs/operators';\r\nimport { TestimonialService } from '../testimonial.service';\r\n\r\n\r\n@Injectable()\r\nexport class TestimonialDetailResolverService implements Resolve<Testimonial> {\r\n    constructor(\r\n        private testimonialService: TestimonialService,\r\n        private router: Router\r\n    ) { }\r\n    resolve(\r\n        route: ActivatedRouteSnapshot,\r\n        state: RouterStateSnapshot\r\n    ): Observable<Testimonial> | null {\r\n        const id = route.paramMap.get('id');\r\n        if (id === 'addItem') {\r\n            return null;\r\n        }\r\n        return this.testimonialService.getTestimonial(id).pipe(\r\n            take(1),\r\n            mergeMap((testimonial) => {\r\n                if (testimonial) {\r\n                    return of(testimonial);\r\n                } else {\r\n                    this.router.navigate(['/testimonial']);\r\n                    return null;\r\n                }\r\n            })\r\n        );\r\n    }\r\n}\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { UntypedFormBuilder, UntypedFormGroup, Validators } from '@angular/forms';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { Testimonial } from '@core/domain-classes/testimonial';\r\nimport { TranslationService } from '@core/services/translation.service';\r\nimport { environment } from '@environments/environment';\r\nimport { EditorConfig } from '@shared/editor.config';\r\nimport { ToastrService } from 'ngx-toastr';\r\nimport { BaseComponent } from 'src/app/base.component';\r\nimport { TestimonialService } from '../testimonial.service';\r\n\r\n@Component({\r\n  selector: 'app-testimonial-detail',\r\n  templateUrl: './testimonial-detail.component.html',\r\n  styleUrls: ['./testimonial-detail.component.scss']\r\n})\r\nexport class TestimonialDetailComponent extends BaseComponent implements OnInit {\r\n  testimonialForm: UntypedFormGroup;\r\n  testimonial: Testimonial;\r\n  isLoading = false;\r\n  editorConfig = EditorConfig;\r\n  isImageUpload = false;\r\n  imgSrc: string | ArrayBuffer;\r\n  constructor(\r\n    private fb: UntypedFormBuilder,\r\n    private route: ActivatedRoute,\r\n    private testimonialService: TestimonialService,\r\n    private toastrService: ToastrService,\r\n    public translationService: TranslationService,\r\n    private router: Router) {\r\n    super(translationService);\r\n    this.getLangDir();\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.createTestimonialForm();\r\n    const routeSub$ = this.route.data.subscribe(\r\n      (data: { testimonial: Testimonial }) => {\r\n        if (data.testimonial) {\r\n          this.testimonial = data.testimonial;\r\n          this.patchTestimonial();\r\n        } else {\r\n        }\r\n      }\r\n    );\r\n    this.sub$.add(routeSub$);\r\n  }\r\n\r\n  patchTestimonial() {\r\n    this.testimonialForm.patchValue({\r\n      name: this.testimonial.name,\r\n      designation: this.testimonial.designation,\r\n      message: this.testimonial.message,\r\n      isActive: this.testimonial.isActive\r\n    });\r\n    if (this.testimonial.url) {\r\n      this.imgSrc = `${environment.apiUrl}${this.testimonial.url}`;\r\n    }\r\n  }\r\n\r\n  createTestimonialForm() {\r\n    this.testimonialForm = this.fb.group({\r\n      name: ['', [Validators.required]],\r\n      designation: ['', [Validators.required]],\r\n      message: ['', Validators.required],\r\n      isActive: [true],\r\n      profileImage: ['']\r\n    });\r\n  }\r\n\r\n  onTestimonialSubmit() {\r\n    if (this.testimonialForm.valid) {\r\n      const testimonial: Testimonial = Object.assign(this.testimonialForm.value, {\r\n        imageSrc: this.imgSrc,\r\n        isImageUpload: this.isImageUpload\r\n      });\r\n      if (this.testimonial) {\r\n        this.testimonialService.updateTestimonial(this.testimonial.id, testimonial).subscribe(() => {\r\n          this.toastrService.success(this.translationService.getValue('TESTIMONIAL_UPDATED_SUCCESSFULLY'));\r\n          this.router.navigate(['/testimonial']);\r\n        });\r\n      } else {\r\n        this.testimonialService.saveTestimonial(testimonial).subscribe(() => {\r\n          this.toastrService.success(this.translationService.getValue('TESTIMONIAL_ADDED_SUCCESSFULLY'));\r\n          this.router.navigate(['/testimonial']);\r\n        });\r\n      }\r\n    } else {\r\n      this.testimonialForm.markAllAsTouched();\r\n    }\r\n  }\r\n\r\n  onFileSelect($event) {\r\n    const fileSelected = $event.target.files[0];\r\n    if (!fileSelected) {\r\n      return;\r\n    }\r\n    const mimeType = fileSelected.type;\r\n    if (mimeType.match(/image\\/*/) == null) {\r\n      return;\r\n    }\r\n    const reader = new FileReader();\r\n    reader.readAsDataURL(fileSelected);\r\n    // tslint:disable-next-line: variable-name\r\n    reader.onload = (_event) => {\r\n      this.imgSrc = reader.result;\r\n      this.isImageUpload = true;\r\n      $event.target.value = '';\r\n    }\r\n  }\r\n\r\n  onRemoveImage() {\r\n    this.imgSrc = '';\r\n    this.isImageUpload = true;\r\n  }\r\n}\r\n\r\n","<div class=\"page-header-main\">\r\n  <div class=\"row align-items-center justify-content-between\">\r\n    <div class=\"col-md-auto col-sm-auto\">\r\n      <div class=\"content-header\">\r\n        <h1>{{'MANAGE_TESTIMONIAL' | translate}}</h1>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</div>\r\n<form autocomplete=\"off\" [formGroup]=\"testimonialForm\" (ngSubmit)=\"onTestimonialSubmit()\">\r\n    <div class=\"loading-shade\" *ngIf=\"isLoading\">\r\n        <mat-spinner *ngIf=\"isLoading\"></mat-spinner>\r\n    </div>\r\n    <div class=\"row\">\r\n        <div class=\"col-md-6\">\r\n            <div class=\"form-group\">\r\n                <label class=\"text-danger\">{{'NAME' | translate}} *</label>\r\n                <input formControlName=\"name\" class=\"form-control\" type=\"text\">\r\n                <div *ngIf=\"testimonialForm.get('name').touched && testimonialForm.get('name').errors\">\r\n                    <div class=\"text-danger\" *ngIf=\"testimonialForm.get('name').errors?.required\">\r\n                        {{'NAME_IS_REQUIRED' | translate}}\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n        <div class=\"col-md-6\">\r\n            <div class=\"form-group\">\r\n                <label class=\"text-danger\">{{'DESIGNATION' | translate}} *</label>\r\n                <input formControlName=\"designation\" class=\"form-control\" type=\"text\">\r\n                <div *ngIf=\"testimonialForm.get('designation').touched && testimonialForm.get('designation').errors\">\r\n                    <div class=\"text-danger\" *ngIf=\"testimonialForm.get('designation').errors?.required\">\r\n                        {{'PLEASE_ENTER_DESIGNATION' | translate}}\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n        <div class=\"col-sm-12\">\r\n            <div class=\"form-group \">\r\n                <label class=\"text-danger\">\r\n                    {{'MESSAGE' | translate}} *\r\n                </label>\r\n                <div class=\"NgxEditor__Wrapper\">\r\n                    <angular-editor formControlName=\"message\" [config]=\"editorConfig\"></angular-editor>\r\n                    <div *ngIf=\"testimonialForm.get('message').touched && testimonialForm.get('message').errors\">\r\n                        <div class=\"text-danger\" *ngIf=\"testimonialForm.get('message').errors?.required\">\r\n                            {{'MESSAGE_IS_REQUIRED' | translate}}\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n        <div class=\"col-md-3\">\r\n            <mat-card class=\"text-center\">\r\n                <input hidden formControlName=\"profileImage\" (change)=\"onFileSelect($event)\" #fileInput name=\"logo\"\r\n                    type=\"file\" name=\"Profile Photo\" fxFlex=\"30\">\r\n                <img *ngIf=\"imgSrc\" class=\"full-width\" [src]=\"imgSrc\" />\r\n                <img *ngIf=\"!imgSrc\" class=\"full-width\" src=\"../../../assets/images/user-profile.jpg\" />\r\n                <mat-card-actions [dir]=\"langDir\">\r\n                    <button type=\"button\" *ngIf=\"!imgSrc\" class=\"btn btn-success btn-sm\" (click)=\"fileInput.click()\">\r\n                        <i class=\"far fa-image\"></i> {{'ADD_PROFILE' | translate}}</button>\r\n                    <button type=\"button\" *ngIf=\"imgSrc\" class=\"btn btn-success btn-sm  mb-2\"\r\n                        (click)=\"fileInput.click()\">\r\n                        <i class=\"far fa-image\"></i> {{'CHANGE_PROFILE' | translate}}</button>\r\n                    <button *ngIf=\"imgSrc\" type=\"button\" (click)=\"onRemoveImage()\" class=\"btn btn-danger btn-sm\">\r\n                        <i class=\"fas fa-trash-alt\"></i> {{'REMOVE_PROFILE' | translate}}</button>\r\n                </mat-card-actions>\r\n            </mat-card>\r\n        </div>\r\n        <div class=\"form-group col-md-6 status-switch\">\r\n            <mat-slide-toggle formControlName=\"isActive\">\r\n                <span *ngIf=\"testimonialForm.get('isActive').value\">{{'ACTIVE' | translate}}</span>\r\n                <span *ngIf=\"!testimonialForm.get('isActive').value\">{{'INACTIVE' | translate}}</span>\r\n            </mat-slide-toggle>\r\n        </div>\r\n        <div class=\"m-top-10 col-md-12\">\r\n            <button type=\"submit\" class=\"btn btn-success btn-sm m-right-10\"><i class=\"fas fa-save\"></i> {{'SAVE' | translate}}</button>\r\n            <button type=\"button\" class=\"btn btn-danger btn-sm\" [routerLink]=\"['/testimonial']\"><i\r\n                    class=\"fas fa-times-circle\"></i>\r\n            {{'CANCEL' | translate}}</button>\r\n        </div>\r\n    </div>\r\n</form>\r\n","import { Component, OnInit, ViewChild } from '@angular/core';\r\nimport { MatPaginator } from '@angular/material/paginator';\r\nimport { MatTableDataSource } from '@angular/material/table';\r\nimport { Router } from '@angular/router';\r\nimport { CommonDialogService } from '@core/common-dialog/common-dialog.service';\r\nimport { Testimonial } from '@core/domain-classes/testimonial';\r\nimport { TranslationService } from '@core/services/translation.service';\r\nimport { ToastrService } from 'ngx-toastr';\r\nimport { BaseComponent } from 'src/app/base.component';\r\nimport { TestimonialService } from '../testimonial.service';\r\n\r\n@Component({\r\n  selector: 'app-testimonial-list',\r\n  templateUrl: './testimonial-list.component.html',\r\n  styleUrls: ['./testimonial-list.component.scss']\r\n})\r\nexport class TestimonialListComponent extends BaseComponent implements OnInit {\r\n  testimonials: Testimonial[] = [];\r\n  dataSource: MatTableDataSource<Testimonial>;\r\n  @ViewChild(MatPaginator) paginator: MatPaginator;\r\n  isLoading = false;\r\n  displayedColumns: string[] = ['action', 'name', 'designation', 'isActive', 'createdDate'];\r\n  footerToDisplayed: string[] = ['footer'];\r\n  pageSize = 15;\r\n  constructor(private router: Router,\r\n    private testimonialService: TestimonialService,\r\n    private commonDialogService: CommonDialogService,\r\n    public translationService: TranslationService,\r\n    private toastrService: ToastrService) {\r\n    super(translationService);\r\n    this.getLangDir();\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.getTestimonials();\r\n  }\r\n\r\n  getTestimonials() {\r\n    this.isLoading = true;\r\n    this.sub$.sink = this.testimonialService.getTestimonials().subscribe(testimonials => {\r\n      this.testimonials = testimonials;\r\n      this.dataSource = new MatTableDataSource(this.testimonials);\r\n      this.dataSource.paginator = this.paginator;\r\n      this.isLoading = false;\r\n    }, () => {\r\n      this.isLoading = false;\r\n    })\r\n  }\r\n\r\n  editTestimonial(id: string) {\r\n    this.router.navigate(['/testimonial/manage', id])\r\n  }\r\n\r\n  deleteTestimonial(testimonial: Testimonial) {\r\n    this.sub$.sink = this.commonDialogService\r\n      .deleteConformationDialog(`${this.translationService.getValue('ARE_YOU_SURE_YOU_WANT_TO_DELETE')}?`)\r\n      .subscribe((isTrue: boolean) => {\r\n        if (isTrue) {\r\n          this.sub$.sink = this.testimonialService.deleteTestimonial(testimonial.id)\r\n            .subscribe(() => {\r\n              this.toastrService.success(this.translationService.getValue('TESTIMONIAL_DELETED_SUCCESSFULLY'));\r\n              if (this.paginator) {\r\n                this.paginator.pageIndex = 0;\r\n              }\r\n              this.getTestimonials();\r\n            });\r\n        }\r\n      });\r\n  }\r\n}\r\n","<div class=\"page-header-main\">\r\n    <div class=\"row align-items-center justify-content-between\">\r\n        <div class=\"col-md-auto col-sm-auto col\">\r\n            <div class=\"content-header\">\r\n                <h1>{{'TESTIMONIALS' | translate}}</h1>\r\n            </div>\r\n        </div>\r\n        <div class=\"col-md-auto col-sm-auto col-auto\">\r\n            <button *hasClaim=\"'testimonial_add_testimonial'\" class=\"btn blue-btn btn-sm m-right-10\" [routerLink]=\"['/testimonial/manage/addItem']\">\r\n        <i class=\"fas fa-plus\"></i> {{'ADD_TESTIMONIAL' | translate}}\r\n      </button>\r\n        </div>\r\n    </div>\r\n</div>\r\n<div class=\"mat-elevation-z8\">\r\n    <div class=\"loading-shade\" *ngIf=\"isLoading\">\r\n        <mat-spinner></mat-spinner>\r\n    </div>\r\n    <div class=\"table-container grid-height\">\r\n        <table [dir]=\"langDir\" mat-table [dataSource]=\"dataSource\" class=\"mat-elevation-z8\">\r\n            <ng-container matColumnDef=\"action\">\r\n                <th mat-header-cell *matHeaderCellDef> {{'ACTION' | translate}}\r\n                </th>\r\n                <td mat-cell *matCellDef=\"let testimonial\">\r\n                    <button *hasClaim=\"'testimonial_update_testimonial'\" class=\"btn btn-success btn-sm mr-2\" mat-menu-item (click)=\"editTestimonial(testimonial.id)\">\r\n            <i class=\"fas fa-pencil-alt\"></i>\r\n            <span class=\"ml-1 d-none d-sm-inline\">{{'EDIT' | translate}}</span>\r\n          </button>\r\n                    <button *hasClaim=\"'testimonial_delete_testimonial'\" class=\"btn btn-danger btn-sm\" mat-menu-item (click)=\"deleteTestimonial(testimonial)\">\r\n            <i class=\"fas fa-trash-alt\"></i> <span class=\"ml-1 d-none d-sm-inline\">{{'DELETE' |\r\n              translate}}</span>\r\n          </button>\r\n                </td>\r\n            </ng-container>\r\n            <ng-container matColumnDef=\"name\">\r\n                <th mat-header-cell *matHeaderCellDef mat-sort-header> {{'NAME' | translate}} </th>\r\n                <td mat-cell *matCellDef=\"let testimonial\"> {{testimonial.name}} </td>\r\n            </ng-container>\r\n            <ng-container matColumnDef=\"designation\">\r\n                <th mat-header-cell *matHeaderCellDef mat-sort-header> {{'DESIGNATION' | translate}} </th>\r\n                <td mat-cell *matCellDef=\"let testimonial\"> {{testimonial.designation}} </td>\r\n            </ng-container>\r\n            <ng-container matColumnDef=\"isActive\">\r\n                <th mat-header-cell *matHeaderCellDef mat-sort-header> {{'STATUS' | translate}} </th>\r\n                <td mat-cell *matCellDef=\"let testimonial\">\r\n                    <span *ngIf=\"testimonial.isActive\" class=\"badge badge-success\">{{'ACTIVE' | translate}}</span>\r\n                    <span *ngIf=\"!testimonial.isActive\" class=\"badge badge-warning\">{{'INACTIVE' | translate}}</span>\r\n                </td>\r\n            </ng-container>\r\n            <ng-container matColumnDef=\"createdDate\">\r\n                <th mat-header-cell *matHeaderCellDef mat-sort-header>{{'CREATED_DATE' | translate}}</th>\r\n                <td mat-cell *matCellDef=\"let testimonial\"> {{testimonial.createdDate | date:\"dd/MM/yyyy\"}} </td>\r\n            </ng-container>\r\n            <ng-container matColumnDef=\"footer\">\r\n                <td mat-footer-cell colspan=\"6\" *matFooterCellDef>\r\n                    <mat-paginator [pageSizeOptions]=\"[15,20,30]\"></mat-paginator>\r\n                </td>\r\n            </ng-container>\r\n            <tr mat-header-row *matHeaderRowDef=\"displayedColumns;sticky: true\"></tr>\r\n            <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\"></tr>\r\n            <tr mat-footer-row *matFooterRowDef=\"footerToDisplayed;sticky: true\"></tr>\r\n        </table>\r\n        <ng-container *ngIf=\"testimonials.length === 0\">\r\n            <div class=\"row\">\r\n                <div class=\"col-sm-12 ml-4 mt-3\">\r\n                    <label class=\"font-weight-bold\"> {{'NO_DATA_FOUND' | translate}}</label>\r\n                </div>\r\n            </div>\r\n        </ng-container>\r\n    </div>\r\n</div>","import { NgModule } from '@angular/core';\r\nimport { RouterModule, Routes } from '@angular/router';\r\nimport { TestimonialListComponent } from './testimonial-list/testimonial-list.component';\r\nimport { TestimonialDetailComponent } from './testimonial-detail/testimonial-detail.component';\r\nimport { TestimonialDetailResolverService } from './testimonial-detail/testimonial-detail-resolver.service';\r\nimport { AuthGuard } from '@core/security/auth.guard';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: '',\r\n    component: TestimonialListComponent,\r\n    data: { claimType: 'testimonial_view_testimonials' },\r\n    canActivate: [AuthGuard]\r\n  }, {\r\n    path: 'manage/:id',\r\n    component: TestimonialDetailComponent,\r\n    resolve: {\r\n      testimonial: TestimonialDetailResolverService,\r\n    },\r\n    data: { claimType: ['testimonial_add_testimonial', 'testimonial_update_testimonial'] },\r\n    canActivate: [AuthGuard]\r\n  }\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule],\r\n})\r\nexport class TestimonialRoutingModule { }\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { TestimonialListComponent } from './testimonial-list/testimonial-list.component';\r\nimport { TestimonialDetailComponent } from './testimonial-detail/testimonial-detail.component';\r\nimport { TestimonialDetailResolverService } from './testimonial-detail/testimonial-detail-resolver.service';\r\nimport { SharedModule } from '@shared/shared.module';\r\nimport { TestimonialRoutingModule } from './testimonial-routing.module';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport { MatFormFieldModule } from '@angular/material/form-field';\r\nimport { MatInputModule } from '@angular/material/input';\r\nimport { MatProgressSpinnerModule } from '@angular/material/progress-spinner';\r\nimport { MatPaginatorModule } from '@angular/material/paginator';\r\nimport { MatTableModule } from '@angular/material/table';\r\nimport { MatCardModule } from '@angular/material/card';\r\nimport { MatSlideToggleModule } from '@angular/material/slide-toggle';\r\nimport { AngularEditorModule } from '@kolkov/angular-editor';\r\n\r\n\r\n\r\n@NgModule({\r\n  declarations: [TestimonialListComponent, TestimonialDetailComponent],\r\n  imports: [\r\n    CommonModule,\r\n    TestimonialRoutingModule,\r\n    SharedModule,\r\n    FormsModule,\r\n    ReactiveFormsModule,\r\n    MatFormFieldModule,\r\n    MatInputModule,\r\n    MatProgressSpinnerModule,\r\n    AngularEditorModule,\r\n    MatPaginatorModule,\r\n    MatTableModule,\r\n    MatCardModule,\r\n    MatSlideToggleModule\r\n  ],\r\n  providers: [TestimonialDetailResolverService]\r\n})\r\nexport class TestimonialModule { }\r\n","import { HttpClient } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { Testimonial } from '@core/domain-classes/testimonial';\r\nimport { Observable } from 'rxjs';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class TestimonialService {\r\n\r\n  constructor(private httpClient: HttpClient) { }\r\n\r\n  getTestimonials(): Observable<Testimonial[]> {\r\n    const url = 'testimonials/';\r\n    return this.httpClient.get<Testimonial[]>(url);\r\n  }\r\n\r\n  getTestimonial(id: string): Observable<Testimonial> {\r\n    const url = 'testimonials/' + id;\r\n    return this.httpClient.get<Testimonial>(url);\r\n  }\r\n\r\n  deleteTestimonial(id: string): Observable<void> {\r\n    const url = `testimonials/${id}`;\r\n    return this.httpClient.delete<void>(url);\r\n  }\r\n\r\n  updateTestimonial(id: string, supplier: Testimonial): Observable<Testimonial> {\r\n    const url = 'testimonials/' + id;\r\n    return this.httpClient.put<Testimonial>(url, supplier);\r\n  }\r\n\r\n  saveTestimonial(supplier: Testimonial): Observable<Testimonial> {\r\n    const url = 'testimonials';\r\n    return this.httpClient.post<Testimonial>(url, supplier);\r\n  }\r\n}\r\n"],"names":[],"sourceRoot":"webpack:///","x_google_ignoreList":[]}