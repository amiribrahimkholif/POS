{"version":3,"file":"default-src_app_core_domain-classes_purchase-order-resource-parameter_ts-src_app_purchase-ord-976a97.js","mappings":"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","sources":["./src/app/core/domain-classes/purchase-order-resource-parameter.ts","./src/app/core/domain-classes/purchase-order-status.ts","./src/app/purchase-order/purchase-order.service.ts","./src/app/supplier/supplier.service.ts"],"sourcesContent":["import { PurchaseOrderStatusEnum } from './purchase-order-status';\r\nimport { ResourceParameter } from './resource-parameter';\r\n\r\nexport class PurchaseOrderResourceParameter extends ResourceParameter {\r\n    orderNumber?: string = '';\r\n    supplierName?: string = '';\r\n    pOCreatedDate?: Date;\r\n    supplierId?: string = '';\r\n    isPurchaseOrderRequest: boolean = false;\r\n    fromDate?: Date;\r\n    toDate?: Date;\r\n    productId?: string ='';\r\n    productName?: string='';\r\n    status?: PurchaseOrderStatusEnum = PurchaseOrderStatusEnum.All;\r\n}\r\n","export enum PurchaseOrderStatusEnum {\r\n  Not_Return = 0,\r\n  Return = 1,\r\n  All = 2\r\n}\r\n","import { HttpClient, HttpEvent, HttpParams, HttpResponse } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { PurchaseOrder } from '@core/domain-classes/purchase-order';\r\nimport { PurchaseOrderItem } from '@core/domain-classes/purchase-order-item';\r\nimport { PurchaseOrderResourceParameter } from '@core/domain-classes/purchase-order-resource-parameter';\r\nimport { PurchaseOrderStatusEnum } from '@core/domain-classes/purchase-order-status';\r\nimport { CommonError } from '@core/error-handler/common-error';\r\nimport { CommonHttpErrorService } from '@core/error-handler/common-http-error.service';\r\nimport { Observable } from 'rxjs/internal/Observable';\r\nimport { catchError } from 'rxjs/operators';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class PurchaseOrderService {\r\n\r\n  constructor(private http: HttpClient,\r\n    private commonHttpErrorService: CommonHttpErrorService) { }\r\n\r\n  getAllPurchaseOrder(\r\n    resourceParams: PurchaseOrderResourceParameter\r\n  ): Observable<HttpResponse<PurchaseOrder[]>> {\r\n    const url = 'purchaseorder';\r\n    const customParams = new HttpParams()\r\n      .set('Fields', resourceParams.fields)\r\n      .set('OrderBy', resourceParams.orderBy)\r\n      .set('PageSize', resourceParams.pageSize.toString())\r\n      .set('Skip', resourceParams.skip.toString())\r\n      .set('SearchQuery', resourceParams.searchQuery)\r\n      .set('name', resourceParams.name)\r\n      .set('orderNumber', resourceParams.orderNumber)\r\n      .set('supplierName', resourceParams.supplierName)\r\n      .set('fromDate', resourceParams.fromDate ? resourceParams.fromDate.toDateString() : '')\r\n      .set('toDate', resourceParams.toDate ? resourceParams.toDate.toDateString() : '')\r\n      .set('productId', resourceParams.productId ? resourceParams.productId : '')\r\n      .set('supplierId', resourceParams.supplierId ? resourceParams.supplierId : '')\r\n      .set('isPurchaseOrderRequest', resourceParams.isPurchaseOrderRequest)\r\n      .set('status', resourceParams.status);\r\n    return this.http.get<PurchaseOrder[]>(url, {\r\n      params: customParams,\r\n      observe: 'response'\r\n    });\r\n  }\r\n\r\n  getAllPurchaseOrderReport(\r\n    resourceParams: PurchaseOrderResourceParameter\r\n  ): Observable<HttpResponse<PurchaseOrder[]>> {\r\n    const url = 'purchaseorder/report';\r\n    const customParams = new HttpParams()\r\n      .set('Fields', resourceParams.fields)\r\n      .set('OrderBy', resourceParams.orderBy)\r\n      .set('PageSize', resourceParams.pageSize.toString())\r\n      .set('Skip', resourceParams.skip.toString())\r\n      .set('SearchQuery', resourceParams.searchQuery)\r\n      .set('name', resourceParams.name)\r\n      .set('orderNumber', resourceParams.orderNumber)\r\n      .set('supplierName', resourceParams.supplierName)\r\n      .set('fromDate', resourceParams.fromDate ? resourceParams.fromDate.toDateString() : '')\r\n      .set('toDate', resourceParams.toDate ? resourceParams.toDate.toDateString() : '')\r\n      .set('productId', resourceParams.productId ? resourceParams.productId : '')\r\n      .set('supplierId', resourceParams.supplierId ? resourceParams.supplierId : '')\r\n      .set('isPurchaseOrderRequest', resourceParams.isPurchaseOrderRequest)\r\n    return this.http.get<PurchaseOrder[]>(url, {\r\n      params: customParams,\r\n      observe: 'response'\r\n    });\r\n  }\r\n\r\n  getPurchaseOrderItemReport(\r\n    resourceParams: PurchaseOrderResourceParameter\r\n  ): Observable<HttpResponse<PurchaseOrderItem[]>> {\r\n    const url = 'purchaseorder/items/reports';\r\n    const customParams = new HttpParams()\r\n      .set('Fields', resourceParams.fields)\r\n      .set('OrderBy', resourceParams.orderBy)\r\n      .set('PageSize', resourceParams.pageSize.toString())\r\n      .set('Skip', resourceParams.skip.toString())\r\n      .set('SearchQuery', resourceParams.searchQuery)\r\n      .set('name', resourceParams.name)\r\n      .set('orderNumber', resourceParams.orderNumber)\r\n      .set('supplierName', resourceParams.supplierName)\r\n      .set('fromDate', resourceParams.fromDate?resourceParams.fromDate.toDateString():'')\r\n      .set('toDate',  resourceParams.toDate?resourceParams.toDate.toDateString():'')\r\n      .set('productId', resourceParams.productId?resourceParams.productId:'')\r\n      .set('productName', resourceParams.productName?resourceParams.productName:'')\r\n      .set('supplierId', resourceParams.supplierId ? resourceParams.supplierId : '')\r\n      .set('isPurchaseOrderRequest', resourceParams.isPurchaseOrderRequest)\r\n    return this.http.get<PurchaseOrderItem[]>(url, {\r\n      params: customParams,\r\n      observe: 'response'\r\n    });\r\n  }\r\n\r\n  getAllPurchaseOrderItemReport(\r\n    resourceParams: PurchaseOrderResourceParameter\r\n  ): Observable<HttpResponse<PurchaseOrderItem[]>> {\r\n    const url = 'purchaseorder/items/reports';\r\n    const customParams = new HttpParams()\r\n      .set('Fields', resourceParams.fields)\r\n      .set('OrderBy', resourceParams.orderBy)\r\n      .set('PageSize', 0)\r\n      .set('Skip', 0)\r\n      .set('SearchQuery', resourceParams.searchQuery)\r\n      .set('name', resourceParams.name)\r\n      .set('orderNumber', resourceParams.orderNumber)\r\n      .set('supplierName', resourceParams.supplierName)\r\n      .set('fromDate', resourceParams.fromDate?resourceParams.fromDate.toDateString():'')\r\n      .set('toDate',  resourceParams.toDate?resourceParams.toDate.toDateString():'')\r\n      .set('productId', resourceParams.productId?resourceParams.productId:'')\r\n      .set('productName', resourceParams.productName?resourceParams.productName:'')\r\n      .set('supplierId', resourceParams.supplierId ? resourceParams.supplierId : '')\r\n      .set('isPurchaseOrderRequest', resourceParams.isPurchaseOrderRequest)\r\n    return this.http.get<PurchaseOrderItem[]>(url, {\r\n      params: customParams,\r\n      observe: 'response'\r\n    });\r\n  }\r\n\r\n  addPurchaseOrder(purchaseOrder: PurchaseOrder): Observable<PurchaseOrder | CommonError> {\r\n    const url = `PurchaseOrder`;\r\n    return this.http.post<PurchaseOrder>(url, purchaseOrder)\r\n      .pipe(catchError(this.commonHttpErrorService.handleError));\r\n  }\r\n\r\n  updatePurchaseOrder(purchaseOrder: PurchaseOrder): Observable<PurchaseOrder | CommonError> {\r\n    const url = `PurchaseOrder/${purchaseOrder.id}`;\r\n    return this.http.put<PurchaseOrder>(url, purchaseOrder)\r\n      .pipe(catchError(this.commonHttpErrorService.handleError));\r\n  }\r\n\r\n  updatePurchaseOrderReturn(purchaseOrder: PurchaseOrder): Observable<PurchaseOrder | CommonError> {\r\n    const url = `PurchaseOrder/${purchaseOrder.id}/return`;\r\n    return this.http.put<PurchaseOrder>(url, purchaseOrder)\r\n      .pipe(catchError(this.commonHttpErrorService.handleError));\r\n  }\r\n\r\n  deletePurchaseOrder(id: string): Observable<void | CommonError> {\r\n    const url = `PurchaseOrder/${id}`;\r\n    return this.http.delete<void>(url)\r\n      .pipe(catchError(this.commonHttpErrorService.handleError));\r\n  }\r\n\r\n  getNewPurchaseOrderNumber(isPurchaseOrder: boolean): Observable<PurchaseOrder> {\r\n    const url = `purchaseorder/newOrderNumber/${isPurchaseOrder}`;\r\n    return this.http.get<PurchaseOrder>(url);\r\n  }\r\n\r\n  getPurchaseOrderById(purchaseOrderId: string): Observable<PurchaseOrder> {\r\n    const url = `purchaseorder/${purchaseOrderId}`;\r\n    return this.http.get<PurchaseOrder>(url);\r\n  }\r\n\r\n  getPurchaseOrderItems(purchaseOrderId: string, isReturn: boolean = false): Observable<PurchaseOrderItem[]> {\r\n    const url = `purchaseorder/${purchaseOrderId}/items?isReturn=${isReturn}`;\r\n    return this.http.get<PurchaseOrderItem[]>(url);\r\n  }\r\n\r\n  downloadAttachment(id: string): Observable<HttpEvent<Blob>> {\r\n    const url = `PurchaseOrderAttachment/${id}/download`;\r\n    return this.http.get(url, {\r\n      reportProgress: true,\r\n      observe: 'events',\r\n      responseType: 'blob',\r\n    });\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { Observable, of } from 'rxjs';\r\nimport { HttpResponse, HttpClient, HttpParams } from '@angular/common/http';\r\nimport { SupplierResourceParameter } from '@core/domain-classes/supplier-resource-parameter';\r\nimport { Supplier } from '@core/domain-classes/supplier';\r\nimport { Guid } from 'guid-typescript';\r\nimport { SupplierList } from '@core/domain-classes/supplier-list';\r\nimport { SupplierPayment } from '@core/domain-classes/supplier-payment';\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class SupplierService {\r\n  constructor(private http: HttpClient) { }\r\n\r\n  getSuppliers(\r\n    resourceParams: SupplierResourceParameter\r\n  ): Observable<HttpResponse<Supplier[]>> {\r\n    const url = 'supplier';\r\n    const customParams = new HttpParams()\r\n      .set('Fields', resourceParams.fields)\r\n      .set('OrderBy', resourceParams.orderBy)\r\n      .set('PageSize', resourceParams.pageSize.toString())\r\n      .set('Skip', resourceParams.skip.toString())\r\n      .set('SearchQuery', resourceParams.searchQuery)\r\n      .set('supplierName', resourceParams.supplierName)\r\n      .set('mobileNo', resourceParams.mobileNo)\r\n      .set('email', resourceParams.email)\r\n      .set('country', resourceParams.country ? resourceParams.country : '')\r\n      .set('website', resourceParams.website)\r\n    if (resourceParams.id) {\r\n      customParams.append('id', resourceParams.id);\r\n    }\r\n    return this.http.get<Supplier[]>(url, {\r\n      params: customParams,\r\n      observe: 'response',\r\n    });\r\n  }\r\n\r\n  getSupplier(id: string): Observable<Supplier> {\r\n    const url = 'supplier/' + id;\r\n    return this.http.get<Supplier>(url);\r\n  }\r\n  deleteSupplier(id: string): Observable<void> {\r\n    const url = `supplier/${id}`;\r\n    return this.http.delete<void>(url);\r\n  }\r\n  updateSupplier(id: string, supplier: Supplier): Observable<Supplier> {\r\n    const url = 'supplier/' + id;\r\n    return this.http.put<Supplier>(url, supplier);\r\n  }\r\n  saveSupplier(supplier: Supplier): Observable<Supplier> {\r\n    const url = 'supplier';\r\n    return this.http.post<Supplier>(url, supplier);\r\n  }\r\n\r\n  checkEmailOrPhoneExist(\r\n    email: string,\r\n    mobileNo: string,\r\n    supplierId: string | Guid\r\n  ): Observable<boolean> {\r\n    const url = `supplier/${supplierId}/Exist?email=${email}&mobileNo=${mobileNo}`;\r\n    return this.http.get<boolean>(url);\r\n  }\r\n\r\n  getSuppliersForDropDown(searchString: string): Observable<Supplier[]> {\r\n    const url = 'SupplierSearch';\r\n    if (searchString) {\r\n      let params = `?searchQuery=${searchString.trim()}&pageSize=10`;\r\n      return this.http.get<Supplier[]>(url + params);\r\n    }\r\n    return of([]);\r\n  }\r\n\r\n  getSupplierPayments(\r\n    resourceParams: SupplierResourceParameter\r\n  ): Observable<HttpResponse<SupplierPayment[]>> {\r\n    const url = 'supplier/GetSupplierPayment';\r\n    const customParams = new HttpParams()\r\n      .set('Fields', resourceParams.fields)\r\n      .set('OrderBy', resourceParams.orderBy)\r\n      .set('PageSize', resourceParams.pageSize.toString())\r\n      .set('Skip', resourceParams.skip.toString())\r\n      .set('SearchQuery', resourceParams.searchQuery)\r\n      .set('supplierName', resourceParams.supplierName)\r\n    return this.http.get<SupplierPayment[]>(url, {\r\n      params: customParams,\r\n      observe: 'response',\r\n    });\r\n  }\r\n\r\n  getSupplierPaymentsExcel(\r\n    resourceParams: SupplierResourceParameter\r\n  ): Observable<HttpResponse<SupplierPayment[]>> {\r\n    const url = 'supplier/GetSupplierPayment';\r\n    const customParams = new HttpParams()\r\n      .set('Fields', resourceParams.fields)\r\n      .set('OrderBy', resourceParams.orderBy)\r\n      .set('PageSize', resourceParams.pageSize.toString())\r\n      .set('Skip', resourceParams.skip.toString())\r\n      .set('SearchQuery', resourceParams.searchQuery)\r\n      .set('supplierName', resourceParams.supplierName)\r\n    return this.http.get<SupplierPayment[]>(url, {\r\n      params: customParams,\r\n      observe: 'response',\r\n    });\r\n  }\r\n}\r\n"],"names":[],"sourceRoot":"webpack:///","x_google_ignoreList":[]}