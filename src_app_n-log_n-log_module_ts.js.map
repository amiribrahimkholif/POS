{"version":3,"file":"src_app_n-log_n-log_module_ts.js","mappings":";;;;;;;;;;;;;;AAAyD;AAElD,MAAM,YAAa,SAAQ,kEAAiB;IAAnD;;QACI,YAAO,GAAY,EAAE,CAAC;QACtB,UAAK,GAAY,OAAO,CAAC;QACzB,WAAM,GAAY,WAAW,CAAC;IAClC,CAAC;CAAA;;;;;;;;;;;;;;;ACNM,MAAe,iBAAiB;IAAvC;QACE,WAAM,GAAG,EAAE,CAAC;QACZ,YAAO,GAAG,EAAE,CAAC;QACb,gBAAW,GAAG,EAAE,CAAC;QACjB,aAAQ,GAAG,EAAE,CAAC;QACd,SAAI,GAAG,CAAC,CAAC;QACT,SAAI,GAAG,EAAE,CAAC;QACV,eAAU,GAAG,CAAC,CAAC;IACjB,CAAC;CAAA;;;;;;;;;;;;;;;;;ACHwB;;;AAOlB,MAAM,wBAAwB;IACjC,YAAoB,WAAwB;QAAxB,gBAAW,GAAX,WAAW,CAAa;IAAI,CAAC;IACjD,OAAO,CACH,KAA6B,EAC7B,KAA0B;QAE1B,MAAM,EAAE,GAAG,KAAK,CAAC,QAAQ,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC;QACpC,OAAO,IAAI,CAAC,WAAW,CAAC,aAAa,CAAC,EAAE,CAAqB,CAAC;IAClE,CAAC;;gGARQ,wBAAwB;yHAAxB,wBAAwB,WAAxB,wBAAwB;;;;;;;;;;;;;;;;;;;ACPkB;AACD;AAG/C,MAAM,cAAc;IAgBvB,YAAoB,WAAwB;QAAxB,gBAAW,GAAX,WAAW,CAAa;QAdpC,gBAAW,GAAG,IAAI,iDAAe,CAAS,EAAE,CAAC,CAAC;QAC9C,0BAAqB,GAAG,IAAI,iDAAe,CAAiB,IAAI,CAAC,CAAC;QAClE,mBAAc,GAAG,IAAI,iDAAe,CAAU,KAAK,CAAC,CAAC;QAEtD,aAAQ,GAAG,IAAI,CAAC,cAAc,CAAC,YAAY,EAAE,CAAC;QAC7C,WAAM,GAAW,CAAC,CAAC;QAOpB,2BAAsB,GAAG,IAAI,CAAC,qBAAqB,CAAC,YAAY,EAAE,CAAC;IAE1B,CAAC;IANjD,IAAW,KAAK;QACZ,OAAO,IAAI,CAAC,MAAM,CAAC;IACvB,CAAC;IAMD,OAAO;QACH,OAAO,IAAI,CAAC,WAAW,CAAC,YAAY,EAAE,CAAC;IAC3C,CAAC;IAED,UAAU;QACN,IAAI,CAAC,WAAW,CAAC,QAAQ,EAAE,CAAC;QAC5B,IAAI,CAAC,cAAc,CAAC,QAAQ,EAAE,CAAC;IACnC,CAAC;IAED,SAAS,CAAC,YAA0B;QAChC,IAAI,CAAC,cAAc,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;QAC/B,IAAI,CAAC,WAAW,CAAC,QAAQ,CAAC,YAAY,CAAC,CAAC,IAAI,CACxC,0DAAU,CAAC,GAAG,EAAE,CAAC,wCAAE,CAAC,EAAE,CAAC,CAAC,EACxB,wDAAQ,CAAC,GAAG,EAAE,CAAC,IAAI,CAAC,cAAc,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,CAClD;aACI,SAAS,CACN,CAAC,IAA0B,EAAE,EAAE;YAC3B,MAAM,eAAe,GAAG,IAAI,CAAC,KAAK,CAC9B,IAAI,CAAC,OAAO,CAAC,GAAG,CAAC,cAAc,CAAC,CACjB,CAAC;YACpB,IAAI,CAAC,qBAAqB,CAAC,IAAI,CAAC,eAAe,CAAC,CAAC;YACjD,MAAM,KAAK,GAAG,CAAC,GAAG,IAAI,CAAC,IAAI,CAAC,CAAC;YAC7B,IAAI,CAAC,MAAM,GAAG,KAAK,CAAC,MAAM,CAAC;YAC3B,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;QACjC,CAAC,CACJ,CAAC;IACV,CAAC;CACJ;;;;;;;;;;;;;;;;;;;;;AClDsD;;;;;;;ICoBjD,4EAAwF;IACtF,uDACF;;IAAA,4DAAQ;;IADN,0DACF;IADE,qJACF;;;IACA,0EAAyC;IACvC,uEAAwE;IAC1E,4DAAM;;;IAD6C,0DAAsB;IAAtB,+FAAsB;;;IAW3E,0EAAgD;IAE5C,uDACF;;IAAA,4DAAQ;IACR,0EAAuB;IACrB,0EAAuF;IACzF,4DAAM;;;IAJJ,0DACF;IADE,sJACF;IAEsD,0DAAuB;IAAvB,gGAAuB;;;IAG/E,0EAA+C;IAE3C,uDACF;;IAAA,4DAAQ;IACR,0EAAuB;IACrB,0EAAsF;IACxF,4DAAM;;;IAJJ,0DACF;IADE,qJACF;IAEsD,0DAAsB;IAAtB,+FAAsB;;;IAG9E,0EAAmD;IAE/C,uDACF;;IAAA,4DAAQ;IACR,0EAAuB;IACrB,0EAA0F;IAC5F,4DAAM;;;IAJJ,0DACF;IADE,yJACF;IAEsD,0DAA0B;IAA1B,mGAA0B;;;IAGlF,0EAAiD;IAE7C,uDACF;;IAAA,4DAAQ;IACR,0EAAuB;IACrB,0EAAwF;IAC1F,4DAAM;;;IAJJ,0DACF;IADE,uJACF;IAEsD,0DAAwB;IAAxB,iGAAwB;;;IAGhF,0EAAkD;IAE9C,uDACF;;IAAA,4DAAQ;IACR,0EAAuB;IACrB,0EAAmG;IACrG,4DAAM;;;IAJJ,0DACF;IADE,wJACF;IAEgE,0DAAyB;IAAzB,kGAAyB;;;ADjExF,MAAM,mBAAoB,SAAQ,iEAAa;IAEpD,YAAoB,WAA2B,EAAQ,kBAAqC;QAC1F,KAAK,CAAC,kBAAkB,CAAC,CAAC;QADR,gBAAW,GAAX,WAAW,CAAgB;QAAQ,uBAAkB,GAAlB,kBAAkB,CAAmB;IAG5F,CAAC;IAED,QAAQ;QACN,IAAI,CAAC,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,SAAS,CAC9C,CAAC,IAAmB,EAAE,EAAE;YACtB,IAAI,IAAI,CAAC,GAAG,EAAE;gBACZ,IAAI,CAAC,GAAG,GAAG,IAAI,CAAC,GAAG,CAAC;aACrB;QACH,CAAC,CAAC,CAAC;IACP,CAAC;;sFAdU,mBAAmB;iHAAnB,mBAAmB;QCXhC,yEAA8B;QAIlB,uDAA4B;;QAAA,4DAAK;QAGzC,yEAAqC;QAEjC,kEAA+B;QAC/B,wDACF;;QAAA,4DAAS;QAIf,0EAAmC;QAI3B,wDACF;;QAAA,4DAAQ;QACR,2EAAsB;QACgB,wDAA2C;;QAAA,4DAAO;QAExF,sHAEQ;QACR,kHAEM;QACR,4DAAM;QACN,2EAA4B;QAExB,wDACF;;QAAA,4DAAQ;QACR,2EAAuB;QACrB,wEAAuE;QACzE,4DAAM;QAER,kHAOM;QACN,kHAOM;QACN,kHAOM;QACN,kHAOM;QACN,kHAOM;QACR,4DAAM;;QA3EI,0DAA4B;QAA5B,+IAA4B;QAI1B,0DAAwB;QAAxB,8IAAwB;QAE9B,0DACF;QADE,6JACF;QAQE,0DACF;QADE,0JACF;QAEsC,0DAA2C;QAA3C,yKAA2C;QAE5D,0DAAgB;QAAhB,gFAAgB;QAGd,0DAAgB;QAAhB,gFAAgB;QAMrC,0DACF;QADE,sJACF;QAEmD,0DAAqB;QAArB,2FAAqB;QAGpE,0DAAiB;QAAjB,iFAAiB;QAQjB,0DAAgB;QAAhB,gFAAgB;QAQhB,0DAAoB;QAApB,oFAAoB;QAQpB,0DAAkB;QAAlB,kFAAkB;QAQlB,0DAAmB;QAAnB,mFAAmB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACvE2D;AAC7B;AACV;AAEkB;AAGf;AACqB;AAClB;AACF;;;;;;;;;;;;;;;;;ICAjD,0EAA+D;IAC3D,yEAA2B;IAC/B,4DAAM;;;IAMM,gFAAyD;IACrD,uDACJ;IAAA,4DAAa;;;IAF4B,4EAAe;IACpD,0DACJ;IADI,qFACJ;;;IAOA,gFAA4D;IACxD,uDACJ;IAAA,4DAAa;;;IAF8B,6EAAgB;IACvD,0DACJ;IADI,sFACJ;;;IAWA,yEAAsC;IAAC,uDAAyB;;IAAA,4DAAK;;IAA9B,0DAAyB;IAAzB,qJAAyB;;;;IAChE,yEAAoC;IAE5B,mEAAkC;IAClC,2EAAiC;IAAC,uDAAwB;;IAAA,4DAAO;;;IAF7D,0DAAiC;IAAjC,0JAAiC;IAEH,0DAAwB;IAAxB,oJAAwB;;;IAKlE,yEAAsD;IAAC,uDAA4B;;IAAA,4DAAK;;IAAjC,0DAA4B;IAA5B,wJAA4B;;;IACnF,yEAAoC;IAAC,uDAA8C;;IAAA,4DAAK;;;IAAnD,0DAA8C;IAA9C,6MAA8C;;;IAGnF,yEAAsD;IAAC,uDAAwB;;IAAA,4DAAK;;IAA7B,0DAAwB;IAAxB,oJAAwB;;;IAGvE,2EAAyD;IAAA,uDAAe;IAAA,4DAAO;;;IAAtB,0DAAe;IAAf,yGAAe;;;IACxE,2EAAyD;IAAA,uDAAe;IAAA,4DAAO;;;IAAtB,0DAAe;IAAf,yGAAe;;;IACxE,2EAAyD;IAAA,uDAAe;IAAA,4DAAO;;;IAAtB,0DAAe;IAAf,yGAAe;;;IACxE,2EAAmD;IAAA,uDAAe;IAAA,4DAAO;;;IAAtB,0DAAe;IAAf,yGAAe;;;IAL1E,yEAAoC;IAChC,4EAAuC;IACnC,sHAA+E;IAC/E,sHAA+E;IAC/E,sHAA+E;IAC/E,sHAAyE;IAC7E,qEAAe;IACnB,4DAAK;;;IANa,0DAAwB;IAAxB,8GAAwB;IAC3B,0DAAqB;IAArB,iFAAqB;IACrB,0DAAqB;IAArB,iFAAqB;IACrB,0DAAoB;IAApB,gFAAoB;;;IAMnC,yEAAsD;IAAC,uDAA0B;;IAAA,4DAAK;;IAA/B,0DAA0B;IAA1B,sJAA0B;;;IACjF,yEAAoC;IAAC,uDAAgC;;IAAA,4DAAK;;;IAArC,0DAAgC;IAAhC,iKAAgC;;;IAGrE,yEAAsD;IAAC,uDAAyB;;IAAA,4DAAK;;IAA9B,0DAAyB;IAAzB,qJAAyB;;;IAChF,yEAAoC;IAAC,uDAAgB;IAAA,4DAAK;;;IAArB,0DAAgB;IAAhB,2FAAgB;;;IAGzD,oEAAyE;;;IACzE,oEAAkE;;;IAG1E,wEAA6C;IACzC,0EAAiB;IAEwB,uDAA+B;;IAAA,4DAAQ;IAGpF,qEAAe;;IAH8B,0DAA+B;IAA/B,2JAA+B;;;AD7DzE,MAAM,iBAAkB,SAAQ,iEAAa;IAYlD,YAAoB,WAAwB,EAAQ,kBAAqC;QACvF,KAAK,CAAC,kBAAkB,CAAC,CAAC;QADR,gBAAW,GAAX,WAAW,CAAa;QAAQ,uBAAkB,GAAlB,kBAAkB,CAAmB;QAVzF,SAAI,GAAW,EAAE,CAAC;QAClB,WAAM,GAAG,CAAC,OAAO,EAAE,OAAO,EAAE,MAAM,EAAE,MAAM,EAAE,OAAO,EAAE,OAAO,CAAC,CAAC;QAC9D,YAAO,GAAG,CAAC,WAAW,EAAE,SAAS,CAAC,CAAC;QACnC,qBAAgB,GAAa,CAAC,QAAQ,EAAE,QAAQ,EAAE,OAAO,EAAE,SAAS,EAAE,QAAQ,CAAC,CAAC;QAChF,qBAAgB,GAAG,IAAI,CAAC;QAQtB,IAAI,CAAC,UAAU,EAAE,CAAC;QAClB,IAAI,CAAC,YAAY,GAAG,IAAI,6EAAY,EAAE,CAAC;QACvC,IAAI,CAAC,YAAY,CAAC,QAAQ,GAAG,EAAE,CAAC;QAChC,IAAI,CAAC,YAAY,CAAC,OAAO,GAAG,aAAa,CAAC;QAC1C,IAAI,CAAC,YAAY,CAAC,KAAK,GAAG,OAAO,CAAC;QAClC,IAAI,CAAC,YAAY,CAAC,MAAM,GAAG,EAAE,CAAC;IAChC,CAAC;IAED,QAAQ;QACN,IAAI,CAAC,UAAU,GAAG,IAAI,6DAAc,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC;QACvD,IAAI,CAAC,UAAU,CAAC,SAAS,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC;QAC7C,IAAI,CAAC,oBAAoB,EAAE,CAAC;IAC9B,CAAC;IAED,eAAe;QACb,IAAI,CAAC,IAAI,CAAC,UAAU,CAAC,SAAS,CAAC,GAAG,EAAE,CAAC,IAAI,CAAC,SAAS,CAAC,SAAS,GAAG,CAAC,CAAC,CAAC;QAEnE,IAAI,CAAC,IAAI,CAAC,IAAI,GAAG,2CAAK,CAAC,IAAI,CAAC,IAAI,CAAC,UAAU,EAAE,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC;aAC9D,IAAI,CACH,mDAAG,CAAC,CAAC,CAAM,EAAE,EAAE;YACb,IAAI,CAAC,YAAY,CAAC,IAAI,GAAG,IAAI,CAAC,SAAS,CAAC,SAAS,GAAG,IAAI,CAAC,SAAS,CAAC,QAAQ,CAAC;YAC5E,IAAI,CAAC,YAAY,CAAC,QAAQ,GAAG,IAAI,CAAC,SAAS,CAAC,QAAQ,CAAC;YACrD,IAAI,CAAC,YAAY,CAAC,OAAO,GAAG,IAAI,CAAC,IAAI,CAAC,MAAM,GAAG,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,SAAS,CAAC;YACzE,IAAI,CAAC,UAAU,CAAC,SAAS,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC;QAC/C,CAAC,CAAC,CACH;aACA,SAAS,EAAE,CAAC;QAEf,IAAI,CAAC,IAAI,CAAC,IAAI,GAAG,+CAAS,CAAC,IAAI,CAAC,KAAK,CAAC,aAAa,EAAE,OAAO,CAAC;aAC1D,IAAI,CACH,6DAAY,CAAC,IAAI,CAAC,EAClB,qEAAoB,EAAE,EACtB,mDAAG,CAAC,GAAG,EAAE;YACP,IAAI,CAAC,SAAS,CAAC,SAAS,GAAG,CAAC,CAAC;YAC7B,IAAI,CAAC,YAAY,CAAC,OAAO,GAAG,IAAI,CAAC,KAAK,CAAC,aAAa,CAAC,KAAK,CAAC;YAC3D,IAAI,CAAC,UAAU,CAAC,SAAS,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC;QAC/C,CAAC,CAAC,CACH;aACA,SAAS,EAAE,CAAC;IACjB,CAAC;IAED,aAAa,CAAC,WAAgB;QAC5B,IAAI,WAAW,CAAC,KAAK,EAAE;YACrB,IAAI,CAAC,YAAY,CAAC,KAAK,GAAG,WAAW,CAAC,KAAK,CAAC;SAC7C;aAAM;YACL,IAAI,CAAC,YAAY,CAAC,KAAK,GAAG,EAAE,CAAC;SAC9B;QACD,IAAI,CAAC,YAAY,CAAC,IAAI,GAAG,CAAC,CAAC;QAC3B,IAAI,CAAC,UAAU,CAAC,SAAS,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC;IAC/C,CAAC;IAED,cAAc,CAAC,WAAgB;QAC7B,IAAI,WAAW,CAAC,KAAK,EAAE;YACrB,IAAI,CAAC,YAAY,CAAC,MAAM,GAAG,WAAW,CAAC,KAAK,CAAC;SAC9C;aAAM;YACL,IAAI,CAAC,YAAY,CAAC,MAAM,GAAG,EAAE,CAAC;SAC/B;QACD,IAAI,CAAC,YAAY,CAAC,IAAI,GAAG,CAAC,CAAC;QAC3B,IAAI,CAAC,UAAU,CAAC,SAAS,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC;IAC/C,CAAC;IAED,oBAAoB;QAClB,IAAI,CAAC,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC,UAAU,CAAC,sBAAsB;aACpD,SAAS,CAAC,CAAC,CAAiB,EAAE,EAAE;YAC/B,IAAI,CAAC,EAAE;gBACL,IAAI,CAAC,YAAY,CAAC,QAAQ,GAAG,CAAC,CAAC,QAAQ,CAAC;gBACxC,IAAI,CAAC,YAAY,CAAC,IAAI,GAAG,CAAC,CAAC,IAAI,CAAC;gBAChC,IAAI,CAAC,YAAY,CAAC,UAAU,GAAG,CAAC,CAAC,UAAU,CAAC;aAC7C;QACH,CAAC,CAAC,CAAC;IACP,CAAC;;kFApFU,iBAAiB;+GAAjB,iBAAiB;kEASjB,sEAAY;kEACZ,4DAAO;;;;;;;;QC5BpB,yEAA8B;QAIV,uDAAsB;;QAAA,4DAAK;QAK/C,yEAA8B;QAC1B,6GAEM;;QACN,0EAAsB;QAEoC,mMAA8B,gHACzD,yBAAqB,IADoC;;QAE5E,iFAAuB;QAAA,wDAAsB;;QAAA,4DAAa;QAC1D,8HAEa;QACjB,4DAAa;QAEjB,0EAAiC;QACqB,oMAA+B,gHACZ,0BAAsB,IADV;;QAE7E,iFAAuB;QAAA,wDAAsB;;QAAA,4DAAa;QAC1D,8HAEa;QACjB,4DAAa;QAEjB,0EAAiC;QAC7B,4EAAqF;;QACzF,4DAAM;QAEV,2EAA8B;QAGtB,6EAAoC;QAChC,8GAAqE;QACrE,8GAKK;QACT,qEAAe;QACf,6EAAoC;QAChC,8GAAwF;QACxF,8GAAwF;QAC5F,qEAAe;QACf,6EAAmC;QAC/B,8GAAoF;QACpF,8GAOK;QACT,qEAAe;QACf,6EAAqC;QACjC,8GAAsF;QACtF,8GAA0E;QAC9E,qEAAe;QACf,6EAAoC;QAChC,8GAAqF;QACrF,8GAA0D;QAC9D,qEAAe;QAEf,8GAAyE;QACzE,8GAAkE;QACtE,4DAAQ;QAEZ,kIAMe;QACf,gFACqD;QACzD,4DAAM;;QAjFc,0DAAsB;QAAtB,yIAAsB;QAMV,0DAAiC;QAAjC,2JAAiC;QAK4B,0DAA4C;QAA5C,qKAA4C;QAAhH,4EAAe;QAED,0DAAsB;QAAtB,0IAAsB;QACf,0DAAS;QAAT,+EAAS;QAOvC,0DAA6C;QAA7C,sKAA6C;QADpC,4EAAe;QAED,0DAAsB;QAAtB,0IAAsB;QACd,0DAAU;QAAV,gFAAU;QAMjB,0DAAiD;QAAjD,0KAAiD;QAIzE,0DAAe;QAAf,4EAAe;QAmCC,2DAAkC;QAAlC,iGAAkC;QACrB,0DAA0B;QAA1B,kGAA0B;QAGpD,0DAA4B;QAA5B,4FAA4B;QAO3B,0DAAe;QAAf,4EAAe;;;;;;;;;;;;;;;;;;;;;;AClFoB;AACD;AACW;AACW;AACN;;;AAEtE,MAAM,MAAM,GAAW;IACrB;QACE,IAAI,EAAE,EAAE;QACR,SAAS,EAAE,+EAAiB;QAC5B,IAAI,EAAE,EAAE,SAAS,EAAE,sBAAsB,EAAE;QAC3C,WAAW,EAAE,CAAC,gEAAS,CAAC;KACzB,EAAE;QACD,IAAI,EAAE,KAAK;QACX,SAAS,EAAE,qFAAmB;QAC9B,WAAW,EAAE,CAAC,gEAAS,CAAC;QACxB,OAAO,EAAE,EAAE,GAAG,EAAE,0EAAwB,EAAE;KAC3C;CACF,CAAC;AAUK,MAAM,iBAAiB;;kFAAjB,iBAAiB;8GAAjB,iBAAiB;kHAL1B,kEAAqB,CAAC,MAAM,CAAC,EAE7B,yDAAY;mIAGH,iBAAiB,oFAH1B,yDAAY;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACzB+B;AACuB;AACX;AACF;AACqB;AACvB;AACU;AACR;AACJ;AACM;AACiB;AACX;;AAmB1D,MAAM,UAAU;;oEAAV,UAAU;uGAAV,UAAU;4GAFV,CAAC,0EAAwB,CAAC,YAVnC,yDAAY;QACZ,+DAAY;QACZ,mEAAc;QACd,wFAAwB;QACxB,iEAAa;QACb,4EAAkB;QAClB,oEAAc;QACd,sEAAe;QACf,oEAAiB;mIAIR,UAAU,mBAdN,+EAAiB,EAAE,qFAAmB,aAEnD,yDAAY;QACZ,+DAAY;QACZ,mEAAc;QACd,wFAAwB;QACxB,iEAAa;QACb,4EAAkB;QAClB,oEAAc;QACd,sEAAe;QACf,oEAAiB;;;;;;;;;;;;;;;;;;;AC3BuD;AAOhC;;;;AAKrC,MAAM,WAAW;IAEpB,YACY,UAAsB,EACtB,sBAA8C;QAD9C,eAAU,GAAV,UAAU,CAAY;QACtB,2BAAsB,GAAtB,sBAAsB,CAAwB;IAAI,CAAC;IAE/D,QAAQ,CAAC,QAAsB;QAC3B,MAAM,GAAG,GAAG,MAAM,CAAC;QACnB,MAAM,YAAY,GAAG,IAAI,4DAAU,EAAE;aAChC,GAAG,CAAC,QAAQ,EAAE,QAAQ,CAAC,MAAM,CAAC;aAC9B,GAAG,CAAC,SAAS,EAAE,QAAQ,CAAC,OAAO,CAAC;aAChC,GAAG,CAAC,UAAU,EAAE,QAAQ,CAAC,QAAQ,CAAC,QAAQ,EAAE,CAAC;aAC7C,GAAG,CAAC,MAAM,EAAE,QAAQ,CAAC,IAAI,CAAC,QAAQ,EAAE,CAAC;aACrC,GAAG,CAAC,aAAa,EAAE,QAAQ,CAAC,WAAW,CAAC;aACxC,GAAG,CAAC,OAAO,EAAE,QAAQ,CAAC,KAAK,CAAC;aAC5B,GAAG,CAAC,QAAQ,EAAE,QAAQ,CAAC,MAAM,CAAC;aAC9B,GAAG,CAAC,SAAS,EAAE,QAAQ,CAAC,OAAO,CAAC,QAAQ,EAAE,CAAC;QAEhD,OAAO,IAAI,CAAC,UAAU,CAAC,GAAG,CAAS,GAAG,EAAE;YACpC,MAAM,EAAE,YAAY;YACpB,OAAO,EAAE,UAAU;SACtB,CAAC,CAAC,IAAI,CAAC,0DAAU,CAAC,IAAI,CAAC,sBAAsB,CAAC,WAAW,CAAC,CAAC,CAAC;IACjE,CAAC;IAED,aAAa,CAAC,EAAU;QACpB,MAAM,GAAG,GAAG,QAAQ,EAAE,EAAE,CAAC;QACzB,OAAO,IAAI,CAAC,UAAU,CAAC,GAAG,CAAO,GAAG,CAAC;aAChC,IAAI,CAAC,0DAAU,CAAC,IAAI,CAAC,sBAAsB,CAAC,WAAW,CAAC,CAAC,CAAC;IACnE,CAAC;;sEA5BQ,WAAW;4GAAX,WAAW,WAAX,WAAW,mBAFR,MAAM","sources":["./src/app/core/domain-classes/n-log-resource.ts","./src/app/core/domain-classes/resource-parameter.ts","./src/app/n-log/log-detail-resolver.ts","./src/app/n-log/n-log-datasource.ts","./src/app/n-log/n-log-detail/n-log-detail.component.ts","./src/app/n-log/n-log-detail/n-log-detail.component.html","./src/app/n-log/n-log-list/n-log-list.component.ts","./src/app/n-log/n-log-list/n-log-list.component.html","./src/app/n-log/n-log-routing.module.ts","./src/app/n-log/n-log.module.ts","./src/app/n-log/n-log.service.ts"],"sourcesContent":["import { ResourceParameter } from './resource-parameter';\r\n\r\nexport class NLogResource extends ResourceParameter {\r\n    message?: string = '';\r\n    level?: string = 'Fatal';\r\n    source?: string = '.Net Core';\r\n}","export abstract class ResourceParameter {\r\n  fields = '';\r\n  orderBy = '';\r\n  searchQuery = '';\r\n  pageSize = 30;\r\n  skip = 0;\r\n  name = '';\r\n  totalCount = 0;\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport {\r\n    Resolve,\r\n    ActivatedRouteSnapshot,\r\n    RouterStateSnapshot\r\n} from '@angular/router';\r\nimport { NLog } from '@core/domain-classes/n-log';\r\nimport { User } from '@core/domain-classes/user';\r\nimport { Observable } from 'rxjs';\r\nimport { NLogService } from './n-log.service';\r\n\r\n@Injectable()\r\nexport class LogDetailResolverService implements Resolve<NLog> {\r\n    constructor(private nLogService: NLogService) { }\r\n    resolve(\r\n        route: ActivatedRouteSnapshot,\r\n        state: RouterStateSnapshot\r\n    ): Observable<NLog> {\r\n        const id = route.paramMap.get('id');\r\n        return this.nLogService.getLogDetails(id) as Observable<NLog>;\r\n    }\r\n}\r\n","import { DataSource } from '@angular/cdk/table';\r\nimport { HttpResponse } from '@angular/common/http';\r\nimport { NLog } from '@core/domain-classes/n-log';\r\nimport { NLogResource } from '@core/domain-classes/n-log-resource';\r\nimport { ResponseHeader } from '@core/domain-classes/response-header';\r\nimport { BehaviorSubject, Observable, of } from 'rxjs';\r\nimport { catchError, finalize } from 'rxjs/operators';\r\nimport { NLogService } from './n-log.service';\r\n\r\nexport class NLogDataSource implements DataSource<NLog> {\r\n\r\n    private nLogSubject = new BehaviorSubject<NLog[]>([]);\r\n    private responseHeaderSubject = new BehaviorSubject<ResponseHeader>(null);\r\n    private loadingSubject = new BehaviorSubject<boolean>(false);\r\n\r\n    public loading$ = this.loadingSubject.asObservable();\r\n    private _count: number = 0;\r\n\r\n\r\n    public get count(): number {\r\n        return this._count;\r\n    }\r\n\r\n    public responseHeaderSubject$ = this.responseHeaderSubject.asObservable();\r\n\r\n    constructor(private nLogService: NLogService) { }\r\n\r\n    connect(): Observable<NLog[]> {\r\n        return this.nLogSubject.asObservable();\r\n    }\r\n\r\n    disconnect(): void {\r\n        this.nLogSubject.complete();\r\n        this.loadingSubject.complete();\r\n    }\r\n\r\n    loadNLogs(nLogResource: NLogResource) {\r\n        this.loadingSubject.next(true);\r\n        this.nLogService.getNLogs(nLogResource).pipe(\r\n            catchError(() => of([])),\r\n            finalize(() => this.loadingSubject.next(false))\r\n        )\r\n            .subscribe(\r\n                (resp: HttpResponse<NLog[]>) => {\r\n                    const paginationParam = JSON.parse(\r\n                        resp.headers.get('X-Pagination')\r\n                    ) as ResponseHeader;\r\n                    this.responseHeaderSubject.next(paginationParam);\r\n                    const nLogs = [...resp.body];\r\n                    this._count = nLogs.length;\r\n                    this.nLogSubject.next(nLogs);\r\n                }\r\n            );\r\n    }\r\n}\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { ActivatedRoute } from '@angular/router';\r\nimport { NLog } from '@core/domain-classes/n-log';\r\nimport { TranslationService } from '@core/services/translation.service';\r\nimport { BaseComponent } from 'src/app/base.component';\r\n\r\n@Component({\r\n  selector: 'app-n-log-detail',\r\n  templateUrl: './n-log-detail.component.html',\r\n  styleUrls: ['./n-log-detail.component.scss']\r\n})\r\nexport class NLogDetailComponent extends BaseComponent implements OnInit {\r\n  log: NLog;\r\n  constructor(private activeRoute: ActivatedRoute,public translationService:TranslationService) {\r\n    super(translationService);\r\n   \r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.sub$.sink = this.activeRoute.data.subscribe(\r\n      (data: { log: NLog }) => {\r\n        if (data.log) {\r\n          this.log = data.log;\r\n        }\r\n      });\r\n  }\r\n}\r\n","<div class=\"page-header-main\">\r\n  <div class=\"row align-items-center justify-content-between\">\r\n    <div class=\"col-md-auto col-sm-auto\">\r\n      <div class=\"content-header\">\r\n        <h1>{{\"LOG_DETAIL\" | translate}}</h1>\r\n      </div>\r\n    </div>\r\n    <div class=\"col-md-auto col-sm-auto\">\r\n      <button [routerLink]=\"['/logs']\" class=\"btn btn-success btn-sm m-right-10\">\r\n        <i class=\"fas fa-backward\"></i>\r\n        {{\"BACK_TO_LIST\" | translate}}\r\n      </button>\r\n    </div>\r\n  </div>\r\n</div>\r\n<div class=\"mat-elevation-z8 py-4\">\r\n  <div class=\"col-md-12\">\r\n    <div class=\"row pb-2\">\r\n      <label for=\"staticEmail\" class=\"col-sm-2 col-form-label font-weight-bold\">\r\n        {{\"DATE_TIME\" | translate}}\r\n      </label>\r\n      <div class=\"col-sm-4\">\r\n        <span readonly class=\"form-control\">{{log.logged | date:\"dd/MM/yyyy hh:mm:ss\"}}</span>\r\n      </div>\r\n      <label for=\"source\" *ngIf=\"log.source\" class=\"col-sm-1 col-form-label font-weight-bold\">\r\n        {{\"SOURCE\" | translate}}\r\n      </label>\r\n      <div class=\"col-sm-5\" *ngIf=\"log.source\">\r\n        <input type=\"text\" readonly class=\"form-control\" value=\"{{log.source}}\">\r\n      </div>\r\n    </div>\r\n    <div class=\"form-group row\">\r\n      <label for=\"inputPassword\" class=\"col-sm-2 col-form-label font-weight-bold\">\r\n        {{\"LEVEL\" | translate}}\r\n      </label>\r\n      <div class=\"col-sm-10\">\r\n        <input type=\"text\" readonly class=\"form-control\" value=\"{{log.level}}\">\r\n      </div>\r\n    </div>\r\n    <div *ngIf=\"log.message\" class=\"form-group row\">\r\n      <label for=\"inputPassword\" class=\"col-sm-2 col-form-label font-weight-bold\">\r\n        {{\"MESSAGE\" | translate}}\r\n      </label>\r\n      <div class=\"col-sm-10\">\r\n        <textarea type=\"text\" readonly class=\"form-control\" value=\"{{log.message}}\"></textarea>\r\n      </div>\r\n    </div>\r\n    <div *ngIf=\"log.logger\" class=\"form-group row\">\r\n      <label for=\"inputPassword\" class=\"col-sm-2 col-form-label font-weight-bold\">\r\n        {{\"LOGGER\" | translate}}\r\n      </label>\r\n      <div class=\"col-sm-10\">\r\n        <textarea type=\"text\" readonly class=\"form-control\" value=\"{{log.logger}}\"></textarea>\r\n      </div>\r\n    </div>\r\n    <div *ngIf=\"log.properties\" class=\"form-group row\">\r\n      <label for=\"inputPassword\" class=\"col-sm-2 col-form-label font-weight-bold\">\r\n        {{\"PROPERTIES\" | translate}}\r\n      </label>\r\n      <div class=\"col-sm-10\">\r\n        <textarea type=\"text\" readonly class=\"form-control\" value=\"{{log.properties}}\"></textarea>\r\n      </div>\r\n    </div>\r\n    <div *ngIf=\"log.callsite\" class=\"form-group row\">\r\n      <label for=\"inputPassword\" class=\"col-sm-2 col-form-label font-weight-bold\">\r\n        {{\"CALLSITE\" | translate}}\r\n      </label>\r\n      <div class=\"col-sm-10\">\r\n        <textarea type=\"text\" readonly class=\"form-control\" value=\"{{log.callsite}}\"></textarea>\r\n      </div>\r\n    </div>\r\n    <div *ngIf=\"log.exception\" class=\"form-group row\">\r\n      <label for=\"inputPassword\" class=\"col-sm-2 col-form-label font-weight-bold\">\r\n        {{\"EXCEPTION\" | translate}}\r\n      </label>\r\n      <div class=\"col-sm-10\">\r\n        <textarea type=\"text\" rows=\"10\" readonly class=\"form-control\" value=\"{{log.exception}}\"></textarea>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</div>\r\n","import { AfterViewInit, Component, ElementRef, OnInit, ViewChild } from '@angular/core';\r\nimport { MatPaginator } from '@angular/material/paginator';\r\nimport { MatSort } from '@angular/material/sort';\r\nimport { NLog } from '@core/domain-classes/n-log';\r\nimport { NLogResource } from '@core/domain-classes/n-log-resource';\r\nimport { ResponseHeader } from '@core/domain-classes/response-header';\r\nimport { TranslationService } from '@core/services/translation.service';\r\nimport { fromEvent, merge, Observable } from 'rxjs';\r\nimport { debounceTime, distinctUntilChanged, tap } from 'rxjs/operators';\r\nimport { BaseComponent } from 'src/app/base.component';\r\nimport { NLogDataSource } from '../n-log-datasource';\r\nimport { NLogService } from '../n-log.service';\r\n\r\n@Component({\r\n  selector: 'app-n-log-list',\r\n  templateUrl: './n-log-list.component.html',\r\n  styleUrls: ['./n-log-list.component.scss']\r\n})\r\nexport class NLogListComponent extends BaseComponent implements OnInit, AfterViewInit {\r\n  dataSource: NLogDataSource;\r\n  logs: NLog[] = [];\r\n  levels = ['Fatal', 'Error', 'Warn', 'Info', 'Debug', 'Trace'];\r\n  sources = ['.Net Core', 'Angular'];\r\n  displayedColumns: string[] = ['action', 'logged', 'level', 'message', 'source'];\r\n  isLoadingResults = true;\r\n  nLogResource: NLogResource;\r\n  loading$: Observable<boolean>;\r\n  @ViewChild(MatPaginator) paginator: MatPaginator;\r\n  @ViewChild(MatSort) sort: MatSort;\r\n  @ViewChild('input') input: ElementRef;\r\n  constructor(private nLogService: NLogService,public translationService:TranslationService) {\r\n    super(translationService);\r\n    this.getLangDir();\r\n    this.nLogResource = new NLogResource();\r\n    this.nLogResource.pageSize = 10;\r\n    this.nLogResource.orderBy = 'logged desc';\r\n    this.nLogResource.level = 'Error';\r\n    this.nLogResource.source = '';\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.dataSource = new NLogDataSource(this.nLogService);\r\n    this.dataSource.loadNLogs(this.nLogResource);\r\n    this.getResourceParameter();\r\n  }\r\n\r\n  ngAfterViewInit() {\r\n    this.sort.sortChange.subscribe(() => this.paginator.pageIndex = 0);\r\n\r\n    this.sub$.sink = merge(this.sort.sortChange, this.paginator.page)\r\n      .pipe(\r\n        tap((c: any) => {\r\n          this.nLogResource.skip = this.paginator.pageIndex * this.paginator.pageSize;\r\n          this.nLogResource.pageSize = this.paginator.pageSize;\r\n          this.nLogResource.orderBy = this.sort.active + ' ' + this.sort.direction;\r\n          this.dataSource.loadNLogs(this.nLogResource);\r\n        })\r\n      )\r\n      .subscribe();\r\n\r\n    this.sub$.sink = fromEvent(this.input.nativeElement, 'keyup')\r\n      .pipe(\r\n        debounceTime(1000),\r\n        distinctUntilChanged(),\r\n        tap(() => {\r\n          this.paginator.pageIndex = 0;\r\n          this.nLogResource.message = this.input.nativeElement.value;\r\n          this.dataSource.loadNLogs(this.nLogResource);\r\n        })\r\n      )\r\n      .subscribe();\r\n  }\r\n\r\n  onLevelChange(filtervalue: any) {\r\n    if (filtervalue.value) {\r\n      this.nLogResource.level = filtervalue.value;\r\n    } else {\r\n      this.nLogResource.level = '';\r\n    }\r\n    this.nLogResource.skip = 0;\r\n    this.dataSource.loadNLogs(this.nLogResource);\r\n  }\r\n\r\n  onSourceChange(filtervalue: any) {\r\n    if (filtervalue.value) {\r\n      this.nLogResource.source = filtervalue.value;\r\n    } else {\r\n      this.nLogResource.source = '';\r\n    }\r\n    this.nLogResource.skip = 0;\r\n    this.dataSource.loadNLogs(this.nLogResource);\r\n  }\r\n\r\n  getResourceParameter() {\r\n    this.sub$.sink = this.dataSource.responseHeaderSubject$\r\n      .subscribe((c: ResponseHeader) => {\r\n        if (c) {\r\n          this.nLogResource.pageSize = c.pageSize;\r\n          this.nLogResource.skip = c.skip;\r\n          this.nLogResource.totalCount = c.totalCount;\r\n        }\r\n      });\r\n  }\r\n}\r\n","<div class=\"page-header-main\">\r\n    <div class=\"row align-items-center justify-content-between\">\r\n        <div class=\"col-md-auto col-sm-auto\">\r\n            <div class=\"content-header\">\r\n                <h1>{{\"LOGS\" | translate}}</h1>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>\r\n<div class=\"mat-elevation-z8\">\r\n    <div class=\"loading-shade\" *ngIf=\"dataSource.loading$ | async\">\r\n        <mat-spinner></mat-spinner>\r\n    </div>\r\n    <div class=\"row mb-3\">\r\n        <div class=\"col-sm-4 form-group\">\r\n            <mat-select  [dir]=\"langDir\" class=\"form-control\" [(value)]=\"nLogResource.level\" placeholder=\"{{'SELECT_LEVEL' | translate}}\"\r\n                (selectionChange)=\"onLevelChange($event)\">\r\n                <mat-option [value]=\"\">{{\"NONE\" | translate}}</mat-option>\r\n                <mat-option *ngFor=\"let level of levels\" [value]=\"level\">\r\n                    {{level}}\r\n                </mat-option>\r\n            </mat-select>\r\n        </div>\r\n        <div class=\"col-sm-4 form-group\">\r\n            <mat-select  [dir]=\"langDir\" class=\"form-control\" [(value)]=\"nLogResource.source\"\r\n                placeholder=\"{{'SELECT_SOURCE' | translate}}\" (selectionChange)=\"onSourceChange($event)\">\r\n                <mat-option [value]=\"\">{{\"NONE\" | translate}}</mat-option>\r\n                <mat-option *ngFor=\"let source of sources\" [value]=\"source\">\r\n                    {{source}}\r\n                </mat-option>\r\n            </mat-select>\r\n        </div>\r\n        <div class=\"col-sm-4 form-group\">\r\n            <input class=\"form-control\" placeholder=\"{{'SEARCH_BY_MESSAGE' | translate}}\" #input>\r\n        </div>\r\n    </div>\r\n    <div class=\"table-responsive\">\r\n        <table  [dir]=\"langDir\" mat-table [dataSource]=\"dataSource\" class=\"table table-bordered table-hover\" matSort matSortActive=\"logged\"\r\n            matSortDirection=\"desc\">\r\n            <ng-container matColumnDef=\"action\">\r\n                <th mat-header-cell *matHeaderCellDef> {{\"ACTION\" | translate}} </th>\r\n                <td mat-cell *matCellDef=\"let nLog\">\r\n                    <button [routerLink]=\"['/logs', nLog.id]\" class=\"btn btn-success btn-sm m-right-10\" type=\"button\">\r\n                        <i class=\"fas fa-info-circle\"></i>\r\n                        <span class=\"d-none d-sm-inline\"> {{\"DETAIL\" | translate}}</span>\r\n                    </button>\r\n                </td>\r\n            </ng-container>\r\n            <ng-container matColumnDef=\"logged\">\r\n                <th mat-header-cell *matHeaderCellDef mat-sort-header> {{\"DATE_TIME\" | translate}} </th>\r\n                <td mat-cell *matCellDef=\"let nLog\"> {{nLog?.logged | date:\"dd/MM/yyyy hh:mm:ss\"}} </td>\r\n            </ng-container>\r\n            <ng-container matColumnDef=\"level\">\r\n                <th mat-header-cell *matHeaderCellDef mat-sort-header> {{\"LEVEL\" | translate}} </th>\r\n                <td mat-cell *matCellDef=\"let nLog\">\r\n                    <ng-container [ngSwitch]=\"nLog?.level\">\r\n                        <span *ngSwitchCase=\"'Fatal'\" class=\"badge badge-danger\">{{nLog?.level}}</span>\r\n                        <span *ngSwitchCase=\"'Error'\" class=\"badge badge-danger\">{{nLog?.level}}</span>\r\n                        <span *ngSwitchCase=\"'Warn'\" class=\"badge badge-warning\">{{nLog?.level}}</span>\r\n                        <span *ngSwitchDefault class=\"badge badge-primary\">{{nLog?.level}}</span>\r\n                    </ng-container>\r\n                </td>\r\n            </ng-container>\r\n            <ng-container matColumnDef=\"message\">\r\n                <th mat-header-cell *matHeaderCellDef mat-sort-header> {{\"MESSAGE\" | translate}} </th>\r\n                <td mat-cell *matCellDef=\"let nLog\"> {{nLog.message | limitTo: 80 }} </td>\r\n            </ng-container>\r\n            <ng-container matColumnDef=\"source\">\r\n                <th mat-header-cell *matHeaderCellDef mat-sort-header> {{\"SOURCE\" | translate}} </th>\r\n                <td mat-cell *matCellDef=\"let nLog\"> {{nLog.source}} </td>\r\n            </ng-container>\r\n\r\n            <tr mat-header-row *matHeaderRowDef=\"displayedColumns;sticky: true\"></tr>\r\n            <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\"></tr>\r\n        </table>\r\n    </div>\r\n    <ng-container *ngIf=\"dataSource.count === 0\">\r\n        <div class=\"row\">\r\n            <div class=\"col-sm-12 ml-4 mt-3\">\r\n                <label class=\"font-weight-bold\"> {{\"NO_DATA_FOUND\" | translate}}</label>\r\n            </div>\r\n        </div>\r\n    </ng-container>\r\n    <mat-paginator  [dir]=\"langDir\" class=\"w-100\" [length]=\"nLogResource.totalCount\" [pageSize]=\"nLogResource.pageSize\"\r\n        [pageSizeOptions]=\"[10, 20, 30]\"></mat-paginator>\r\n</div>","import { NgModule } from '@angular/core';\r\nimport { RouterModule, Routes } from '@angular/router';\r\nimport { AuthGuard } from '@core/security/auth.guard';\r\nimport { LogDetailResolverService } from './log-detail-resolver';\r\nimport { NLogDetailComponent } from './n-log-detail/n-log-detail.component';\r\nimport { NLogListComponent } from './n-log-list/n-log-list.component';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: '',\r\n    component: NLogListComponent,\r\n    data: { claimType: 'LOGS_VIEW_ERROR_LOGS' },\r\n    canActivate: [AuthGuard]\r\n  }, {\r\n    path: ':id',\r\n    component: NLogDetailComponent,\r\n    canActivate: [AuthGuard],\r\n    resolve: { log: LogDetailResolverService },\r\n  }\r\n];\r\n\r\n@NgModule({\r\n  declarations: [],\r\n  imports: [\r\n    RouterModule.forChild(routes)\r\n  ], exports: [\r\n    RouterModule\r\n  ]\r\n})\r\nexport class NLogRoutingModule { }\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { NLogListComponent } from './n-log-list/n-log-list.component';\r\nimport { NLogRoutingModule } from './n-log-routing.module';\r\nimport { MatTableModule } from '@angular/material/table';\r\nimport { MatProgressSpinnerModule } from '@angular/material/progress-spinner';\r\nimport { MatSortModule } from '@angular/material/sort';\r\nimport { MatPaginatorModule } from '@angular/material/paginator';\r\nimport { MatInputModule } from '@angular/material/input';\r\nimport { SharedModule } from '@shared/shared.module';\r\nimport { MatSelectModule } from '@angular/material/select';\r\nimport { NLogDetailComponent } from './n-log-detail/n-log-detail.component';\r\nimport { LogDetailResolverService } from './log-detail-resolver';\r\n\r\n\r\n\r\n@NgModule({\r\n  declarations: [NLogListComponent, NLogDetailComponent],\r\n  imports: [\r\n    CommonModule,\r\n    SharedModule,\r\n    MatTableModule,\r\n    MatProgressSpinnerModule,\r\n    MatSortModule,\r\n    MatPaginatorModule,\r\n    MatInputModule,\r\n    MatSelectModule,\r\n    NLogRoutingModule\r\n  ],\r\n  providers: [LogDetailResolverService]\r\n})\r\nexport class NLogModule { }\r\n","import { HttpClient, HttpParams, HttpResponse } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { NLog } from '@core/domain-classes/n-log';\r\nimport { NLogResource } from '@core/domain-classes/n-log-resource';\r\nimport { CommonError } from '@core/error-handler/common-error';\r\nimport { CommonHttpErrorService } from '@core/error-handler/common-http-error.service';\r\nimport { Observable } from 'rxjs';\r\nimport { catchError } from 'rxjs/operators';\r\n\r\n@Injectable({\r\n    providedIn: 'root'\r\n})\r\nexport class NLogService {\r\n\r\n    constructor(\r\n        private httpClient: HttpClient,\r\n        private commonHttpErrorService: CommonHttpErrorService) { }\r\n\r\n    getNLogs(resource: NLogResource): Observable<HttpResponse<NLog[]> | CommonError> {\r\n        const url = `NLog`;\r\n        const customParams = new HttpParams()\r\n            .set('Fields', resource.fields)\r\n            .set('OrderBy', resource.orderBy)\r\n            .set('PageSize', resource.pageSize.toString())\r\n            .set('Skip', resource.skip.toString())\r\n            .set('SearchQuery', resource.searchQuery)\r\n            .set('level', resource.level)\r\n            .set('source', resource.source)\r\n            .set('message', resource.message.toString())\r\n\r\n        return this.httpClient.get<NLog[]>(url, {\r\n            params: customParams,\r\n            observe: 'response'\r\n        }).pipe(catchError(this.commonHttpErrorService.handleError));\r\n    }\r\n\r\n    getLogDetails(id: string): Observable<NLog | CommonError> {\r\n        const url = `NLog/${id}`;\r\n        return this.httpClient.get<NLog>(url)\r\n            .pipe(catchError(this.commonHttpErrorService.handleError));\r\n    }\r\n}"],"names":[],"sourceRoot":"webpack:///","x_google_ignoreList":[]}