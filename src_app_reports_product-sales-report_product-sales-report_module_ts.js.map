{"version":3,"file":"src_app_reports_product-sales-report_product-sales-report_module_ts.js","mappings":"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","sources":["./src/app/core/domain-classes/product-resource-parameter.ts","./src/app/core/domain-classes/resource-parameter.ts","./src/app/core/domain-classes/sales-order-resource-parameter.ts","./src/app/core/domain-classes/sales-order-status.ts","./src/app/customer/customer.service.ts","./src/app/product/product.service.ts","./src/app/reports/product-sales-report/product-sales-report-routing.module.ts","./src/app/reports/product-sales-report/product-sales-report.component.ts","./src/app/reports/product-sales-report/product-sales-report.component.html","./src/app/reports/product-sales-report/product-sales-report.datasource.ts","./src/app/reports/product-sales-report/product-sales-report.module.ts","./src/app/sales-order/sales-order.service.ts"],"sourcesContent":["import { ResourceParameter } from \"./resource-parameter\";\r\nexport class ProductResourceParameter extends ResourceParameter {\r\n    name: string = '';\r\n    unitId?: string = '';\r\n    barcode?:string ='';\r\n    categoryId?: string = '';\r\n    brandId?: string = '';\r\n    id?: string='';\r\n}\r\n","export abstract class ResourceParameter {\r\n  fields = '';\r\n  orderBy = '';\r\n  searchQuery = '';\r\n  pageSize = 30;\r\n  skip = 0;\r\n  name = '';\r\n  totalCount = 0;\r\n}\r\n","import { ResourceParameter } from './resource-parameter';\r\nimport { SalesOrderStatusEnum } from './sales-order-status';\r\n\r\nexport class SalesOrderResourceParameter extends ResourceParameter {\r\n    orderNumber?: string = '';\r\n    customerName?: string = '';\r\n    sOCreatedDate?: Date;\r\n    customerId?: string = '';\r\n    fromDate?: Date;\r\n    toDate?: Date;\r\n    productId: string;\r\n    isSalesOrderRequest: boolean = false;\r\n    status?: SalesOrderStatusEnum = SalesOrderStatusEnum.All;\r\n    productName?: string;\r\n}\r\n","export enum SalesOrderStatusEnum {\r\n  Not_Return = 0,\r\n  Return = 1,\r\n  All = 2\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { Observable, of } from 'rxjs';\r\nimport { HttpResponse, HttpClient, HttpParams } from '@angular/common/http';\r\nimport { Guid } from 'guid-typescript';\r\nimport { CustomerResourceParameter } from '@core/domain-classes/customer-resource-parameter';\r\nimport { Customer } from '@core/domain-classes/customer';\r\nimport { CustomerList } from '@core/domain-classes/customer-list';\r\nimport { SupplierPayment } from '@core/domain-classes/supplier-payment';\r\nimport { CustomerPayment } from '@core/domain-classes/customer-payment';\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class CustomerService {\r\n  constructor(private http: HttpClient) {}\r\n\r\n  getCustomers(\r\n    resourceParams: CustomerResourceParameter\r\n  ): Observable<HttpResponse<Customer[]>> {\r\n    const url = 'customer';\r\n    const customParams = new HttpParams()\r\n      .set('fields', resourceParams.fields)\r\n      .set('orderBy', resourceParams.orderBy)\r\n      .set('pageSize', resourceParams.pageSize.toString())\r\n      .set('skip', resourceParams.skip.toString())\r\n      .set('searchQuery', resourceParams.searchQuery)\r\n      .set('customerName', resourceParams.customerName)\r\n      .set('mobileNo', resourceParams.mobileNo)\r\n      .set('phoneNo', resourceParams.phoneNo)\r\n      .set('email', resourceParams.email)\r\n      .set('contactPerson', resourceParams.contactPerson)\r\n      .set('website', resourceParams.website);\r\n    return this.http.get<Customer[]>(url, {\r\n      params: customParams,\r\n      observe: 'response',\r\n    });\r\n  }\r\n\r\n  getCustomersForDropDown(\r\n    searchBy: string,\r\n    searchString: string\r\n  ): Observable<Customer[]> {\r\n    const url = 'customer/search';\r\n    if (searchString && searchBy) {\r\n      let params = `?searchQuery=${searchString.trim()}&searchBy=${searchBy}&pageSize=10`;\r\n      return this.http.get<Customer[]>(url + params);\r\n    }\r\n    return of([]);\r\n  }\r\n\r\n  getWalkInCustomer() {\r\n    const url = 'customer/walkIn';\r\n    return this.http.get<Customer>(url);\r\n  }\r\n\r\n  getCustomer(id: string): Observable<Customer> {\r\n    const url = 'customer/' + id;\r\n    return this.http.get<Customer>(url);\r\n  }\r\n\r\n  deleteCustomer(id: string): Observable<void> {\r\n    const url = 'customer/' + id;\r\n    return this.http.delete<void>(url);\r\n  }\r\n  updateCustomer(id: string, customer: Customer): Observable<Customer> {\r\n    const url = 'customer/' + id;\r\n    return this.http.put<Customer>(url, customer);\r\n  }\r\n  saveCustomer(customer: Customer): Observable<Customer> {\r\n    const url = 'customer';\r\n    return this.http.post<Customer>(url, customer);\r\n  }\r\n  checkEmailOrPhoneExist(\r\n    email: string,\r\n    mobileNo: string,\r\n    id: string | Guid\r\n  ): Observable<boolean> {\r\n    const url = `customer/${id}/Exist?email=${email}&mobileNo=${mobileNo}`;\r\n    return this.http.get<boolean>(url);\r\n  }\r\n\r\n  getCustomerPayments(\r\n    resourceParams: CustomerResourceParameter\r\n  ): Observable<HttpResponse<CustomerPayment[]>> {\r\n    const url = 'customer/GetCustomerPayment';\r\n    const customParams = new HttpParams()\r\n      .set('Fields', resourceParams.fields)\r\n      .set('OrderBy', resourceParams.orderBy)\r\n      .set('PageSize', resourceParams.pageSize.toString())\r\n      .set('Skip', resourceParams.skip.toString())\r\n      .set('SearchQuery', resourceParams.searchQuery)\r\n      .set('customerName', resourceParams.customerName);\r\n    return this.http.get<CustomerPayment[]>(url, {\r\n      params: customParams,\r\n      observe: 'response',\r\n    });\r\n  }\r\n\r\n  getCustomerPaymentsReport(\r\n    resourceParams: CustomerResourceParameter\r\n  ): Observable<HttpResponse<CustomerPayment[]>> {\r\n    const url = 'customer/GetCustomerPayment/report';\r\n    const customParams = new HttpParams()\r\n      .set('Fields', resourceParams.fields)\r\n      .set('OrderBy', resourceParams.orderBy)\r\n      .set('PageSize', resourceParams.pageSize.toString())\r\n      .set('Skip', resourceParams.skip.toString())\r\n      .set('SearchQuery', resourceParams.searchQuery)\r\n      .set('customerName', resourceParams.customerName);\r\n    return this.http.get<CustomerPayment[]>(url, {\r\n      params: customParams,\r\n      observe: 'response',\r\n    });\r\n  }\r\n}\r\n","import { HttpClient, HttpParams, HttpResponse } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { Product } from '@core/domain-classes/product';\r\nimport { ProductResourceParameter } from '@core/domain-classes/product-resource-parameter';\r\nimport { Observable } from 'rxjs';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class ProductService {\r\n\r\n  constructor(private http: HttpClient) { }\r\n\r\n  getProducts(\r\n    resourceParams: ProductResourceParameter\r\n  ): Observable<HttpResponse<Product[]>> {\r\n    const url = 'product';\r\n    const customParams = new HttpParams()\r\n      .set('fields', resourceParams.fields)\r\n      .set('orderBy', resourceParams.orderBy)\r\n      .set('pageSize', resourceParams.pageSize.toString())\r\n      .set('skip', resourceParams.skip.toString())\r\n      .set('searchQuery', resourceParams.searchQuery)\r\n      .set('name', resourceParams.name)\r\n      .set('id', resourceParams.id)\r\n      .set('categoryId', resourceParams.categoryId ? resourceParams.categoryId : '')\r\n      .set('unitId', resourceParams.unitId ? resourceParams.unitId : '')\r\n      .set('barcode', resourceParams.barcode ? resourceParams.barcode : '')\r\n      .set('brandId', resourceParams.brandId ? resourceParams.brandId : resourceParams.brandId);\r\n    return this.http.get<Product[]>(url, {\r\n      params: customParams,\r\n      observe: 'response',\r\n    });\r\n  }\r\n\r\n  getProudct(id: string): Observable<Product> {\r\n    const url = `product/${id}`;\r\n    return this.http.get<Product>(url);\r\n  }\r\n\r\n  addProudct(product: Product): Observable<Product> {\r\n    const url = 'product';\r\n    return this.http.post<Product>(url, product);\r\n  }\r\n\r\n  updateProudct(id: string, product: Product): Observable<Product> {\r\n    const url = `product/${id}`;\r\n    return this.http.put<Product>(url, product);\r\n  }\r\n\r\n\r\n  deleteProudct(id: string): Observable<void> {\r\n    const url = `product/${id}`;\r\n    return this.http.delete<void>(url);\r\n  }\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport { AuthGuard } from '@core/security/auth.guard';\r\nimport { ProductSalesReportComponent } from './product-sales-report.component';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path:'',\r\n    component: ProductSalesReportComponent,\r\n    data: { claimType: 'REP_PRO_SO_REPORT' },\r\n    canActivate: [AuthGuard],\r\n  }\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class ProductSalesReportRoutingModule { }\r\n","import { trigger, state, style, transition, animate } from '@angular/animations';\r\nimport { HttpResponse } from '@angular/common/http';\r\nimport { ChangeDetectorRef, Component, ViewChild } from '@angular/core';\r\nimport { UntypedFormControl, UntypedFormGroup, UntypedFormBuilder } from '@angular/forms';\r\nimport { MatDialog } from '@angular/material/dialog';\r\nimport { MatPaginator } from '@angular/material/paginator';\r\nimport { MatSort } from '@angular/material/sort';\r\nimport { Router } from '@angular/router';\r\nimport { CommonDialogService } from '@core/common-dialog/common-dialog.service';\r\nimport { Product } from '@core/domain-classes/product';\r\nimport { ProductResourceParameter } from '@core/domain-classes/product-resource-parameter';\r\nimport { ResponseHeader } from '@core/domain-classes/response-header';\r\nimport { Supplier } from '@core/domain-classes/supplier';\r\nimport { ClonerService } from '@core/services/clone.service';\r\nimport { dateCompare } from '@core/services/date-range';\r\nimport { TranslationService } from '@core/services/translation.service';\r\nimport { CustomCurrencyPipe } from '@shared/pipes/custome-currency.pipe';\r\nimport { UTCToLocalTime } from '@shared/pipes/utc-to-localtime.pipe';\r\nimport { ToastrService } from 'ngx-toastr';\r\nimport { Observable, Subject, merge } from 'rxjs';\r\nimport { debounceTime, distinctUntilChanged, switchMap, tap } from 'rxjs/operators';\r\nimport { BaseComponent } from 'src/app/base.component';\r\nimport { ProductService } from 'src/app/product/product.service';\r\nimport { SupplierService } from 'src/app/supplier/supplier.service';\r\nimport * as XLSX from 'xlsx';\r\nimport { SalesOrderItem } from '@core/domain-classes/sales-order-item';\r\nimport { ProductSalesReportDataSource } from './product-sales-report.datasource';\r\nimport { SalesOrderResourceParameter } from '@core/domain-classes/sales-order-resource-parameter';\r\nimport { SalesOrderService } from 'src/app/sales-order/sales-order.service';\r\nimport { PaymentStatusPipe } from '@shared/pipes/purchase-order-paymentStatus.pipe';\r\nimport { Customer } from '@core/domain-classes/customer';\r\nimport { CustomerService } from 'src/app/customer/customer.service';\r\n\r\n@Component({\r\n  selector: 'app-product-sales-report',\r\n  templateUrl: './product-sales-report.component.html',\r\n  styleUrls: ['./product-sales-report.component.scss'],\r\n  animations: [\r\n    trigger('detailExpand', [\r\n      state('collapsed', style({ height: '0px', minHeight: '0' })),\r\n      state('expanded', style({ height: '*' })),\r\n      transition('expanded <=> collapsed', animate('225ms cubic-bezier(0.4, 0.0, 0.2, 1)')),\r\n    ]),\r\n  ],\r\n  providers: [UTCToLocalTime, CustomCurrencyPipe, PaymentStatusPipe]\r\n})\r\nexport class ProductSalesReportComponent extends BaseComponent {\r\n  dataSource: ProductSalesReportDataSource;\r\n  salesOrderItems: SalesOrderItem[] = [];\r\n  displayedColumns: string[] = ['productName', 'salesOrderNumber', 'customerName', 'sOCreatedDate', 'unitName', 'unitPrice', 'quantity', 'totalDiscount', 'taxes', 'totalTax', 'totalAmount'];\r\n  footerToDisplayed: string[] = ['footer'];\r\n  isLoadingResults = true;\r\n  salesOrderResource: SalesOrderResourceParameter;\r\n  loading$: Observable<boolean>;\r\n  @ViewChild(MatPaginator) paginator: MatPaginator;\r\n  @ViewChild(MatSort) sort: MatSort;\r\n  _customerFilter: string;\r\n  _orderNumberFilter: string;\r\n  customerNameControl: UntypedFormControl = new UntypedFormControl();\r\n  customerList$: Observable<Customer[]>;\r\n  searchForm: UntypedFormGroup;\r\n  currentDate: Date = new Date();\r\n  products: Product[] = [];\r\n  productResource: ProductResourceParameter;\r\n\r\n  public filterObservable$: Subject<string> = new Subject<string>();\r\n\r\n  public get CustomerFilter(): string {\r\n    return this._customerFilter;\r\n  }\r\n\r\n  public set CustomerFilter(v: string) {\r\n    this._customerFilter = v;\r\n    const customerFilter = `customerName:${v}`;\r\n    this.filterObservable$.next(customerFilter);\r\n  }\r\n\r\n  public get OrderNumberFilter(): string {\r\n    return this._orderNumberFilter;\r\n  }\r\n\r\n  public set OrderNumberFilter(v: string) {\r\n    this._orderNumberFilter = v;\r\n    const orderNumberFilter = `orderNumber:${v}`;\r\n    this.filterObservable$.next(orderNumberFilter);\r\n  }\r\n\r\n  constructor(\r\n    private salesOrderService: SalesOrderService,\r\n    private customerService: CustomerService,\r\n    private cd: ChangeDetectorRef,\r\n    private commonDialogService: CommonDialogService,\r\n    private toastrService: ToastrService,\r\n    private router: Router,\r\n    public translationService: TranslationService,\r\n    private dialog: MatDialog,\r\n    private clonerService: ClonerService,\r\n    private fb: UntypedFormBuilder,\r\n    private productService: ProductService,\r\n    private utcToLocalTime: UTCToLocalTime,\r\n    private customCurrencyPipe: CustomCurrencyPipe) {\r\n    super(translationService);\r\n    this.getLangDir();\r\n    this.productResource = new ProductResourceParameter();\r\n    this.salesOrderResource = new SalesOrderResourceParameter();\r\n    this.salesOrderResource.pageSize = 50;\r\n    this.salesOrderResource.orderBy = 'soCreatedDate asc';\r\n    this.salesOrderResource.isSalesOrderRequest = false;\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.customerNameControlOnChange();\r\n    this.createSearchFormGroup();\r\n    this.getProducts();\r\n    this.getProductByNameValue();\r\n    this.dataSource = new ProductSalesReportDataSource(this.salesOrderService);\r\n    this.dataSource.loadData(this.salesOrderResource);\r\n    this.getResourceParameter();\r\n    this.sub$.sink = this.filterObservable$\r\n      .pipe(\r\n        debounceTime(1000),\r\n        distinctUntilChanged())\r\n      .subscribe((c) => {\r\n        this.salesOrderResource.skip = 0;\r\n        this.paginator.pageIndex = 0;\r\n        const strArray: Array<string> = c.split(':');\r\n        if (strArray[0] === 'customerName') {\r\n          this.salesOrderResource.customerName = strArray[1];\r\n        } else if (strArray[0] === 'orderNumber') {\r\n          this.salesOrderResource.orderNumber = strArray[1];\r\n        }\r\n        this.dataSource.loadData(this.salesOrderResource);\r\n      });\r\n  }\r\n\r\n  createSearchFormGroup() {\r\n    this.searchForm = this.fb.group({\r\n      fromDate: [''],\r\n      toDate: [''],\r\n      filterProductValue: [''],\r\n      productId: ['']\r\n    }, {\r\n      validators: dateCompare()\r\n    });\r\n  }\r\n\r\n  onSearch() {\r\n    if (this.searchForm.valid) {\r\n      this.salesOrderResource.fromDate = this.searchForm.get('fromDate').value;\r\n      this.salesOrderResource.toDate = this.searchForm.get('toDate').value;\r\n      this.salesOrderResource.productId = this.searchForm.get('productId').value;\r\n      this.dataSource.loadData(this.salesOrderResource);\r\n    }\r\n  }\r\n\r\n  onClear() {\r\n    this.searchForm.reset();\r\n    this.salesOrderResource.fromDate = this.searchForm.get('fromDate').value;\r\n    this.salesOrderResource.toDate = this.searchForm.get('toDate').value;\r\n    this.salesOrderResource.productId = this.searchForm.get('productId').value;\r\n    this.dataSource.loadData(this.salesOrderResource);\r\n  }\r\n\r\n  getProductByNameValue() {\r\n    this.sub$.sink = this.searchForm.get('filterProductValue').valueChanges\r\n      .pipe(\r\n        debounceTime(500),\r\n        distinctUntilChanged(),\r\n        switchMap(c => {\r\n          this.productResource.name = c;\r\n          return this.productService.getProducts(this.productResource);\r\n        })\r\n      ).subscribe((resp: HttpResponse<Product[]>) => {\r\n        if (resp && resp.headers) {\r\n          this.products = [...resp.body];\r\n        }\r\n      }, (err) => {\r\n\r\n      });\r\n  }\r\n\r\n  getProducts() {\r\n    this.productResource.name = '';\r\n    return this.productService.getProducts(this.productResource)\r\n      .subscribe((resp: HttpResponse<Product[]>) => {\r\n        if (resp && resp.headers) {\r\n          this.products = [...resp.body];\r\n        }\r\n      }, (err) => {\r\n\r\n      });;\r\n  }\r\n\r\n\r\n  customerNameControlOnChange() {\r\n    this.customerList$ = this.customerNameControl.valueChanges.pipe(\r\n      debounceTime(1000),\r\n      distinctUntilChanged(),\r\n      switchMap(c => {\r\n        return this.customerService.getCustomersForDropDown('CustomerName', c);\r\n      })\r\n    );\r\n  }\r\n\r\n  ngAfterViewInit() {\r\n    this.sort.sortChange.subscribe(() => this.paginator.pageIndex = 0);\r\n\r\n    this.sub$.sink = merge(this.sort.sortChange, this.paginator.page)\r\n      .pipe(\r\n        tap((c: any) => {\r\n          this.salesOrderResource.skip = this.paginator.pageIndex * this.paginator.pageSize;\r\n          this.salesOrderResource.pageSize = this.paginator.pageSize;\r\n          this.salesOrderResource.orderBy = this.sort.active + ' ' + this.sort.direction;\r\n          this.dataSource.loadData(this.salesOrderResource);\r\n        })\r\n      )\r\n      .subscribe();\r\n  }\r\n\r\n  getResourceParameter() {\r\n    this.sub$.sink = this.dataSource.responseHeaderSubject$\r\n      .subscribe((c: ResponseHeader) => {\r\n        if (c) {\r\n          this.salesOrderResource.pageSize = c.pageSize;\r\n          this.salesOrderResource.skip = c.skip;\r\n          this.salesOrderResource.totalCount = c.totalCount;\r\n        }\r\n      });\r\n  }\r\n\r\n  onDownloadReport() {\r\n    this.salesOrderService.getSalesOrderItemReport(this.salesOrderResource)\r\n      .subscribe((c: HttpResponse<SalesOrderItem[]>) => {\r\n        this.salesOrderItems = [...c.body];\r\n        let heading = [[\r\n          this.translationService.getValue('PRODUCT_NAME'),\r\n          this.translationService.getValue('ORDER_NUMBER'),\r\n          this.translationService.getValue('CUSTOMER'),\r\n          this.translationService.getValue('SALES_DATE'),\r\n          this.translationService.getValue('UNIT'),\r\n          this.translationService.getValue('UNIT_PER_PRICE'),\r\n          this.translationService.getValue('QUANTITY'),\r\n          this.translationService.getValue('TOTAL_DISCOUNT'),\r\n          this.translationService.getValue('TAX'),\r\n          this.translationService.getValue('TOTAL_TAX'),\r\n          this.translationService.getValue('TOTAL')\r\n        ]];\r\n\r\n        let salesOrderReport = [];\r\n        this.salesOrderItems.forEach((salesOrderItem: SalesOrderItem) => {\r\n          salesOrderReport.push({\r\n            'PRODUCT_NAME': salesOrderItem.productName,\r\n            'ORDER_NUMBER': salesOrderItem.salesOrderNumber,\r\n            'CUSTOMER': salesOrderItem.customerName,\r\n            'SALES_DATE': this.utcToLocalTime.transform(salesOrderItem.soCreatedDate, 'shortDate'),\r\n            'UNIT': salesOrderItem.unitName,\r\n            'UNIT_PER_PRICE': this.customCurrencyPipe.transform(salesOrderItem.unitPrice),\r\n            'QUANTITY': salesOrderItem.quantity,\r\n            'TOTAL_DISCOUNT': this.customCurrencyPipe.transform(salesOrderItem.discount),\r\n            'TAX': salesOrderItem.salesOrderItemTaxes.map(c => c.taxName + '(' + c.taxPercentage + ' %)',),\r\n            'TOTAL_TAX': this.customCurrencyPipe.transform(salesOrderItem.taxValue),\r\n            'TOTAL': this.customCurrencyPipe.transform((salesOrderItem.unitPrice * salesOrderItem.quantity) - salesOrderItem.discount + salesOrderItem.taxValue)\r\n          });\r\n        });\r\n\r\n        let workBook = XLSX.utils.book_new();\r\n        XLSX.utils.sheet_add_aoa(workBook, heading);\r\n        let workSheet = XLSX.utils.sheet_add_json(workBook, salesOrderReport, { origin: \"A2\", skipHeader: true });\r\n        XLSX.utils.book_append_sheet(workBook, workSheet,this.translationService.getValue('PRODUCT_SALES_REPORT'));\r\n        XLSX.writeFile(workBook,this.translationService.getValue('PRODUCT_SALES_REPORT') +\".xlsx\");\r\n      });\r\n  }\r\n}\r\n","<div class=\"page-header-main\">\r\n    <div class=\"row align-items-center\">\r\n      <div class=\"col-md-auto col-sm-auto\">\r\n        <div class=\"content-header\">\r\n          <h1>{{'PRODUCT_SALES_REPORT' | translate}}</h1>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n  <div class=\"row\">\r\n    <div class=\"col-sm-12 mb-3\">\r\n      <form [formGroup]=\"searchForm\">\r\n        <div class=\"row\">\r\n          <div class=\"col-md-2\">\r\n            <div class=\"form-group\">\r\n              <label for=\"fromDate\">{{'FROM_DATE' | translate}} </label>\r\n              <input class=\"form-control\" id=\"fromDate\" [max]=\"currentDate\" formControlName=\"fromDate\"\r\n                [owlDateTimeTrigger]=\"fromDate\" [owlDateTime]=\"fromDate\" placeholder=\"{{'FROM_DATE' | translate}}\">\r\n              <owl-date-time [pickerType]=\"'calendar'\" #fromDate></owl-date-time>\r\n            </div>\r\n          </div>\r\n          <div class=\"col-md-2\">\r\n            <div class=\"form-group\">\r\n              <label for=\"toDate\">{{'TO_DATE' | translate}} </label>\r\n              <input class=\"form-control\" id=\"toDate\" [max]=\"currentDate\" formControlName=\"toDate\"\r\n                [owlDateTimeTrigger]=\"toDate\" [owlDateTime]=\"toDate\" placeholder=\"{{'TO_DATE' | translate}}\">\r\n              <owl-date-time [pickerType]=\"'calendar'\" #toDate></owl-date-time>\r\n            </div>\r\n          </div>\r\n          <div class=\"col-md-3\">\r\n            <div class=\"form-group\">\r\n              <label>{{'SELECT_PRODUCT' | translate}} </label>\r\n              <mat-select  [dir]=\"langDir\" formControlName=\"productId\" placeholder=\"{{'SELECT_PRODUCT' | translate}} \"\r\n                class=\"form-control\">\r\n                <input class=\"form-control w-100\" formControlName=\"filterProductValue\" focused=\"'true'\" type=\"text\"\r\n                  autocomplete=\"off\" placeholder=\"{{'SEARCH_OTHER_PRODUCTS' | translate}}\">\r\n                <mat-divider></mat-divider>\r\n                <mat-option  [dir]=\"langDir\" *ngFor=\"let a of products\" [value]=\"a.id\">\r\n                  {{a.name}}\r\n                </mat-option>\r\n                <mat-option [value]=\"\" *ngIf=\"products.length==0\">\r\n                  No Records\r\n                </mat-option>\r\n              </mat-select>\r\n            </div>\r\n          </div>\r\n          <div class=\"col-md-5 report-tool-bar\">\r\n            <button type=\"submit\" (click)=\"onSearch()\" class=\"btn btn-primary btn-sm m-right-10\"><i\r\n                class=\"fas fa-search\"></i> {{'SEARCH' |\r\n              translate}}\r\n            </button>\r\n            <button type=\"submit\" (click)=\"onClear()\" class=\"btn btn-danger btn-sm m-right-10\"><i\r\n                class=\"fas fa-eraser\"></i>\r\n              {{'CLEAR' |\r\n              translate}}\r\n            </button>\r\n            <button type=\"submit\" (click)=\"onDownloadReport()\" class=\"btn btn-warning btn-sm m-right-10\"><i\r\n                class=\"fas fa-download\"></i> {{'DOWNLOAD_REPORT' | translate}}\r\n            </button>\r\n          </div>\r\n  \r\n        </div>\r\n        <div class=\"row\">\r\n          <div class=\"col-sm-12\">\r\n            <div *ngIf=\"searchForm.errors\">\r\n              <div class=\"text-danger\" *ngIf=\"searchForm.errors?.dateRange\">\r\n                {{'DATE_RANGE_VALIDATION_MSG' | translate}}\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </form>\r\n    </div>\r\n  </div>\r\n  <div class=\"table-responsive\">\r\n    <table mat-table [dataSource]=\"dataSource\" class=\"table table-bordered table-hover\" matSort\r\n      matSortActive=\"soCreatedDate\" matSortDirection=\"asc\">\r\n      <ng-container matColumnDef=\"productName\">\r\n        <th mat-header-cell mat-sort-header *matHeaderCellDef>{{'PRODUCT_NAME' | translate}}</th>\r\n        <td mat-cell *matCellDef=\"let element\">\r\n          {{element.productName}}\r\n        </td>\r\n      </ng-container>\r\n      <ng-container matColumnDef=\"salesOrderNumber\">\r\n        <th mat-header-cell mat-sort-header *matHeaderCellDef>{{'ORDER_NUMBER' | translate}}</th>\r\n        <td mat-cell *matCellDef=\"let element\">\r\n          <a [routerLink]=\"['/sales-order/detail',element.salesOrderId]\">{{element.salesOrderNumber}} </a>\r\n        </td>\r\n      </ng-container>\r\n      <ng-container matColumnDef=\"customerName\">\r\n        <th mat-header-cell mat-sort-header *matHeaderCellDef>{{'CUSTOMER' | translate}}</th>\r\n        <td mat-cell *matCellDef=\"let element\">\r\n          {{element.customerName}}\r\n        </td>\r\n      </ng-container>\r\n      <ng-container matColumnDef=\"sOCreatedDate\">\r\n        <th mat-header-cell mat-sort-header *matHeaderCellDef>{{'SALES_DATE' | translate}}</th>\r\n        <td mat-cell *matCellDef=\"let element\">\r\n          {{element.soCreatedDate | utcToLocalTime:'shortDate'}}\r\n        </td>\r\n      </ng-container>\r\n      <ng-container matColumnDef=\"unitName\">\r\n        <th mat-header-cell *matHeaderCellDef> {{'UNIT' | translate}} </th>\r\n        <td mat-cell *matCellDef=\"let element\">\r\n          {{element.unitName}}\r\n        </td>\r\n      </ng-container>\r\n      <ng-container matColumnDef=\"unitPrice\">\r\n        <th mat-header-cell *matHeaderCellDef> {{'UNIT_PER_PRICE' | translate}} </th>\r\n        <td mat-cell *matCellDef=\"let element\">\r\n          {{element.unitPrice | customCurrency}}\r\n        </td>\r\n      </ng-container>\r\n      <ng-container matColumnDef=\"quantity\">\r\n        <th mat-header-cell *matHeaderCellDef> {{'QUANTITY' | translate}} </th>\r\n        <td mat-cell *matCellDef=\"let element\">\r\n          {{element.status===1? -1 * element.quantity:element.quantity}}\r\n        </td>\r\n      </ng-container>\r\n      <ng-container matColumnDef=\"totalDiscount\">\r\n        <th mat-header-cell *matHeaderCellDef> {{'TOTAL_DISCOUNT' | translate}} </th>\r\n        <td mat-cell *matCellDef=\"let element\">\r\n          {{element.discount | customCurrency}}({{element.discountPercentage}}%)\r\n        </td>\r\n      </ng-container>\r\n      <ng-container matColumnDef=\"taxes\">\r\n        <th mat-header-cell *matHeaderCellDef> {{'TAX' | translate}} </th>\r\n        <td mat-cell *matCellDef=\"let element\">\r\n          <span *ngFor=\"let tax of element.salesOrderItemTaxes;let last = last\">\r\n            {{tax.taxName}}({{tax.taxPercentage}}%) <span *ngIf=\"!last\"> ,</span>\r\n          </span>\r\n        </td>\r\n      </ng-container>\r\n      <ng-container matColumnDef=\"totalTax\">\r\n        <th mat-header-cell *matHeaderCellDef> {{'TOTAL_TAX' | translate}}</th>\r\n        <td mat-cell *matCellDef=\"let element\">\r\n          {{element.taxValue | customCurrency}}\r\n        </td>\r\n      </ng-container>\r\n      <ng-container matColumnDef=\"totalAmount\">\r\n        <th mat-header-cell *matHeaderCellDef> {{'TOTAL' | translate}} </th>\r\n        <td mat-cell *matCellDef=\"let element\">\r\n          {{(element.unitPrice * element.quantity) - element.discount + element.taxValue | customCurrency}}\r\n        </td>\r\n      </ng-container>\r\n      <ng-container matColumnDef=\"footer\">\r\n        <td mat-footer-cell colspan=\"12\" *matFooterCellDef>\r\n          <mat-paginator  [dir]=\"langDir\" [length]=\"salesOrderResource.totalCount\" [pageSize]=\"salesOrderResource.pageSize\"\r\n            [pageSizeOptions]=\"[10, 20, 30]\">\r\n          </mat-paginator>\r\n        </td>\r\n      </ng-container>\r\n      <tr *matNoDataRow>\r\n        <td colspan=\"9\">\r\n          <span class=\"p-4 mt-4\">\r\n            <b> {{'NO_DATA_FOUND' | translate}}</b>\r\n          </span>\r\n        </td>\r\n      </tr>\r\n      <tr mat-header-row *matHeaderRowDef=\"displayedColumns;sticky: true\"></tr>\r\n      <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\" [class.bg-warning1]=\"row.status===1\"></tr>\r\n      <tr mat-footer-row *matFooterRowDef=\"footerToDisplayed;sticky: true\"></tr>\r\n    </table>\r\n  </div>","import { DataSource } from \"@angular/cdk/collections\";\r\nimport { HttpResponse } from \"@angular/common/http\";\r\nimport { PurchaseOrderItem } from \"@core/domain-classes/purchase-order-item\";\r\nimport { PurchaseOrderResourceParameter } from \"@core/domain-classes/purchase-order-resource-parameter\";\r\nimport { ResponseHeader } from \"@core/domain-classes/response-header\";\r\nimport { SalesOrderItem } from \"@core/domain-classes/sales-order-item\";\r\nimport { SalesOrderResourceParameter } from \"@core/domain-classes/sales-order-resource-parameter\";\r\nimport { BehaviorSubject, Subscription, Observable, of } from \"rxjs\";\r\nimport { catchError, finalize } from \"rxjs/operators\";\r\nimport { PurchaseOrderService } from \"src/app/purchase-order/purchase-order.service\";\r\nimport { SalesOrderService } from \"src/app/sales-order/sales-order.service\";\r\n\r\nexport class ProductSalesReportDataSource implements DataSource<SalesOrderItem> {\r\n    private _customerPaymentSubject$ = new BehaviorSubject<SalesOrderItem[]>([]);\r\n    private _responseHeaderSubject$ = new BehaviorSubject<ResponseHeader>(null);\r\n    private loadingSubject = new BehaviorSubject<boolean>(false);\r\n\r\n    public loading$ = this.loadingSubject.asObservable();\r\n    private _count: number = 0;\r\n    sub$: Subscription;\r\n\r\n    public get count(): number {\r\n        return this._count;\r\n    }\r\n    public responseHeaderSubject$ = this._responseHeaderSubject$.asObservable();\r\n\r\n    constructor(private salesOrderService: SalesOrderService) {\r\n\r\n    }\r\n\r\n    connect(): Observable<SalesOrderItem[]> {\r\n        this.sub$ = new Subscription();\r\n        return this._customerPaymentSubject$.asObservable();\r\n    }\r\n\r\n    disconnect(): void {\r\n        this._customerPaymentSubject$.complete();\r\n        this.loadingSubject.complete();\r\n        this.sub$.unsubscribe();\r\n    }\r\n\r\n    loadData(customerResource: SalesOrderResourceParameter) {\r\n        this.loadingSubject.next(true);\r\n        this.sub$ = this.salesOrderService.getSalesOrderItemReport(customerResource)\r\n            .pipe(\r\n                catchError(() => of([])),\r\n                finalize(() => this.loadingSubject.next(false)))\r\n            .subscribe((resp: HttpResponse<SalesOrderItem[]>) => {\r\n                if (resp && resp.headers) {\r\n                    const paginationParam = JSON.parse(\r\n                        resp.headers.get('X-Pagination')\r\n                    ) as ResponseHeader;\r\n                    this._responseHeaderSubject$.next(paginationParam);\r\n                    const customerPayments = [...resp.body];\r\n                    this._count = customerPayments.length;\r\n                    this._customerPaymentSubject$.next(customerPayments);\r\n                }\r\n            });\r\n    }\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { ProductSalesReportComponent } from './product-sales-report.component';\r\nimport { ProductSalesReportRoutingModule } from './product-sales-report-routing.module';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport { MatButtonModule } from '@angular/material/button';\r\nimport { MatCardModule } from '@angular/material/card';\r\nimport { MatCheckboxModule } from '@angular/material/checkbox';\r\nimport { MatNativeDateModule } from '@angular/material/core';\r\nimport { MatDatepickerModule } from '@angular/material/datepicker';\r\nimport { MatDividerModule } from '@angular/material/divider';\r\nimport { MatFormFieldModule } from '@angular/material/form-field';\r\nimport { MatIconModule } from '@angular/material/icon';\r\nimport { MatInputModule } from '@angular/material/input';\r\nimport { MatMenuModule } from '@angular/material/menu';\r\nimport { MatPaginatorModule } from '@angular/material/paginator';\r\nimport { MatProgressSpinnerModule } from '@angular/material/progress-spinner';\r\nimport { MatSelectModule } from '@angular/material/select';\r\nimport { MatSortModule } from '@angular/material/sort';\r\nimport { MatTableModule } from '@angular/material/table';\r\nimport { SharedModule } from '@shared/shared.module';\r\nimport { OwlDateTimeModule, OwlNativeDateTimeModule } from 'ng-pick-datetime-ex';\r\n\r\n\r\n\r\n@NgModule({\r\n  declarations: [\r\n    ProductSalesReportComponent\r\n  ],\r\n  imports: [\r\n    CommonModule,\r\n    ProductSalesReportRoutingModule,\r\n    FormsModule,\r\n    SharedModule,\r\n    MatDatepickerModule,\r\n    MatNativeDateModule,\r\n    MatInputModule,\r\n    MatFormFieldModule,\r\n    MatCardModule,\r\n    MatTableModule,\r\n    MatPaginatorModule,\r\n    MatSortModule,\r\n    MatMenuModule,\r\n    MatIconModule,\r\n    MatButtonModule,\r\n    MatSelectModule,\r\n    MatProgressSpinnerModule,\r\n    OwlDateTimeModule,\r\n    OwlNativeDateTimeModule,\r\n    MatCheckboxModule,\r\n    MatDividerModule,\r\n    ReactiveFormsModule\r\n  ]\r\n})\r\nexport class ProductSalesReportModule { }\r\n","import { HttpClient, HttpEvent, HttpParams, HttpResponse } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { SalesOrder } from '@core/domain-classes/sales-order';\r\nimport { SalesOrderItem } from '@core/domain-classes/sales-order-item';\r\nimport { SalesOrderResourceParameter } from '@core/domain-classes/sales-order-resource-parameter';\r\nimport { CommonError } from '@core/error-handler/common-error';\r\nimport { CommonHttpErrorService } from '@core/error-handler/common-http-error.service';\r\nimport { Observable } from 'rxjs';\r\nimport { catchError } from 'rxjs/operators';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class SalesOrderService {\r\n\r\n\r\n  constructor(private http: HttpClient,\r\n    private commonHttpErrorService: CommonHttpErrorService) { }\r\n\r\n  getAllSalesOrder(\r\n    resourceParams: SalesOrderResourceParameter\r\n  ): Observable<HttpResponse<SalesOrder[]>> {\r\n    const url = 'salesOrder';\r\n    const customParams = new HttpParams()\r\n      .set('Fields', resourceParams.fields)\r\n      .set('OrderBy', resourceParams.orderBy)\r\n      .set('PageSize', resourceParams.pageSize.toString())\r\n      .set('Skip', resourceParams.skip.toString())\r\n      .set('SearchQuery', resourceParams.searchQuery)\r\n      .set('name', resourceParams.name)\r\n      .set('orderNumber', resourceParams.orderNumber)\r\n      .set('customerName', resourceParams.customerName)\r\n      .set('fromDate', resourceParams.fromDate ? resourceParams.fromDate.toDateString() : '')\r\n      .set('toDate', resourceParams.toDate ? resourceParams.toDate.toDateString() : '')\r\n      .set('productId', resourceParams.productId ? resourceParams.productId : '')\r\n      .set('customerId', resourceParams.customerId ? resourceParams.customerId : '')\r\n      .set('status', resourceParams.status);\r\n    return this.http.get<SalesOrder[]>(url, {\r\n      params: customParams,\r\n      observe: 'response'\r\n    });\r\n  }\r\n\r\n  getAllSalesOrderExcel(\r\n    resourceParams: SalesOrderResourceParameter\r\n  ): Observable<HttpResponse<SalesOrder[]>> {\r\n    const url = 'salesOrder';\r\n    const customParams = new HttpParams()\r\n      .set('Fields', resourceParams.fields)\r\n      .set('OrderBy', resourceParams.orderBy)\r\n      .set('PageSize', 0)\r\n      .set('Skip', 0)\r\n      .set('SearchQuery', resourceParams.searchQuery)\r\n      .set('name', resourceParams.name)\r\n      .set('orderNumber', resourceParams.orderNumber)\r\n      .set('customerName', resourceParams.customerName)\r\n      .set('fromDate', resourceParams.fromDate ? resourceParams.fromDate.toDateString() : '')\r\n      .set('toDate', resourceParams.toDate ? resourceParams.toDate.toDateString() : '')\r\n      .set('productId', resourceParams.productId ? resourceParams.productId : '')\r\n      .set('customerId', resourceParams.customerId ? resourceParams.customerId : '');\r\n    return this.http.get<SalesOrder[]>(url, {\r\n      params: customParams,\r\n      observe: 'response'\r\n    });\r\n  }\r\n\r\n  addSalesOrder(salesOrder: SalesOrder): Observable<SalesOrder | CommonError> {\r\n    const url = `salesOrder`;\r\n    return this.http.post<SalesOrder>(url, salesOrder)\r\n      .pipe(catchError(this.commonHttpErrorService.handleError));\r\n  }\r\n\r\n  updateSalesOrder(salesOrder: SalesOrder): Observable<SalesOrder | CommonError> {\r\n    const url = `salesOrder/${salesOrder.id}`;\r\n    return this.http.put<SalesOrder>(url, salesOrder)\r\n      .pipe(catchError(this.commonHttpErrorService.handleError));\r\n  }\r\n\r\n\r\n  updateSalesOrderReturn(salesOrder: SalesOrder): Observable<SalesOrder | CommonError> {\r\n    const url = `salesOrder/${salesOrder.id}/return`;\r\n    return this.http.put<SalesOrder>(url, salesOrder)\r\n      .pipe(catchError(this.commonHttpErrorService.handleError));\r\n  }\r\n\r\n  deleteSalesOrder(id: string): Observable<void | CommonError> {\r\n    const url = `salesOrder/${id}`;\r\n    return this.http.delete<void>(url)\r\n      .pipe(catchError(this.commonHttpErrorService.handleError));\r\n  }\r\n\r\n  getNewSalesOrderNumber(): Observable<SalesOrder> {\r\n    const url = `salesOrder/newOrderNumber`;\r\n    return this.http.get<SalesOrder>(url);\r\n  }\r\n\r\n  getSalesOrderById(salesOrderId: string): Observable<SalesOrder> {\r\n    const url = `salesOrder/${salesOrderId}`;\r\n    return this.http.get<SalesOrder>(url);\r\n  }\r\n\r\n  getSalesOrderItems(salesOrderId: string, isReturn: boolean = false): Observable<SalesOrderItem[]> {\r\n    const url = `salesOrder/${salesOrderId}/items?isReturn=${isReturn}`;\r\n    return this.http.get<SalesOrderItem[]>(url);\r\n  }\r\n\r\n  downloadAttachment(id: string): Observable<HttpEvent<Blob>> {\r\n    const url = `salesOrderAttachment/${id}/download`;\r\n    return this.http.get(url, {\r\n      reportProgress: true,\r\n      observe: 'events',\r\n      responseType: 'blob',\r\n    });\r\n  }\r\n\r\n  getSalesOrderItemReport(\r\n    resourceParams: SalesOrderResourceParameter\r\n  ): Observable<HttpResponse<SalesOrderItem[]>> {\r\n    const url = 'salesOrder/items/reports';\r\n    const customParams = new HttpParams()\r\n      .set('Fields', resourceParams.fields)\r\n      .set('OrderBy', resourceParams.orderBy)\r\n      .set('PageSize', resourceParams.pageSize.toString())\r\n      .set('Skip', resourceParams.skip.toString())\r\n      .set('SearchQuery', resourceParams.searchQuery)\r\n      .set('name', resourceParams.name)\r\n      .set('orderNumber', resourceParams.orderNumber)\r\n      .set('customerName', resourceParams.customerName)\r\n      .set('fromDate', resourceParams.fromDate ? resourceParams.fromDate.toDateString() : '')\r\n      .set('toDate', resourceParams.toDate ? resourceParams.toDate.toDateString() : '')\r\n      .set('productId', resourceParams.productId ? resourceParams.productId : '')\r\n      .set('productName', resourceParams.productName ? resourceParams.productName : '')\r\n      .set('customerId', resourceParams.customerId ? resourceParams.customerId : '')\r\n      .set('isSalesOrderRequest', resourceParams.isSalesOrderRequest)\r\n    return this.http.get<SalesOrderItem[]>(url, {\r\n      params: customParams,\r\n      observe: 'response'\r\n    });\r\n  }\r\n}\r\n"],"names":[],"sourceRoot":"webpack:///","x_google_ignoreList":[]}