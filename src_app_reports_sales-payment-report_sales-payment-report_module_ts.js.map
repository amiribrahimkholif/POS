{"version":3,"file":"src_app_reports_sales-payment-report_sales-payment-report_module_ts.js","mappings":"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","sources":["./src/app/core/domain-classes/sales-order-resource-parameter.ts","./src/app/core/domain-classes/sales-order-status.ts","./src/app/reports/sales-payment-report/sales-payment-report-routing.module.ts","./src/app/reports/sales-payment-report/sales-payment-report.component.ts","./src/app/reports/sales-payment-report/sales-payment-report.component.html","./src/app/reports/sales-payment-report/sales-payment-report.datasource.ts","./src/app/reports/sales-payment-report/sales-payment-report.module.ts","./src/app/reports/sales-payment-report/sales-payment-report.service.ts"],"sourcesContent":["import { ResourceParameter } from './resource-parameter';\r\nimport { SalesOrderStatusEnum } from './sales-order-status';\r\n\r\nexport class SalesOrderResourceParameter extends ResourceParameter {\r\n    orderNumber?: string = '';\r\n    customerName?: string = '';\r\n    sOCreatedDate?: Date;\r\n    customerId?: string = '';\r\n    fromDate?: Date;\r\n    toDate?: Date;\r\n    productId: string;\r\n    isSalesOrderRequest: boolean = false;\r\n    status?: SalesOrderStatusEnum = SalesOrderStatusEnum.All;\r\n    productName?: string;\r\n}\r\n","export enum SalesOrderStatusEnum {\r\n  Not_Return = 0,\r\n  Return = 1,\r\n  All = 2\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { RouterModule, Routes } from '@angular/router';\r\nimport { AuthGuard } from '@core/security/auth.guard';\r\nimport { SalesPaymentReportComponent } from './sales-payment-report.component';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path:'',\r\n    component: SalesPaymentReportComponent,\r\n    data: { claimType: 'REP_SO_PAYMENT_REP' },\r\n    canActivate: [AuthGuard]\r\n  }\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class SalesPaymentReportRoutingModule { }\r\n","import { HttpResponse } from '@angular/common/http';\r\nimport { Component, OnInit, ViewChild } from '@angular/core';\r\nimport { UntypedFormBuilder, UntypedFormGroup } from '@angular/forms';\r\nimport { MatPaginator } from '@angular/material/paginator';\r\nimport { MatSort } from '@angular/material/sort';\r\nimport { CommonDialogService } from '@core/common-dialog/common-dialog.service';\r\nimport { ResponseHeader } from '@core/domain-classes/response-header';\r\nimport { SalesOrderPayment } from '@core/domain-classes/sales-order-payment';\r\nimport { SalesOrderResourceParameter } from '@core/domain-classes/sales-order-resource-parameter';\r\nimport { dateCompare } from '@core/services/date-range';\r\nimport { TranslationService } from '@core/services/translation.service';\r\nimport { CustomCurrencyPipe } from '@shared/pipes/custome-currency.pipe';\r\nimport { PaymentMethodPipe } from '@shared/pipes/paymentMethod.pipe';\r\nimport { PaymentStatusPipe } from '@shared/pipes/purchase-order-paymentStatus.pipe';\r\nimport { UTCToLocalTime } from '@shared/pipes/utc-to-localtime.pipe';\r\nimport { ToastrService } from 'ngx-toastr';\r\nimport { merge, Observable } from 'rxjs';\r\nimport { tap } from 'rxjs/operators';\r\nimport { BaseComponent } from 'src/app/base.component';\r\nimport { SalesPaymentReportDataSource } from './sales-payment-report.datasource';\r\nimport { SalesPaymentReportService } from './sales-payment-report.service';\r\nimport * as XLSX from 'xlsx';\r\n\r\n@Component({\r\n  selector: 'app-sales-payment-report',\r\n  templateUrl: './sales-payment-report.component.html',\r\n  styleUrls: ['./sales-payment-report.component.scss'],\r\n  providers:[UTCToLocalTime, CustomCurrencyPipe, PaymentStatusPipe,PaymentMethodPipe]\r\n})\r\nexport class SalesPaymentReportComponent extends BaseComponent implements OnInit {\r\n\r\n  dataSource : SalesPaymentReportDataSource;\r\n  isData: boolean = false;\r\n  isDeleted = false;\r\n  salesOrderResource:SalesOrderResourceParameter;\r\n  searchForm: UntypedFormGroup;\r\n\r\n  loading$: Observable<boolean>;\r\n  @ViewChild(MatPaginator) paginator: MatPaginator;\r\n  @ViewChild(MatSort) sort: MatSort;\r\n  currentDate: Date= new Date();\r\n\r\n  constructor(\r\n    private salesPaymentReportService: SalesPaymentReportService,\r\n    private toastrService: ToastrService,\r\n    private commonDialogService: CommonDialogService,\r\n    public translationService: TranslationService,\r\n    private fb: UntypedFormBuilder,\r\n    private utcToLocalTime: UTCToLocalTime,\r\n    private customCurrencyPipe: CustomCurrencyPipe,\r\n    private paymentMethodPipe: PaymentMethodPipe) {\r\n    super(translationService);\r\n    this.getLangDir();\r\n    this.salesOrderResource = new SalesOrderResourceParameter();\r\n  }\r\n\r\n  displayedColumns: string[] = [ 'paymentDate','orderNumber', 'referenceNumber', 'amount', 'paymentMethod'];\r\n  footerToDisplayed = ['footer']\r\n\r\n\r\n  ngOnInit(): void {\r\n    this.createSearchFormGroup();\r\n    this.dataSource = new SalesPaymentReportDataSource(this.salesPaymentReportService);\r\n    this.dataSource.loadData(this.salesOrderResource);\r\n    this.getResourceParameter();\r\n  }\r\n\r\n  createSearchFormGroup(){\r\n    this.searchForm= this.fb.group({\r\n      fromDate:[''],\r\n      toDate:[''],\r\n      filterProductValue:[''],\r\n    },{\r\n      validators: dateCompare()\r\n    });\r\n  }\r\n\r\n  onSearch(){\r\n   if( this.searchForm.valid){\r\n    this.salesOrderResource.fromDate= this.searchForm.get('fromDate').value;\r\n    this.salesOrderResource.toDate= this.searchForm.get('toDate').value;\r\n    this.dataSource.loadData(this.salesOrderResource);\r\n   }\r\n  }\r\n\r\n  onClear(){\r\n    this.searchForm.reset();\r\n    this.salesOrderResource.fromDate= this.searchForm.get('fromDate').value;\r\n    this.salesOrderResource.toDate= this.searchForm.get('toDate').value;\r\n    this.dataSource.loadData(this.salesOrderResource);\r\n  }\r\n\r\n  ngAfterViewInit() {\r\n    this.sort.sortChange.subscribe(() => this.paginator.pageIndex = 0);\r\n\r\n    this.sub$.sink = merge(this.sort.sortChange, this.paginator.page)\r\n      .pipe(\r\n        tap((c: any) => {\r\n          this.salesOrderResource.skip = this.paginator.pageIndex * this.paginator.pageSize;\r\n          this.salesOrderResource.pageSize = this.paginator.pageSize;\r\n          this.salesOrderResource.orderBy = this.sort.active + ' ' + this.sort.direction;\r\n          this.dataSource.loadData(this.salesOrderResource);\r\n        })\r\n      )\r\n      .subscribe();\r\n  }\r\n\r\n  getResourceParameter() {\r\n    this.sub$.sink = this.dataSource.responseHeaderSubject$\r\n      .subscribe((c: ResponseHeader) => {\r\n        if (c) {\r\n          this.salesOrderResource.pageSize = c.pageSize;\r\n          this.salesOrderResource.skip = c.skip;\r\n          this.salesOrderResource.totalCount = c.totalCount;\r\n        }\r\n      });\r\n  }\r\n\r\n  onDownloadReport(){\r\n    this.salesPaymentReportService.getAllSalesOrderPaymentReportExcel(this.salesOrderResource)\r\n    .subscribe((c: HttpResponse<SalesOrderPayment[]>)=>{\r\n     const salesOrderPayments= [...c.body];\r\n      let heading=[[\r\n        this.translationService.getValue('PAYMENT_DATE'),\r\n      this.translationService.getValue('SO_NUMBER'),\r\n      this.translationService.getValue('REFERENCE_NUMBER'),\r\n      this.translationService.getValue('AMOUNT'),\r\n      this.translationService.getValue('PAID_BY')\r\n    ]];\r\n\r\n      let saleOrderPaymentReport= [];\r\n      salesOrderPayments.forEach((salesOrderPayment: SalesOrderPayment)=>{\r\n        saleOrderPaymentReport.push({\r\n            'PAYMENT_DATE':   this.utcToLocalTime.transform(salesOrderPayment.paymentDate,'shortDate'),\r\n            'SO_NUMBER': salesOrderPayment.orderNumber,\r\n            'REFERENCE_NUMBER': salesOrderPayment.referenceNumber,\r\n            'AMOUNT':this.customCurrencyPipe.transform(salesOrderPayment.amount),\r\n            'PAID_BY':  this.paymentMethodPipe.transform(salesOrderPayment.paymentMethod)\r\n          });\r\n      });\r\n\r\n      let workBook= XLSX.utils.book_new();\r\n      XLSX.utils.sheet_add_aoa(workBook,heading);\r\n      let workSheet= XLSX.utils.sheet_add_json(workBook, saleOrderPaymentReport, {origin: \"A2\", skipHeader:true });\r\n      XLSX.utils.book_append_sheet(workBook,workSheet,this.translationService.getValue('SALES_PAYMENT_ORDER_REPORT'));\r\n      XLSX.writeFile(workBook,this.translationService.getValue('SALES_PAYMENT_ORDER_REPORT') + \".xlsx\");\r\n    });\r\n  }\r\n\r\n\r\n}\r\n","<div class=\"page-header-main\">\r\n    <div class=\"row align-items-center justify-content-between\">\r\n        <div class=\"col-md-auto col-sm-auto\">\r\n            <div class=\"content-header\">\r\n                <h1>{{'SALES_PAYMENT_REPORT' | translate}}</h1>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>\r\n<div class=\"loading-shade\" *ngIf=\"dataSource.loading$ | async\">\r\n    <mat-spinner></mat-spinner>\r\n</div>\r\n<div class=\"row\">\r\n    <div class=\"col-sm-12 mb-3\">\r\n        <form [formGroup]=\"searchForm\">\r\n            <div class=\"row\">\r\n                <div class=\"col-md-3\">\r\n                    <div class=\"form-group\">\r\n                        <label for=\"fromDate\">{{'FROM_DATE' | translate}} </label>\r\n                        <input class=\"form-control\" id=\"fromDate\" [max]=\"currentDate\" formControlName=\"fromDate\"\r\n                            [owlDateTimeTrigger]=\"fromDate\" [owlDateTime]=\"fromDate\"\r\n                            placeholder=\"{{'FROM_DATE' | translate}}\">\r\n                        <owl-date-time [pickerType]=\"'calendar'\" #fromDate></owl-date-time>\r\n                    </div>\r\n                </div>\r\n                <div class=\"col-md-3\">\r\n                    <div class=\"form-group\">\r\n                        <label for=\"toDate\">{{'TO_DATE' | translate}} </label>\r\n                        <input class=\"form-control\" id=\"toDate\" [max]=\"currentDate\" formControlName=\"toDate\"\r\n                            [owlDateTimeTrigger]=\"toDate\" [owlDateTime]=\"toDate\"\r\n                            placeholder=\"{{'TO_DATE' | translate}}\">\r\n                        <owl-date-time [pickerType]=\"'calendar'\" #toDate></owl-date-time>\r\n                    </div>\r\n                </div>\r\n                <div class=\"col-md-4 report-tool-bar\">\r\n                    <button type=\"submit\" (click)=\"onSearch()\" class=\"btn btn-primary btn-sm m-right-10\"><i\r\n                            class=\"fas fa-search\"></i> {{'SEARCH' |\r\n                        translate}}\r\n                    </button>\r\n                    <button type=\"submit\" (click)=\"onClear()\" class=\"btn btn-danger btn-sm m-right-10\"><i\r\n                            class=\"fas fa-eraser\"></i> {{'CLEAR' |\r\n                        translate}}\r\n                    </button>\r\n                    <button type=\"submit\" (click)=\"onDownloadReport()\" class=\"btn btn-warning btn-sm m-right-10\"><i\r\n                      class=\"fas fa-download\"></i> {{'DOWNLOAD_REPORT' | translate}}\r\n                    </button>\r\n                </div>\r\n\r\n            </div>\r\n            <div class=\"row\">\r\n                <div class=\"col-sm-12\">\r\n                    <div *ngIf=\"searchForm.errors\">\r\n                        <div class=\"text-danger\" *ngIf=\"searchForm.errors?.dateRange\">\r\n                            {{'DATE_RANGE_VALIDATION_MSG' | translate}}\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </form>\r\n    </div>\r\n</div>\r\n<div class=\"row\">\r\n    <div class=\"col-sm-12\">\r\n        <div class=\"table-responsive\">\r\n            <table  [dir]=\"langDir\" mat-table [dataSource]=\"dataSource\" matSort matSortActive=\"paymentDate\"\r\n                class=\"table table-bordered table-hover\">\r\n                <ng-container matColumnDef=\"paymentDate\">\r\n                    <th mat-header-cell *matHeaderCellDef> {{'PAYMENT_DATE' | translate}} </th>\r\n                    <td mat-cell *matCellDef=\"let element\"> {{element.paymentDate | utcToLocalTime:'shortDate'}} </td>\r\n                </ng-container>\r\n                <ng-container matColumnDef=\"orderNumber\">\r\n                    <th mat-header-cell *matHeaderCellDef>{{'SO_NUMBER' | translate}} </th>\r\n                    <td mat-cell *matCellDef=\"let element\"> <a\r\n                            [routerLink]=\"['/sales-order/detail', element.salesOrderId]\">{{element.orderNumber}} </a>\r\n                    </td>\r\n                </ng-container>\r\n                <ng-container matColumnDef=\"referenceNumber\">\r\n                    <th mat-header-cell *matHeaderCellDef> {{'REFERENCE_NUMBER' | translate}} </th>\r\n                    <td mat-cell *matCellDef=\"let element\"> {{element.referenceNumber}} </td>\r\n                </ng-container>\r\n\r\n                <ng-container matColumnDef=\"amount\">\r\n                    <th mat-header-cell *matHeaderCellDef> {{'AMOUNT' | translate}} </th>\r\n                    <td mat-cell *matCellDef=\"let element\"> {{element.amount | customCurrency}} </td>\r\n                </ng-container>\r\n                <ng-container matColumnDef=\"paymentMethod\">\r\n                    <th mat-header-cell *matHeaderCellDef> {{'PAID_BY' | translate}}</th>\r\n                    <td mat-cell *matCellDef=\"let element\"> {{element.paymentMethod | paymentmethod }} </td>\r\n                </ng-container>\r\n                <ng-container matColumnDef=\"footer\">\r\n                    <td mat-footer-cell colspan=\"12\" *matFooterCellDef>\r\n                        <mat-paginator [length]=\"salesOrderResource.totalCount\" [pageSize]=\"salesOrderResource.pageSize\"\r\n                            [pageSizeOptions]=\"[10, 20, 30]\">\r\n                        </mat-paginator>\r\n                    </td>\r\n                </ng-container>\r\n                <tr *matNoDataRow>\r\n                  <td colspan=\"9\">\r\n                      <span class=\"p-4 mt-4\">\r\n                          <b> {{'NO_DATA_FOUND' | translate}}</b>\r\n                      </span>\r\n                  </td>\r\n              </tr>\r\n                <tr mat-header-row *matHeaderRowDef=\"displayedColumns;sticky: true\"></tr>\r\n                <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\"></tr>\r\n\r\n                <tr mat-footer-row *matFooterRowDef=\"footerToDisplayed;sticky: true\"></tr>\r\n            </table>\r\n        </div>\r\n    </div>\r\n</div>\r\n","import { DataSource } from '@angular/cdk/table';\r\nimport { HttpResponse } from '@angular/common/http';\r\nimport { ResponseHeader } from '@core/domain-classes/response-header';\r\nimport { BehaviorSubject, Observable, of, Subscription } from 'rxjs';\r\nimport { catchError, finalize } from 'rxjs/operators';\r\nimport { PurchaseOrderResourceParameter } from '@core/domain-classes/purchase-order-resource-parameter';\r\nimport { PurchaseOrderPayment } from '@core/domain-classes/purchase-order-payment';\r\nimport { SalesOrderPayment } from '@core/domain-classes/sales-order-payment';\r\nimport { SalesPaymentReportService } from './sales-payment-report.service';\r\nimport { SalesOrderResourceParameter } from '@core/domain-classes/sales-order-resource-parameter';\r\n\r\nexport class SalesPaymentReportDataSource implements DataSource<SalesOrderPayment> {\r\n  private _salesOrderSubject$ = new BehaviorSubject<SalesOrderPayment[]>([]);\r\n  private _responseHeaderSubject$ = new BehaviorSubject<ResponseHeader>(null);\r\n  private loadingSubject = new BehaviorSubject<boolean>(false);\r\n\r\n  public loading$ = this.loadingSubject.asObservable();\r\n  private _count: number = 0;\r\n  sub$: Subscription;\r\n\r\n  public get count(): number {\r\n    return this._count;\r\n  }\r\n  public responseHeaderSubject$ = this._responseHeaderSubject$.asObservable();\r\n\r\n  constructor(private salesPaymentReportService: SalesPaymentReportService) {\r\n\r\n  }\r\n\r\n  connect(): Observable<SalesOrderPayment[]> {\r\n    this.sub$ = new Subscription();\r\n    return this._salesOrderSubject$.asObservable();\r\n  }\r\n\r\n  disconnect(): void {\r\n    this._salesOrderSubject$.complete();\r\n    this.loadingSubject.complete();\r\n    this.sub$.unsubscribe();\r\n  }\r\n\r\n  loadData(salesOrderResource: SalesOrderResourceParameter) {\r\n    this.loadingSubject.next(true);\r\n    this.sub$ = this.salesPaymentReportService.getAllSalesOrderPaymentReport(salesOrderResource)\r\n      .pipe(\r\n        catchError(() => of([])),\r\n        finalize(() => this.loadingSubject.next(false)))\r\n      .subscribe((resp: HttpResponse<SalesOrderPayment[]>) => {\r\n        if (resp && resp.headers) {\r\n          const paginationParam = JSON.parse(\r\n            resp.headers.get('X-Pagination')\r\n          ) as ResponseHeader;\r\n          this._responseHeaderSubject$.next(paginationParam);\r\n          const salesOrders = [...resp.body];\r\n          this._count = salesOrders.length;\r\n          this._salesOrderSubject$.next(salesOrders);\r\n        }\r\n      });\r\n  }\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\n\r\nimport { SalesPaymentReportRoutingModule } from './sales-payment-report-routing.module';\r\nimport { SalesPaymentReportComponent } from './sales-payment-report.component';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport { SharedModule } from '@shared/shared.module';\r\nimport { MatDatepickerModule } from '@angular/material/datepicker';\r\nimport { MatNativeDateModule } from '@angular/material/core';\r\nimport { MatInputModule } from '@angular/material/input';\r\nimport { MatFormFieldModule } from '@angular/material/form-field';\r\nimport { MatCardModule } from '@angular/material/card';\r\nimport { MatTableModule } from '@angular/material/table';\r\nimport { MatPaginatorModule } from '@angular/material/paginator';\r\nimport { MatSortModule } from '@angular/material/sort';\r\nimport { MatMenuModule } from '@angular/material/menu';\r\nimport { MatIconModule } from '@angular/material/icon';\r\nimport { MatButtonModule } from '@angular/material/button';\r\nimport { MatSelectModule } from '@angular/material/select';\r\nimport { MatProgressSpinnerModule } from '@angular/material/progress-spinner';\r\nimport { OwlDateTimeModule, OwlNativeDateTimeModule } from 'ng-pick-datetime-ex';\r\nimport { MatCheckboxModule } from '@angular/material/checkbox';\r\nimport { MatDividerModule } from '@angular/material/divider';\r\nimport { MatDialogModule } from '@angular/material/dialog';\r\nimport { MatAutocompleteModule } from '@angular/material/autocomplete';\r\n\r\n\r\n@NgModule({\r\n  declarations: [\r\n    SalesPaymentReportComponent\r\n  ],\r\n  imports: [\r\n    CommonModule,\r\n    SalesPaymentReportRoutingModule,\r\n    FormsModule,\r\n    ReactiveFormsModule,\r\n    SharedModule,\r\n    MatDatepickerModule,\r\n    MatNativeDateModule,\r\n    MatInputModule,\r\n    MatFormFieldModule,\r\n    MatCardModule,\r\n    MatTableModule,\r\n    MatPaginatorModule,\r\n    MatSortModule,\r\n    MatMenuModule,\r\n    MatIconModule,\r\n    MatButtonModule,\r\n    MatSelectModule,\r\n    MatProgressSpinnerModule,\r\n    OwlDateTimeModule,\r\n    OwlNativeDateTimeModule,\r\n    MatCheckboxModule,\r\n    MatDividerModule,\r\n    MatDialogModule,\r\n    MatAutocompleteModule\r\n  ]\r\n})\r\nexport class SalesPaymentReportModule { }\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient, HttpParams, HttpResponse } from '@angular/common/http';\r\nimport { PurchaseOrderResourceParameter } from '@core/domain-classes/purchase-order-resource-parameter';\r\nimport { Observable } from 'rxjs';\r\nimport { PurchaseOrderPayment } from '@core/domain-classes/purchase-order-payment';\r\nimport { SalesOrderResourceParameter } from '@core/domain-classes/sales-order-resource-parameter';\r\nimport { SalesOrderPayment } from '@core/domain-classes/sales-order-payment';\r\n\r\n@Injectable({providedIn: 'root'})\r\nexport class SalesPaymentReportService {\r\n  constructor(private httpClient: HttpClient) {\r\n\r\n   }\r\n\r\n   getAllSalesOrderPaymentReport(\r\n    resourceParams: SalesOrderResourceParameter\r\n  ): Observable<HttpResponse<SalesOrderPayment[]>> {\r\n    const url = 'SalesOrderPayment/report';\r\n    const customParams = new HttpParams()\r\n      .set('Fields', resourceParams.fields)\r\n      .set('OrderBy', resourceParams.orderBy)\r\n      .set('PageSize', resourceParams.pageSize.toString())\r\n      .set('Skip', resourceParams.skip.toString())\r\n      .set('SearchQuery', resourceParams.searchQuery)\r\n      .set('name', resourceParams.name)\r\n      .set('orderNumber', resourceParams.orderNumber)\r\n      .set('customerName', resourceParams.customerName)\r\n      .set('fromDate', resourceParams.fromDate?resourceParams.fromDate.toDateString():'')\r\n      .set('toDate',  resourceParams.toDate?resourceParams.toDate.toDateString():'')\r\n      .set('productId', resourceParams.productId?resourceParams.productId:'')\r\n      .set('customerId', resourceParams.customerId ? resourceParams.customerId : '')\r\n      .set('isSalesOrderRequest', resourceParams.isSalesOrderRequest)\r\n    return this.httpClient.get<SalesOrderPayment[]>(url, {\r\n      params: customParams,\r\n      observe: 'response'\r\n    });\r\n  }\r\n\r\n  getAllSalesOrderPaymentReportExcel(\r\n    resourceParams: SalesOrderResourceParameter\r\n  ): Observable<HttpResponse<SalesOrderPayment[]>> {\r\n    const url = 'SalesOrderPayment/report';\r\n    const customParams = new HttpParams()\r\n      .set('Fields', resourceParams.fields)\r\n      .set('OrderBy', resourceParams.orderBy)\r\n      .set('PageSize', \"0\")\r\n      .set('Skip', \"0\")\r\n      .set('SearchQuery', resourceParams.searchQuery)\r\n      .set('name', resourceParams.name)\r\n      .set('orderNumber', resourceParams.orderNumber)\r\n      .set('customerName', resourceParams.customerName)\r\n      .set('fromDate', resourceParams.fromDate?resourceParams.fromDate.toDateString():'')\r\n      .set('toDate',  resourceParams.toDate?resourceParams.toDate.toDateString():'')\r\n      .set('productId', resourceParams.productId?resourceParams.productId:'')\r\n      .set('customerId', resourceParams.customerId ? resourceParams.customerId : '')\r\n      .set('isSalesOrderRequest', resourceParams.isSalesOrderRequest)\r\n    return this.httpClient.get<SalesOrderPayment[]>(url, {\r\n      params: customParams,\r\n      observe: 'response'\r\n    });\r\n  }\r\n\r\n}\r\n"],"names":[],"sourceRoot":"webpack:///","x_google_ignoreList":[]}