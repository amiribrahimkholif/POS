{"version":3,"file":"src_app_login_login_module_ts.js","mappings":"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","sources":["./src/app/login/login-routing.module.ts","./src/app/login/login.component.ts","./src/app/login/login.component.html","./src/app/login/login.module.ts"],"sourcesContent":["import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\n\r\nimport { LoginComponent } from './login.component';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path:'', component: LoginComponent\r\n  }\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class LoginRoutingModule { }\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { UntypedFormBuilder, UntypedFormGroup, Validators } from '@angular/forms';\r\nimport { BaseComponent } from '../base.component';\r\nimport { Router } from '@angular/router';\r\nimport { UserAuth } from '@core/domain-classes/user-auth';\r\nimport { SecurityService } from '@core/security/security.service';\r\nimport { ToastrService } from 'ngx-toastr';\r\nimport { CommonError } from '@core/error-handler/common-error';\r\nimport { User } from '@core/domain-classes/user';\r\nimport { OnlineUser } from '@core/domain-classes/online-user';\r\nimport { SignalrService } from '@core/services/signalr.service';\r\nimport { TranslationService } from '@core/services/translation.service';\r\n\r\n@Component({\r\n  selector: 'app-login',\r\n  templateUrl: './login.component.html',\r\n  styleUrls: ['./login.component.scss']\r\n})\r\nexport class LoginComponent extends BaseComponent implements OnInit {\r\n  loginFormGroup: UntypedFormGroup;\r\n  isLoading = false;\r\n  userData: User;\r\n  resultMessage: string;\r\n  fieldTextType: boolean = false;\r\n  lat: number;\r\n  lng: number;\r\n  logoImage: string;\r\n  constructor(\r\n    private fb: UntypedFormBuilder,\r\n    private router: Router,\r\n    private securityService: SecurityService,\r\n    private toastr: ToastrService,\r\n    private signalrService: SignalrService,\r\n    public translationService:TranslationService\r\n\r\n  ) {\r\n    super(translationService);\r\n\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.companyProfileSubscription();\r\n    this.createFormGroup();\r\n    navigator.geolocation.getCurrentPosition((position) => {\r\n      this.lat = position.coords.latitude;\r\n      this.lng = position.coords.longitude;\r\n    });\r\n  }\r\n\r\n  companyProfileSubscription() {\r\n    this.securityService.companyProfile.subscribe(profile => {\r\n      if (profile) {\r\n        this.logoImage = profile.logoUrl;\r\n      }\r\n    });\r\n  }\r\n\r\n  onLoginSubmit() {\r\n    if (this.loginFormGroup.valid) {\r\n      this.isLoading = true;\r\n      const userObject = Object.assign(this.loginFormGroup.value, { latitude: this.lat, longitude: this.lng });\r\n      this.sub$.sink = this.securityService.login(userObject)\r\n        .subscribe(\r\n          (c: UserAuth) => {\r\n            const userInfo: OnlineUser = {\r\n              email: c.email,\r\n              id: c.id,\r\n              connectionId: null\r\n            }\r\n            this.signalrService.addUser(userInfo);\r\n            this.isLoading = false;\r\n            this.router.navigate(['/']);\r\n          },\r\n          (err: CommonError) => {\r\n            this.isLoading = false;\r\n            if (err.messages) {\r\n              err.messages.forEach(msg => {\r\n                this.toastr.error(msg);\r\n              });\r\n            } else if (err.error) {\r\n              this.toastr.error(err.error as string);\r\n            }\r\n          }\r\n        );\r\n    }\r\n  }\r\n\r\n  createFormGroup(): void {\r\n    this.loginFormGroup = this.fb.group({\r\n      userName: ['', [Validators.required, Validators.email]],\r\n      password: ['', [Validators.required]]\r\n    });\r\n  }\r\n  onRegistrationClick(): void {\r\n    this.router.navigate(['/registration']);\r\n  }\r\n}\r\n","<div class=\"limiter\">\r\n  <div class=\"container-login100\">\r\n    <div class=\"loading-shade\" *ngIf=\"isLoading\">\r\n      <mat-spinner></mat-spinner>\r\n    </div>\r\n    <form [formGroup]=\"loginFormGroup\" (submit)=\"onLoginSubmit()\" class=\"login100-form validate-form\">\r\n      <div class=\"row\">\r\n        <img *ngIf=\"!logoImage\" class=\"login-logo mb-5\" src=\"../../assets/images/logo.png\" alt=\"Logo\">\r\n        <img *ngIf=\"logoImage\" class=\"login-logo mb-5\" [src]=\"logoImage\" alt=\"Logo\">\r\n      </div>\r\n      <div class=\"row\">\r\n        <div class=\"col-md-12 col-sm-12 col-12\">\r\n          <div class=\"form-group \">\r\n            <label class=\"text-danger\">\r\n              {{'EMAIL' | translate }} *\r\n            </label>\r\n            <input formControlName=\"userName\" class=\"form-control\" type=\"text\">\r\n            <div *ngIf=\"loginFormGroup.get('userName').touched && loginFormGroup.get('userName').errors\"\r\n              class=\"k-tooltip-validation\">\r\n              <div class=\"text-danger\" *ngIf=\"loginFormGroup.get('userName').errors?.required\">\r\n                {{'EMAIL_IS_REQUIRED' | translate }}\r\n              </div>\r\n              <div class=\"text-danger\" *ngIf=\"loginFormGroup.get('userName').errors?.email\">\r\n                {{'PLEASE_ENTER_VALID_EMAIL' | translate }}\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div class=\"col-md-12 col-sm-12 col-12\">\r\n          <div class=\"form-group\">\r\n            <label class=\"text-danger\">\r\n              {{'PASSWORD' | translate }} *\r\n            </label>\r\n            <div class=\"input-group\">\r\n              <input formControlName=\"password\" class=\"form-control\" [type]=\"fieldTextType ? 'text' : 'password'\">\r\n              <div class=\"input-group-append\">\r\n                <span class=\"input-group-text cursor-pointer\">\r\n                  <i class=\"fa\" [ngClass]=\"{'fa-eye-slash':!fieldTextType,'fa-eye': fieldTextType}\"\r\n                    (click)=\"fieldTextType=!fieldTextType\"></i>\r\n                </span>\r\n              </div>\r\n            </div>\r\n            <div *ngIf=\"loginFormGroup.get('password').touched && loginFormGroup.get('password').errors?.required\"\r\n              class=\"k-tooltip-validation\">\r\n              <div class=\"text-danger\" *ngIf=\"loginFormGroup.get('password').errors?.required\">\r\n                {{'PASSWORD_IS_REQUIRED' | translate }}\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div class=\"col-md-12 col-sm-6 col-12\">\r\n          <button type=\"submit\" class=\"btn-main-large\" [disabled]=\"!loginFormGroup.valid\">\r\n            {{'LOGIN' | translate }}\r\n          </button>\r\n        </div>\r\n      </div>\r\n    </form>\r\n  </div>\r\n</div>","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\n\r\nimport { LoginRoutingModule } from './login-routing.module';\r\nimport { LoginComponent } from './login.component';\r\nimport { ReactiveFormsModule } from '@angular/forms';\r\nimport { MatProgressSpinnerModule } from '@angular/material/progress-spinner';\r\nimport { TranslateModule } from '@ngx-translate/core';\r\n\r\n\r\n@NgModule({\r\n  declarations: [\r\n    LoginComponent\r\n  ],\r\n  imports: [\r\n    CommonModule,\r\n    LoginRoutingModule,\r\n    ReactiveFormsModule,\r\n    MatProgressSpinnerModule,\r\n    TranslateModule\r\n  ]\r\n})\r\nexport class LoginModule { }\r\n"],"names":[],"sourceRoot":"webpack:///","x_google_ignoreList":[]}