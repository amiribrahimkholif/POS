{"version":3,"file":"src_app_reports_sales-order-report_sales-order-report_module_ts.js","mappings":";;;;;;;;;;;;;;;;;;;;;;;AAAmF;AAI5B;;;;;;;;;;;ICKvD,0EAA6C;IACzC,yEAA2B;IAC/B,4DAAM;;;IAKM,yEAAsC;IAAA,uDAA8B;;IAAA,4DAAK;;IAAnC,0DAA8B;IAA9B,gJAA8B;;;IACpE,yEAAuC;IACnC,uDACJ;IAAA,4DAAK;;;IADD,0DACJ;IADI,mGACJ;;;IAGF,yEAAsC;IAAA,uDAAwB;;IAAA,4DAAK;;IAA7B,0DAAwB;IAAxB,0IAAwB;;;IAE5D,8EAAwC;IACpC,uDACJ;;IAAA,4DAAc;;IADV,0DACJ;IADI,iKACJ;;;IACA,8EAAyC;IACrC,uDACJ;;IAAA,4DAAc;;IADV,0DACJ;IADI,0JACJ;;;IANF,yEAAuC;IACrC,2IAEc;IACd,2IAEc;IAChB,4DAAK;;;IANW,0DAAwB;IAAxB,yFAAwB;IAGxB,0DAAyB;IAAzB,yFAAyB;;;IAMvC,yEAAsC;IAAE,uDAAuB;;IAAA,4DAAK;;IAA5B,0DAAuB;IAAvB,mJAAuB;;;IAC/D,yEAAuC;IACnC,uDACJ;IAAA,4DAAK;;;IADD,0DACJ;IADI,gGACJ;;;IAGA,yEAAsC;IAAC,uDAAiC;;IAAA,4DAAK;;IAAtC,0DAAiC;IAAjC,6JAAiC;;;IACxE,yEAAuC;IACnC,uDACJ;;IAAA,4DAAK;;;IADD,0DACJ;IADI,kKACJ;;;IAGA,yEAAsC;IAAC,uDAA2B;;IAAA,4DAAK;;IAAhC,0DAA2B;IAA3B,uJAA2B;;;IAClE,yEAAuC;IACrC,uDACF;IAAA,4DAAK;;;IADH,0DACF;IADE,uJACF;;;IAGA,yEAAsC;IAAC,uDAAiC;;IAAA,4DAAK;;IAAtC,0DAAiC;IAAjC,6JAAiC;;;IACxE,yEAAuC;IACnC,uDACJ;;IAAA,4DAAK;;;IADD,0DACJ;IADI,wMACJ;;;IAGA,yEAAsC;IAAC,uDAAsB;;IAAA,4DAAK;;IAA3B,0DAAsB;IAAtB,kJAAsB;;;IAGb,uEAAoB;IAAC,6DAAC;IAAA,4DAAO;;;IADzE,uEAAsE;IAClE,uDAAwC;IAAA,oIAA6B;IACzE,4DAAO;;;;IADH,0DAAwC;IAAxC,yHAAwC;IAAO,0DAAW;IAAX,2EAAW;;;IAFlE,yEAAuC;IACnC,6HAEO;IACX,4DAAK;;;IAHqB,0DAA+B;IAA/B,oGAA+B;;;IAMzD,yEAAsC;IAAC,uDAA4B;;IAAA,4DAAK;;IAAjC,0DAA4B;IAA5B,wJAA4B;;;IACnE,yEAAuC;IACnC,uDACJ;;IAAA,4DAAK;;;IADD,0DACJ;IADI,iKACJ;;;IAGA,yEAAsC;IAAC,uDAAwB;;IAAA,4DAAK;;IAA7B,0DAAwB;IAAxB,oJAAwB;;;IAC/D,yEAAuC;IACnC,uDACJ;;IAAA,4DAAK;;;IADD,0DACJ;IADI,uOACJ;;;IAEJ,oEAAyE;;;IACzE,oEAAuG;;;IAA1C,8FAAoC;;ADhElG,MAAM,wBAAyB,SAAQ,iEAAa;IAMzD,YAAoB,iBAAoC,EAAQ,kBAAqC;QACnG,KAAK,CAAC,kBAAkB,CAAC,CAAC;QADR,sBAAiB,GAAjB,iBAAiB,CAAmB;QAAQ,uBAAkB,GAAlB,kBAAkB,CAAmB;QAJrG,oBAAe,GAAqB,EAAE,CAAC;QACvC,cAAS,GAAG,KAAK,CAAC;QAClB,qBAAgB,GAAa,CAAC,aAAa,EAAC,QAAQ,EAAE,UAAU,EAAE,WAAW,EAAE,UAAU,EAAG,eAAe,EAAE,OAAO,EAAE,UAAU,EAAC,aAAa,CAAC,CAAC;QAI9I,IAAI,CAAC,UAAU,EAAE,CAAC;IACnB,CAAC;IAEF,QAAQ;IACR,CAAC;IAED,WAAW,CAAC,OAAsB;QAChC,IAAI,OAAO,CAAC,YAAY,CAAC,EAAE;YACzB,IAAI,CAAC,kBAAkB,EAAE,CAAC;SAC3B;IACH,CAAC;IAED,kBAAkB;QAChB,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC;QACtB,IAAI,CAAC,iBAAiB,CAAC,kBAAkB,CAAC,IAAI,CAAC,UAAU,CAAC,EAAE,CAAC;aAC1D,SAAS,CAAC,CAAC,IAAsB,EAAE,EAAE;YACpC,IAAI,CAAC,SAAS,GAAG,KAAK,CAAC;YACvB,IAAI,CAAC,eAAe,GAAG,IAAI,CAAC;QAC9B,CAAC,EAAE,GAAG,EAAE,CAAC,IAAI,CAAC,SAAS,GAAG,KAAK,CAAC;IACpC,CAAC;;gGA3BU,wBAAwB;sHAAxB,wBAAwB;QCbrC,yEAA8B;QAIV,uDAAmC;;QAAA,4DAAK;QAK5D,oHAEM;QAEN,yEAA8B;QAEtB,4EAAyC;QACrC,oHAAyE;QACzE,oHAEK;QACT,qEAAe;QACf,6EAAoC;QAClC,oHAAmE;QACnE,oHAOK;QACT,qEAAe;QACb,6EAAsC;QAClC,oHAAoE;QACpE,oHAEK;QACT,qEAAe;QACf,6EAAuC;QACnC,oHAA6E;QAC7E,oHAEK;QACT,qEAAe;QACf,6EAAsC;QAClC,oHAAuE;QACvE,oHAEK;QACT,qEAAe;QACf,6EAA2C;QACvC,oHAA6E;QAC7E,oHAEK;QACT,qEAAe;QACf,6EAAmC;QAC/B,oHAAkE;QAClE,oHAIK;QACT,qEAAe;QACf,6EAAsC;QAClC,oHAAwE;QACxE,oHAEK;QACT,qEAAe;QACf,6EAAyC;QACrC,oHAAoE;QACpE,oHAEK;QACT,qEAAe;QACf,qHAAyE;QACzE,qHAAuG;QAC3G,4DAAQ;;QA1EQ,0DAAmC;QAAnC,qJAAmC;QAK3B,0DAAe;QAAf,+EAAe;QAKhC,0DAAe;QAAf,4EAAe;QA8DE,2DAAkC;QAAlC,iGAAkC;QACrB,0DAA0B;QAA1B,kGAA0B;;;;;;;;;;;;;;;;;;;;AC5EZ;AACD;AACqB;;;AAC3E,MAAM,MAAM,GAAW;IACrB;QACE,IAAI,EAAC,EAAE;QACP,SAAS,EAAE,oFAAyB;QACpC,IAAI,EAAE,EAAE,SAAS,EAAE,YAAY,EAAE;QACjC,WAAW,EAAE,CAAC,gEAAS,CAAC;KACzB;CACF,CAAC;AAMK,MAAM,6BAA6B;;0GAA7B,6BAA6B;0HAA7B,6BAA6B;8HAH9B,kEAAqB,CAAC,MAAM,CAAC,EAC7B,yDAAY;mIAEX,6BAA6B,oFAF9B,yDAAY;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACfyD;AAED;AACU;AAE/B;AACV;AAK0C;AAGO;AAE1C;AAGI;AACwB;AAC7B;AAGuE;AAC5C;AAE+C;AACpG;AACuD;AACf;AACI;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ICvBnE,8EACsC;IACpC,oEAA2B;IAAC,wDAC9B;;IAAA,6DAAS;;IAFP,+IAAmC;IACP,2DAC9B;IAD8B,gKAC9B;;;IAIN,2EAA+D;IAC7D,0EAA2B;IAC7B,6DAAM;;;IA4BQ,kFAAsE;IACpE,wDACF;IAAA,6DAAa;;;;IAFD,gFAAe;IACzB,2DACF;IADE,uFACF;;;IACA,kFAAkD;IAChD,wDACF;;IAAA,6DAAa;;IADX,2DACF;IADE,2JACF;;;IAsBF,2EAA8D;IAC5D,wDACF;;IAAA,6DAAM;;IADJ,2DACF;IADE,0KACF;;;IAHF,uEAA+B;IAC7B,8HAEM;IACR,6DAAM;;;IAHsB,2DAAkC;IAAlC,+IAAkC;;;IAe9D,qEACK;;;IAGD,4EAAwC;IAAA,yEAAa;IAAA,6DAAW;;;IAChE,4EAAwC;IAAA,uEAAW;IAAA,6DAAW;;;IAGhE,8EAEiE;IACrD,qEAAS;IAAA,6DAAW;;;;IADd,oFAA0B;;;;IAI1C,8EACgD;IACpC,gEAAI;IAAA,6DAAW;IACzB,wEAAM;IAAA,wDAAwB;;IAAA,6DAAO;;;IAFrC,0JAA6C;IAEvC,2DAAwB;IAAxB,4IAAwB;;;;IAG9B,8EAAkG;IAA/B,8ZAAS,2FAAoB,KAAC;IAC/F,4EAAU;IAAA,kEAAM;IAAA,6DAAW;IAC3B,wEAAM;IAAA,wDAAwB;;IAAA,6DAAO;;IAA/B,2DAAwB;IAAxB,4IAAwB;;;IAHlC,yEAAqC;IACnC,kJAGS;IACX,sEAAe;;IAJJ,2DAA0C;IAA1C,uGAA0C;;;;IAOnD,8EAAsF;IAAhC,+YAAS,4FAAqB,KAAC;IACnF,4EAAU;IAAA,6EAAiB;IAAA,6DAAW;IACtC,wEAAM;IAAA,wDAAoC;;IAAA,6DAAO;;IAA3C,2DAAoC;IAApC,wJAAoC;;;;IAK5C,8EAAgG;IAAzB,8ZAAS,qFAAc,KAAC;IAC7F,4EAAU;IAAA,mEAAO;IAAA,6DAAW;IAC5B,wEAAM;IAAA,wDAA6B;;IAAA,6DAAO;;IAApC,2DAA6B;IAA7B,iJAA6B;;;IAHvC,+EAA2C;IACzC,kJAGS;IACX,6DAAc;;IAJH,2DAA8C;IAA9C,2GAA8C;;;;IAKzD,8EAAkG;IAA1B,+YAAS,sFAAe,KAAC;IAC/F,4EAAU;IAAA,yEAAa;IAAA,6DAAW;IAClC,wEAAM;IAAA,wDAA8B;;IAAA,6DAAO;;IAArC,2DAA8B;IAA9B,kJAA8B;;;;;IAvC1C,0EAA2D;IACjC,sWAAS,oFAAa,KAAC;IAC7C,uIAAgE;IAChE,uIAA8D;IAChE,6DAAS;IAET,mIAIS;IACT,oFAA0C;IACxC,mIAIS;IACT,+IAKe;IAEf,yEAAc;IACZ,qIAGS;IACX,sEAAe;IAEf,+IAKc;IACd,qIAGS;IACT,+EAAoD;IAA9B,uWAAS,0FAAmB,KAAC;IACjD,6EAAU;IAAA,oEAAO;IAAA,6DAAW;IAC5B,yEAAM;IAAA,yDAAkC;;IAAA,6DAAO;;;;IAzCtC,2DAA2B;IAA3B,mGAA2B;IAC3B,2DAA2B;IAA3B,mGAA2B;IAIrC,2DAA4L;IAA5L,8IAA4L;IAIrK,2DAAe;IAAf,gFAAe;IAC9B,2DAAwC;IAAxC,qGAAwC;IAKlC,2DAAoB;IAApB,qFAAoB;IAQxB,2DAA6B;IAA7B,0FAA6B;IAM1B,2DAA2B;IAA3B,4FAA2B;IAMhC,2DAA+C;IAA/C,4GAA+C;IAMhD,2DAAkC;IAAlC,wJAAkC;;;IAM9C,0EAA+E;IAAC,wDAChF;;IAAA,6DAAK;;IAD2E,2DAChF;IADgF,6JAChF;;;IACA,0EAA2D;IAAC,wDACvD;;IAAA,6DAAK;;;IADkD,2DACvD;IADuD,gLACvD;;;IAGL,0EAA+E;IAAC,wDAChF;;IAAA,6DAAK;;IAD2E,2DAChF;IADgF,6JAChF;;;IACA,0EAA2D;IACT,wDAAmB;IAAA,6DAAI;;;IAApE,2DAA4C;IAA5C,0JAA4C;IAAC,2DAAmB;IAAnB,8FAAmB;;;IAIrE,0EAA+E;IAAC,wDAEhF;;IAAA,6DAAK;;IAF2E,2DAEhF;IAFgF,8JAEhF;;;IACA,0EAA2D;IAAC,wDACvD;;IAAA,6DAAK;;;IADkD,2DACvD;IADuD,+KACvD;;;IAGL,0EAA+E;IAAC,wDAAgC;;IAAA,6DAAK;;IAArC,2DAAgC;IAAhC,8JAAgC;;;;IAChH,0EAA2D;IACV,wDAAoB;IAAA,6DAAI;;;IAApE,2DAA0C;IAA1C,kKAA0C;IAAE,2DAAoB;IAApB,gGAAoB;;;IAIrE,0EAAsD;IAAC,wDAAiC;;IAAA,6DAAK;;IAAtC,2DAAiC;IAAjC,+JAAiC;;;IACxF,2EAAkC;IAChC,wDACF;;IAAA,6DAAK;;;IADH,2DACF;IADE,mKACF;;;IAGA,0EAAsD;IAAC,wDAA4B;;IAAA,6DAAK;;IAAjC,2DAA4B;IAA5B,0JAA4B;;;IACnF,2EAAkC;IAChC,wDACF;;IAAA,6DAAK;;;IADH,2DACF;IADE,8JACF;;;IAGA,0EAAsD;IAAC,wDAA+B;;IAAA,6DAAK;;IAApC,2DAA+B;IAA/B,6JAA+B;;;IACtF,2EAAkC;IAChC,wDACF;;IAAA,6DAAK;;;IADH,2DACF;IADE,iKACF;;;IAGA,0EAAsD;IAAE,wDAAoC;;IAAA,6DAAK;;IAAzC,2DAAoC;IAApC,kKAAoC;;;IAC5F,2EAAkC;IAChC,wDACF;;IAAA,6DAAK;;;IADH,2DACF;IADE,qKACF;;;IAGA,0EAA+E;IAAC,wDAAiC;;IAAA,6DAAK;;IAAtC,2DAAiC;IAAjC,+JAAiC;;;;IACjH,2EAAuF;IAGzC,wDAAqC;;IAAA,6DAAO;;;IAF/D,2DAEkB;IAFlB,6NAEkB;IAAC,2DAAqC;IAArC,wJAAqC;;;IAInF,0EAAsD;IAAC,wDAA4B;;IAAA,6DAAK;;IAAjC,2DAA4B;IAA5B,0JAA4B;;;IAEjF,+EAAmC;IACjC,wDACF;;IAAA,6DAAc;;IADZ,2DACF;IADE,oJACF;;;IACA,+EAAoC;IAClC,wDACF;;IAAA,6DAAc;;IADZ,2DACF;IADE,mJACF;;;IANF,2EAAkC;IAChC,6IAEc;IACd,6IAEc;IAChB,6DAAK;;;IANW,2DAAmB;IAAnB,qFAAmB;IAGnB,2DAAoB;IAApB,qFAAoB;;;IAMpC,sEAA4C;;;IAG5C,sEACK;;;;IAGL,2EAAsC;IAElC,oaAA+B;;IADjC,6DACkC;;;IAD3B,2DAAwC;IAAxC,iKAAwC;IAC7C,+FAA+B;;;IAInC,sEACK;;;IASD,kFAA2G;IACzG,wDACF;IAAA,6DAAa;;;;IAF8C,iFAAe;IACxE,2DACF;IADE,sGACF;;;;IARJ,2EAAsC;IACpC,yEACuE;;IACvE,8FACkC;IAD+B,2bAAqD;IAEpH,mFAAqB;IAAA,wDAAsB;;IAAA,6DAAa;IACxD,4IAEa;;IACf,6DAAmB;;;;IARZ,2DAAwC;IAAxC,iKAAwC;IAC7C,qGAAmC;IACnB,2DAA8B;IAA9B,wFAA8B;IAEzB,2DAAsB;IAAtB,0IAAsB;IACV,2DAAwB;IAAxB,8JAAwB;;;IAO7D,sEACK;;;IAGL,sEACK;;;IAGL,sEACK;;;IAGL,sEACK;;;IAGL,sEACK;;;IAGL,sEACK;;;;IAGL,2EAAmD;IACjD,iFAEgB;IAClB,6DAAK;;;IAHY,2DAAe;IAAf,iFAAe;;;IAQ9B,yEAAkD;IAChD,4EAC2E;IAEvE,yFACwB;IAC1B,6DAAM;IAEV,sEAAe;;;;IANX,2DAAwE;IAAxE,8IAAwE;IAE/C,2DAAuB;IAAvB,qFAAuB;;;IALtD,2EAAiF;IAC/E,gJAQe;IACjB,6DAAK;;;;IAVmC,sGAAwC;IAC/D,2DAAiC;IAAjC,0GAAiC;;;IAWpD,sEAAkB;IAGJ,wDAA+B;;IAAA,6DAAI;;IAAnC,2DAA+B;IAA/B,6JAA+B;;;IAI7C,sEAAyE;;;IACzE,sEAAuG;;;IAA1C,gGAAoC;;;IACjG,sEAAiE;;;IAEjE,sEAA0E;;;IAC1E,sEAA8F;;;IAMtG,yEAA2C;IACzC,2FAAuF;IACzF,sEAAe;;;IADY,2DAAmC;IAAnC,qGAAmC;;;AD9PvD,MAAM,yBAA0B,SAAQ,iEAAa;IA2C1D,YACU,iBAAoC,EACpC,eAAgC,EAChC,EAAqB,EACrB,mBAAwC,EACxC,aAA4B,EAC5B,MAAc,EACf,kBAAsC,EACrC,MAAiB,EACjB,aAA4B,EAC5B,EAAsB,EACtB,cAA8B,EAC9B,cAA8B,EAC9B,kBAAsC,EACtC,iBAAoC;QAE5C,KAAK,CAAC,kBAAkB,CAAC,CAAC;QAflB,sBAAiB,GAAjB,iBAAiB,CAAmB;QACpC,oBAAe,GAAf,eAAe,CAAiB;QAChC,OAAE,GAAF,EAAE,CAAmB;QACrB,wBAAmB,GAAnB,mBAAmB,CAAqB;QACxC,kBAAa,GAAb,aAAa,CAAe;QAC5B,WAAM,GAAN,MAAM,CAAQ;QACf,uBAAkB,GAAlB,kBAAkB,CAAoB;QACrC,WAAM,GAAN,MAAM,CAAW;QACjB,kBAAa,GAAb,aAAa,CAAe;QAC5B,OAAE,GAAF,EAAE,CAAoB;QACtB,mBAAc,GAAd,cAAc,CAAgB;QAC9B,mBAAc,GAAd,cAAc,CAAgB;QAC9B,uBAAkB,GAAlB,kBAAkB,CAAoB;QACtC,sBAAiB,GAAjB,iBAAiB,CAAmB;QAvD9C,gBAAW,GAAiB,EAAE,CAAC;QAC/B,qBAAgB,GAAa,CAAC,QAAQ,EAAE,eAAe,EAAE,aAAa,EAAE,cAAc,EAAE,cAAc,EAAE,eAAe,EAAE,UAAU,EAAE,aAAa,EAAE,iBAAiB,EAAE,eAAe,EAAE,QAAQ,CAAC,CAAC;QAClM,kBAAa,GAAa,CAAC,eAAe,EAAE,sBAAsB,EAAE,oBAAoB,EAAE,oBAAoB,EAAE,iBAAiB,EAAE,oBAAoB,EAAE,sBAAsB,EAAE,iBAAiB,EAAE,wBAAwB,EAAE,sBAAsB,EAAE,eAAe,CAAC,CAAC;QACvQ,sBAAiB,GAAa,CAAC,QAAQ,CAAC,CAAC;QACzC,qBAAgB,GAAG,IAAI,CAAC;QAOxB,wBAAmB,GAAuB,IAAI,+DAAkB,EAAE,CAAC;QAG5D,sBAAiB,GAAoB,IAAI,0CAAO,EAAU,CAAC;QAGlE,aAAQ,GAAc,EAAE,CAAC;QAEzB,gBAAW,GAAS,IAAI,IAAI,EAAE,CAAC;QAuC7B,IAAI,CAAC,UAAU,EAAE,CAAC;QAClB,IAAI,CAAC,eAAe,GAAG,IAAI,qGAAwB,EAAE,CAAC;QACtD,IAAI,CAAC,kBAAkB,GAAG,IAAI,4GAA2B,EAAE,CAAC;QAC5D,IAAI,CAAC,kBAAkB,CAAC,QAAQ,GAAG,EAAE,CAAC;QACtC,IAAI,CAAC,kBAAkB,CAAC,OAAO,GAAG,mBAAmB;IACvD,CAAC;IA1CD,IAAW,cAAc;QACvB,OAAO,IAAI,CAAC,eAAe,CAAC;IAC9B,CAAC;IAED,IAAW,cAAc,CAAC,CAAS;QACjC,IAAI,CAAC,eAAe,GAAG,CAAC,CAAC;QACzB,MAAM,cAAc,GAAG,gBAAgB,CAAC,EAAE,CAAC;QAC3C,IAAI,CAAC,iBAAiB,CAAC,IAAI,CAAC,cAAc,CAAC,CAAC;IAC9C,CAAC;IAED,IAAW,iBAAiB;QAC1B,OAAO,IAAI,CAAC,kBAAkB,CAAC;IACjC,CAAC;IAED,IAAW,iBAAiB,CAAC,CAAS;QACpC,IAAI,CAAC,kBAAkB,GAAG,CAAC,CAAC;QAC5B,MAAM,iBAAiB,GAAG,eAAe,CAAC,EAAE,CAAC;QAC7C,IAAI,CAAC,iBAAiB,CAAC,IAAI,CAAC,iBAAiB,CAAC,CAAC;IACjD,CAAC;IA0BD,QAAQ;QACN,IAAI,CAAC,2BAA2B,EAAE,CAAC;QACnC,IAAI,CAAC,qBAAqB,EAAE,CAAC;QAC7B,IAAI,CAAC,qBAAqB,EAAE,CAAC;QAC7B,IAAI,CAAC,WAAW,EAAE,CAAC;QACnB,IAAI,CAAC,UAAU,GAAG,IAAI,4FAAoB,CAAC,IAAI,CAAC,iBAAiB,CAAC,CAAC;QACnE,IAAI,CAAC,UAAU,CAAC,QAAQ,CAAC,IAAI,CAAC,kBAAkB,CAAC,CAAC;QAClD,IAAI,CAAC,oBAAoB,EAAE,CAAC;QAC5B,IAAI,CAAC,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC,iBAAiB;aACpC,IAAI,CACH,6DAAY,CAAC,IAAI,CAAC,EAClB,qEAAoB,EAAE,CAAC;aACxB,SAAS,CAAC,CAAC,CAAC,EAAE,EAAE;YACf,IAAI,CAAC,kBAAkB,CAAC,IAAI,GAAG,CAAC,CAAC;YACjC,IAAI,CAAC,SAAS,CAAC,SAAS,GAAG,CAAC,CAAC;YAC7B,MAAM,QAAQ,GAAkB,CAAC,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;YAC7C,IAAI,QAAQ,CAAC,CAAC,CAAC,KAAK,cAAc,EAAE;gBAClC,IAAI,CAAC,kBAAkB,CAAC,YAAY,GAAG,QAAQ,CAAC,CAAC,CAAC,CAAC;aACpD;iBAAM,IAAI,QAAQ,CAAC,CAAC,CAAC,KAAK,aAAa,EAAE;gBACxC,IAAI,CAAC,kBAAkB,CAAC,WAAW,GAAG,QAAQ,CAAC,CAAC,CAAC,CAAC;aACnD;YACD,IAAI,CAAC,UAAU,CAAC,QAAQ,CAAC,IAAI,CAAC,kBAAkB,CAAC,CAAC;QACpD,CAAC,CAAC,CAAC;IACP,CAAC;IAED,UAAU,CAAC,UAAsB;QAC/B,MAAM,SAAS,GAAG,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,wIAA6B,EAAE;YAChE,KAAK,EAAE,OAAO;YACd,SAAS,EAAE,IAAI,CAAC,OAAO;YACvB,IAAI,EAAE,MAAM,CAAC,MAAM,CAAC,EAAE,EAAE,UAAU,CAAC;SACpC,CAAC,CAAC;QACH,SAAS,CAAC,WAAW,EAAE,CAAC,SAAS,CAAC,CAAC,OAAgB,EAAE,EAAE;YACrD,IAAI,OAAO,EAAE;gBACX,IAAI,CAAC,UAAU,CAAC,QAAQ,CAAC,IAAI,CAAC,kBAAkB,CAAC,CAAC;aACnD;QACH,CAAC,CAAC;IACJ,CAAC;IAED,qBAAqB;QACnB,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC,EAAE,CAAC,KAAK,CAAC;YAC9B,QAAQ,EAAE,CAAC,EAAE,CAAC;YACd,MAAM,EAAE,CAAC,EAAE,CAAC;YACZ,kBAAkB,EAAE,CAAC,EAAE,CAAC;YACxB,SAAS,EAAE,CAAC,EAAE,CAAC;SAChB,EAAE;YACD,UAAU,EAAE,sEAAW,EAAE;SAC1B,CAAC,CAAC;IACL,CAAC;IAED,QAAQ;QACN,IAAI,IAAI,CAAC,UAAU,CAAC,KAAK,EAAE;YACzB,IAAI,CAAC,kBAAkB,CAAC,QAAQ,GAAG,IAAI,CAAC,UAAU,CAAC,GAAG,CAAC,UAAU,CAAC,CAAC,KAAK,CAAC;YACzE,IAAI,CAAC,kBAAkB,CAAC,MAAM,GAAG,IAAI,CAAC,UAAU,CAAC,GAAG,CAAC,QAAQ,CAAC,CAAC,KAAK,CAAC;YACrE,IAAI,CAAC,kBAAkB,CAAC,SAAS,GAAG,IAAI,CAAC,UAAU,CAAC,GAAG,CAAC,WAAW,CAAC,CAAC,KAAK,CAAC;YAC3E,IAAI,CAAC,UAAU,CAAC,QAAQ,CAAC,IAAI,CAAC,kBAAkB,CAAC,CAAC;SACnD;IACH,CAAC;IAGD,OAAO;QACL,IAAI,CAAC,UAAU,CAAC,KAAK,EAAE,CAAC;QACxB,IAAI,CAAC,kBAAkB,CAAC,QAAQ,GAAG,IAAI,CAAC,UAAU,CAAC,GAAG,CAAC,UAAU,CAAC,CAAC,KAAK,CAAC;QACzE,IAAI,CAAC,kBAAkB,CAAC,MAAM,GAAG,IAAI,CAAC,UAAU,CAAC,GAAG,CAAC,QAAQ,CAAC,CAAC,KAAK,CAAC;QACrE,IAAI,CAAC,kBAAkB,CAAC,SAAS,GAAG,IAAI,CAAC,UAAU,CAAC,GAAG,CAAC,WAAW,CAAC,CAAC,KAAK,CAAC;QAC3E,IAAI,CAAC,UAAU,CAAC,QAAQ,CAAC,IAAI,CAAC,kBAAkB,CAAC,CAAC;IACpD,CAAC;IAED,qBAAqB;QACnB,IAAI,CAAC,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC,UAAU,CAAC,GAAG,CAAC,oBAAoB,CAAC,CAAC,YAAY;aACpE,IAAI,CACH,6DAAY,CAAC,GAAG,CAAC,EACjB,qEAAoB,EAAE,EACtB,0DAAS,CAAC,CAAC,CAAC,EAAE;YACZ,IAAI,CAAC,eAAe,CAAC,IAAI,GAAG,CAAC,CAAC;YAC9B,OAAO,IAAI,CAAC,cAAc,CAAC,WAAW,CAAC,IAAI,CAAC,eAAe,CAAC,CAAC;QAC/D,CAAC,CAAC,CACH,CAAC,SAAS,CAAC,CAAC,IAA6B,EAAE,EAAE;YAC5C,IAAI,IAAI,IAAI,IAAI,CAAC,OAAO,EAAE;gBACxB,IAAI,CAAC,QAAQ,GAAG,CAAC,GAAG,IAAI,CAAC,IAAI,CAAC,CAAC;aAChC;QACH,CAAC,EAAE,CAAC,GAAG,EAAE,EAAE;QAEX,CAAC,CAAC,CAAC;IACP,CAAC;IAED,WAAW;QACT,IAAI,CAAC,eAAe,CAAC,IAAI,GAAG,EAAE,CAAC;QAC/B,OAAO,IAAI,CAAC,cAAc,CAAC,WAAW,CAAC,IAAI,CAAC,eAAe,CAAC;aACzD,SAAS,CAAC,CAAC,IAA6B,EAAE,EAAE;YAC3C,IAAI,IAAI,IAAI,IAAI,CAAC,OAAO,EAAE;gBACxB,IAAI,CAAC,QAAQ,GAAG,CAAC,GAAG,IAAI,CAAC,IAAI,CAAC,CAAC;aAChC;QACH,CAAC,EAAE,CAAC,GAAG,EAAE,EAAE;QAEX,CAAC,CAAC,CAAC;QAAA,CAAC;IACR,CAAC;IAGD,kBAAkB,CAAC,UAAsB;QACvC,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,cAAc,EAAE,UAAU,CAAC,EAAE,CAAC,CAAC,CAAC;IACxD,CAAC;IAED,2BAA2B;QACzB,IAAI,CAAC,aAAa,GAAG,IAAI,CAAC,mBAAmB,CAAC,YAAY,CAAC,IAAI,CAC7D,6DAAY,CAAC,IAAI,CAAC,EAClB,qEAAoB,EAAE,EACtB,0DAAS,CAAC,CAAC,CAAC,EAAE;YACZ,OAAO,IAAI,CAAC,eAAe,CAAC,uBAAuB,CAAC,cAAc,EAAE,CAAC,CAAC,CAAC;QACzE,CAAC,CAAC,CACH,CAAC;IACJ,CAAC;IAED,eAAe;QACb,IAAI,CAAC,IAAI,CAAC,UAAU,CAAC,SAAS,CAAC,GAAG,EAAE,CAAC,IAAI,CAAC,SAAS,CAAC,SAAS,GAAG,CAAC,CAAC,CAAC;QAEnE,IAAI,CAAC,IAAI,CAAC,IAAI,GAAG,4CAAK,CAAC,IAAI,CAAC,IAAI,CAAC,UAAU,EAAE,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC;aAC9D,IAAI,CACH,oDAAG,CAAC,CAAC,CAAM,EAAE,EAAE;YACb,IAAI,CAAC,kBAAkB,CAAC,IAAI,GAAG,IAAI,CAAC,SAAS,CAAC,SAAS,GAAG,IAAI,CAAC,SAAS,CAAC,QAAQ,CAAC;YAClF,IAAI,CAAC,kBAAkB,CAAC,QAAQ,GAAG,IAAI,CAAC,SAAS,CAAC,QAAQ,CAAC;YAC3D,IAAI,CAAC,kBAAkB,CAAC,OAAO,GAAG,IAAI,CAAC,IAAI,CAAC,MAAM,GAAG,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,SAAS,CAAC;YAC/E,IAAI,CAAC,UAAU,CAAC,QAAQ,CAAC,IAAI,CAAC,kBAAkB,CAAC,CAAC;QACpD,CAAC,CAAC,CACH;aACA,SAAS,EAAE,CAAC;IACjB,CAAC;IAED,oBAAoB;QAClB,IAAI,CAAC,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC,UAAU,CAAC,sBAAsB;aACpD,SAAS,CAAC,CAAC,CAAiB,EAAE,EAAE;YAC/B,IAAI,CAAC,EAAE;gBACL,IAAI,CAAC,kBAAkB,CAAC,QAAQ,GAAG,CAAC,CAAC,QAAQ,CAAC;gBAC9C,IAAI,CAAC,kBAAkB,CAAC,IAAI,GAAG,CAAC,CAAC,IAAI,CAAC;gBACtC,IAAI,CAAC,kBAAkB,CAAC,UAAU,GAAG,CAAC,CAAC,UAAU,CAAC;aACnD;QACH,CAAC,CAAC,CAAC;IACP,CAAC;IAED,SAAS,CAAC,OAAmB;QAC3B,IAAI,CAAC,eAAe,GAAG,IAAI,CAAC,eAAe,KAAK,OAAO,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,OAAO,CAAC;QACzE,IAAI,CAAC,EAAE,CAAC,aAAa,EAAE,CAAC;IAC1B,CAAC;IAGD,gBAAgB,CAAC,UAAsB;QACrC,IAAI,CAAC,mBAAmB,CAAC,wBAAwB,CAAC,IAAI,CAAC,kBAAkB,CAAC,QAAQ,CAAC,iCAAiC,CAAC,CAAC;aACnH,SAAS,CAAC,CAAC,KAAK,EAAE,EAAE;YACnB,IAAI,KAAK,EAAE;gBACT,IAAI,CAAC,iBAAiB,CAAC,gBAAgB,CAAC,UAAU,CAAC,EAAE,CAAC,CAAC,SAAS,CAAC,GAAG,EAAE;oBACpE,IAAI,CAAC,aAAa,CAAC,OAAO,CAAC,IAAI,CAAC,kBAAkB,CAAC,QAAQ,CAAC,kCAAkC,CAAC,CAAC;oBAChG,IAAI,CAAC,UAAU,CAAC,QAAQ,CAAC,IAAI,CAAC,kBAAkB,CAAC,CAAC;gBACpD,CAAC,CAAC,CAAC;aACJ;QACH,CAAC,CAAC,CAAC;IACP,CAAC;IAGD,WAAW,CAAC,UAAsB;QAChC,MAAM,SAAS,GAAG,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,2IAA8B,EAAE;YACjE,IAAI,EAAE,MAAM,CAAC,MAAM,CAAC,EAAE,EAAE,UAAU,CAAC,EAAE,SAAS,EAAE,IAAI,CAAC,OAAO;SAC7D,CAAC,CAAC;QACH,SAAS,CAAC,WAAW,EAAE,CAAC,SAAS,CAAC,CAAC,OAAgB,EAAE,EAAE;YACrD,IAAI,OAAO,EAAE;gBACX,IAAI,CAAC,UAAU,CAAC,QAAQ,CAAC,IAAI,CAAC,kBAAkB,CAAC,CAAC;aACnD;QACH,CAAC,CAAC;IACJ,CAAC;IAED,iBAAiB,CAAC,SAAqB;QACrC,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,oBAAoB,EAAE,SAAS,CAAC,EAAE,CAAC,CAAC,CAAC;IAC7D,CAAC;IAGD,eAAe,CAAC,EAAc;QAC5B,IAAI,YAAY,GAAG,IAAI,CAAC,aAAa,CAAC,SAAS,CAAa,EAAE,CAAC,CAAC;QAChE,MAAM,kBAAkB,GAAG,IAAI,CAAC,eAAe,CAAC,WAAW,CAAC,EAAE,CAAC,UAAU,CAAC,CAAC;QAC3E,MAAM,kBAAkB,GAAG,IAAI,CAAC,iBAAiB,CAAC,kBAAkB,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC;QAC5E,+CAAQ,CAAC,EAAE,kBAAkB,EAAE,kBAAkB,EAAE,CAAC,CAAC,SAAS,CAAC,QAAQ,CAAC,EAAE;YACxE,YAAY,CAAC,QAAQ,GAAG,QAAQ,CAAC,kBAAkB,CAAC;YACpD,YAAY,CAAC,eAAe,GAAG,QAAQ,CAAC,kBAAkB,CAAC;YAC3D,IAAI,CAAC,oBAAoB,GAAG,YAAY,CAAC;QAC3C,CAAC,CAAC,CAAC;IACL,CAAC;IAED,gBAAgB;QACd,IAAI,CAAC,iBAAiB,CAAC,qBAAqB,CAAC,IAAI,CAAC,kBAAkB,CAAC;aAClE,SAAS,CAAC,CAAC,CAA6B,EAAE,EAAE;YAC3C,IAAI,CAAC,WAAW,GAAG,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,CAAC;YAC/B,IAAI,OAAO,GAAG,CAAC;oBACb,IAAI,CAAC,kBAAkB,CAAC,QAAQ,CAAC,cAAc,CAAC;oBAChD,IAAI,CAAC,kBAAkB,CAAC,QAAQ,CAAC,cAAc,CAAC;oBAChD,IAAI,CAAC,kBAAkB,CAAC,QAAQ,CAAC,eAAe,CAAC;oBACjD,IAAI,CAAC,kBAAkB,CAAC,QAAQ,CAAC,eAAe,CAAC;oBACjD,IAAI,CAAC,kBAAkB,CAAC,QAAQ,CAAC,gBAAgB,CAAC;oBAClD,IAAI,CAAC,kBAAkB,CAAC,QAAQ,CAAC,WAAW,CAAC;oBAC7C,IAAI,CAAC,kBAAkB,CAAC,QAAQ,CAAC,cAAc,CAAC;oBAChD,IAAI,CAAC,kBAAkB,CAAC,QAAQ,CAAC,mBAAmB,CAAC;oBACrD,IAAI,CAAC,kBAAkB,CAAC,QAAQ,CAAC,gBAAgB,CAAC;oBAClD,IAAI,CAAC,kBAAkB,CAAC,QAAQ,CAAC,WAAW,CAAC;iBAC9C,CAAC,CAAC;YAEH,IAAI,gBAAgB,GAAG,EAAE,CAAC;YAC1B,IAAI,CAAC,WAAW,CAAC,OAAO,CAAC,CAAC,UAAsB,EAAE,EAAE;gBAClD,gBAAgB,CAAC,IAAI,CAAC;oBACpB,cAAc,EAAE,IAAI,CAAC,cAAc,CAAC,SAAS,CAAC,UAAU,CAAC,aAAa,EAAE,WAAW,CAAC;oBACpF,cAAc,EAAE,UAAU,CAAC,WAAW;oBACtC,eAAe,EAAE,IAAI,CAAC,cAAc,CAAC,SAAS,CAAC,UAAU,CAAC,YAAY,EAAE,WAAW,CAAC;oBACpF,eAAe,EAAE,UAAU,CAAC,YAAY;oBACxC,gBAAgB,EAAE,IAAI,CAAC,kBAAkB,CAAC,SAAS,CAAC,UAAU,CAAC,aAAa,CAAC;oBAC7E,WAAW,EAAE,IAAI,CAAC,kBAAkB,CAAC,SAAS,CAAC,UAAU,CAAC,QAAQ,CAAC;oBACnE,cAAc,EAAE,IAAI,CAAC,kBAAkB,CAAC,SAAS,CAAC,UAAU,CAAC,WAAW,CAAC;oBACzE,mBAAmB,EAAE,IAAI,CAAC,kBAAkB,CAAC,SAAS,CAAC,UAAU,CAAC,eAAe,CAAC;oBAClF,gBAAgB,EAAE,IAAI,CAAC,iBAAiB,CAAC,SAAS,CAAC,UAAU,CAAC,aAAa,CAAC;oBAC5E,WAAW,EAAE,UAAU,CAAC,MAAM,IAAI,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC,OAAO;iBACvD,CAAC,CAAC;YACL,CAAC,CAAC,CAAC;YAEH,IAAI,QAAQ,GAAG,iDAAmB,EAAE,CAAC;YACrC,sDAAwB,CAAC,QAAQ,EAAE,OAAO,CAAC,CAAC;YAC5C,IAAI,SAAS,GAAG,uDAAyB,CAAC,QAAQ,EAAE,gBAAgB,EAAE,EAAE,MAAM,EAAE,IAAI,EAAE,UAAU,EAAE,IAAI,EAAE,CAAC,CAAC;YAC1G,0DAA4B,CAAC,QAAQ,EAAE,SAAS,EAAE,IAAI,CAAC,kBAAkB,CAAC,QAAQ,CAAC,oBAAoB,CAAC,CAAC,CAAC;YAC1G,4CAAc,CAAC,QAAQ,EAAE,IAAI,CAAC,kBAAkB,CAAC,QAAQ,CAAC,oBAAoB,CAAC,GAAG,OAAO,CAAC,CAAC;QAC7F,CAAC,CAAC,CAAC;IACP,CAAC;;kGAlSU,yBAAyB;wHAAzB,yBAAyB;mEASzB,sEAAY;mEACZ,4DAAO;;;;;sFAZP,CAAC,+EAAc,EAAE,mFAAkB,EAAE,8FAAiB,CAAC;QC5CpE,0EAA8B;QAIlB,wDAAoC;;QAAA,6DAAK;QAGjD,0EAAqC;QACnC,4HAGS;QACX,6DAAM;QAGV,sHAEM;;QACN,2EAAiB;QAMiB,yDAA4B;;QAAA,6DAAQ;QAC1D,yEACqG;;QACrG,qFAAmE;QACrE,6DAAM;QAER,2EAAsB;QAEE,yDAA0B;;QAAA,6DAAQ;QACtD,yEAC+F;;QAC/F,qFAAiE;QACnE,6DAAM;QAER,4EAAsB;QAEX,yDAAiC;;QAAA,6DAAQ;QAChD,mFAA4H;;QAC1H,yEAC2E;;QAC3E,2EAA2B;QAC3B,uIAEa;QACb,uIAEa;QACf,6DAAa;QAGjB,4EAAsC;QACd,mJAAS,cAAU,IAAC;QAA2C,qEACvD;QAAC,yDAE/B;;QAAA,6DAAS;QACT,+EAAmF;QAA7D,mJAAS,aAAS,IAAC;QAA0C,qEAA6B;QAC9G,yDAEF;;QAAA,6DAAS;QACT,+EAA6F;QAAvE,mJAAS,sBAAkB,IAAC;QAA2C,qEAC/D;QAAC,yDAC/B;;QAAA,6DAAS;QAIb,2EAAiB;QAEb,yHAIM;QACR,6DAAM;QAKd,2EAAiB;QAKT,8EAAoC;QAClC,uHACK;QACL,yHA8CK;QACP,sEAAe;QACf,8EAA2C;QACzC,uHACK;QACL,uHACU;QACZ,sEAAe;QACf,8EAAyC;QACvC,uHACK;QACL,uHAEK;QACP,sEAAe;QACf,8EAA0C;QACxC,uHAEK;QACL,uHACU;QACZ,sEAAe;QACf,8EAA0C;QACxC,uHAAqH;QACrH,uHAEK;QACP,sEAAe;QACf,8EAA2C;QACzC,uHAA6F;QAC7F,uHAEK;QACP,sEAAe;QACf,8EAAsC;QACpC,uHAAwF;QACxF,uHAEK;QACP,sEAAe;QACf,8EAAyC;QACvC,uHAA2F;QAC3F,uHAEK;QACP,sEAAe;QACf,8EAA6C;QAC3C,uHAAiG;QACjG,uHAEK;QACP,sEAAe;QACf,8EAA2C;QACzC,uHAAsH;QACtH,uHAIK;QACP,sEAAe;QACf,8EAAoC;QAClC,uHAAwF;QACxF,uHAOK;QACP,sEAAe;QACf,8EAA2C;QACzC,uHAA4C;QAC9C,sEAAe;QACf,+EAAkD;QAChD,yHACK;QACP,sEAAe;QACf,+EAAgD;QAC9C,yHAGK;QACP,sEAAe;QACf,+EAAgD;QAC9C,yHACK;QACP,sEAAe;QACf,+EAA6C;QAC3C,2HAUK;QACP,sEAAe;QACf,+EAAgD;QAC9C,yHACK;QACP,sEAAe;QACf,+EAAkD;QAChD,yHACK;QACP,sEAAe;QACf,+EAA6C;QAC3C,yHACK;QACP,sEAAe;QACf,+EAAoD;QAClD,yHACK;QACP,sEAAe;QACf,+EAAkD;QAChD,yHACK;QACP,sEAAe;QACf,+EAA2C;QACzC,yHACK;QACP,sEAAe;QACf,+EAAoC;QAClC,yHAIK;QACP,sEAAe;QAEf,+EAA4C;QAC1C,yHAUK;QACP,sEAAe;QACf,yHAMG;QACH,yHAAyE;QACzE,yHAAuG;QACvG,yHAAiE;QAEjE,yHAA0E;QAC1E,yHAA8F;QAChG,6DAAQ;QAKd,6IAEe;;;;QAzSH,2DAAoC;QAApC,yJAAoC;QAIM,2DAAuC;QAAvC,oGAAuC;QAOjE,2DAAiC;QAAjC,8JAAiC;QAKnD,2DAAwB;QAAxB,sFAAwB;QAIA,2DAA4B;QAA5B,2JAA4B;QAES,2DAAyC;QAAzC,oKAAyC;QAD1D,iFAAmB;QAE9C,2DAAyB;QAAzB,mFAAyB;QAKpB,2DAA0B;QAA1B,yJAA0B;QAES,2DAAuC;QAAvC,kKAAuC;QADtD,iFAAmB;QAE5C,2DAAyB;QAAzB,mFAAyB;QAKjC,2DAAiC;QAAjC,gKAAiC;QACgB,2DAA8C;QAA9C,yKAA8C;QAA1F,6EAAe;QAEJ,2DAAqD;QAArD,gLAAqD;QAEhC,2DAAW;QAAX,kFAAW;QAG7B,2DAAwB;QAAxB,2FAAwB;QAQrB,2DAE/B;QAF+B,yJAE/B;QAEE,2DAEF;QAFE,wJAEF;QAE+B,2DAC/B;QAD+B,kKAC/B;QAMM,2DAAuB;QAAvB,wFAAuB;QAa1B,2DAAe;QAAf,6EAAe;QA4MA,4DAAkC;QAAlC,kGAAkC;QACrB,2DAA0B;QAA1B,mGAA0B;QACvC,2DAA+B;QAA/B,+FAA+B;QAE/B,2DAAmC;QAAnC,mGAAmC;QACtB,2DAA2B;QAA3B,sJAA2B;QAMrD,2DAA0B;QAA1B,2FAA0B;g5HDtQ3B;YACV,6DAAO,CAAC,cAAc,EAAE;gBACtB,2DAAK,CAAC,WAAW,EAAE,2DAAK,CAAC,EAAE,MAAM,EAAE,KAAK,EAAE,SAAS,EAAE,GAAG,EAAE,CAAC,CAAC;gBAC5D,2DAAK,CAAC,UAAU,EAAE,2DAAK,CAAC,EAAE,MAAM,EAAE,GAAG,EAAE,CAAC,CAAC;gBACzC,gEAAU,CAAC,wBAAwB,EAAE,6DAAO,CAAC,sCAAsC,CAAC,CAAC;aACtF,CAAC;SACH;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AE1C4C;AAEqC;AACT;AACT;AACb;AACc;AACN;AACJ;AACS;AACT;AACE;AACJ;AACE;AACQ;AACV;AACA;AACA;AACI;AACY;AACO;AACG;AAClB;AACF;AAC8B;;AAmCpF,MAAM,sBAAsB;;4FAAtB,sBAAsB;mHAAtB,sBAAsB;uHA1B/B,yDAAY;QACZ,6FAA6B;QAC7B,uDAAW;QACX,+DAAmB;QACnB,+DAAY;QACZ,6EAAmB;QACnB,uEAAmB;QACnB,mEAAc;QACd,6EAAkB;QAClB,oEAAc;QACd,sEAAe;QACf,kEAAa;QACb,oEAAc;QACd,4EAAkB;QAClB,kEAAa;QACb,kEAAa;QACb,kEAAa;QACb,sEAAe;QACf,kFAAqB;QACrB,yFAAwB;QACxB,mEAAiB;QACjB,yEAAuB;QACvB,0EAAiB;QACjB,wEAAgB;mIAGP,sBAAsB,mBA9B/B,oFAAyB;QACzB,oGAAwB,aAGxB,yDAAY;QACZ,6FAA6B;QAC7B,uDAAW;QACX,+DAAmB;QACnB,+DAAY;QACZ,6EAAmB;QACnB,uEAAmB;QACnB,mEAAc;QACd,6EAAkB;QAClB,oEAAc;QACd,sEAAe;QACf,kEAAa;QACb,oEAAc;QACd,4EAAkB;QAClB,kEAAa;QACb,kEAAa;QACb,kEAAa;QACb,sEAAe;QACf,kFAAqB;QACrB,yFAAwB;QACxB,mEAAiB;QACjB,yEAAuB;QACvB,0EAAiB;QACjB,wEAAgB","sources":["./src/app/reports/sales-order-report/sales-order-items/sales-order-items.component.ts","./src/app/reports/sales-order-report/sales-order-items/sales-order-items.component.html","./src/app/reports/sales-order-report/sales-order-report-routing.module.ts","./src/app/reports/sales-order-report/sales-order-report.component.ts","./src/app/reports/sales-order-report/sales-order-report.component.html","./src/app/reports/sales-order-report/sales-order-report.module.ts"],"sourcesContent":["import { Component, Input, OnChanges, OnInit, SimpleChanges } from '@angular/core';\r\nimport { SalesOrder } from '@core/domain-classes/sales-order';\r\nimport { SalesOrderItem } from '@core/domain-classes/sales-order-item';\r\nimport { TranslationService } from '@core/services/translation.service';\r\nimport { BaseComponent } from 'src/app/base.component';\r\nimport { SalesOrderService } from 'src/app/sales-order/sales-order.service';\r\n\r\n\r\n@Component({\r\n  selector: 'app-sales-order-items',\r\n  templateUrl: './sales-order-items.component.html',\r\n  styleUrls: ['./sales-order-items.component.scss']\r\n})\r\nexport class SalesOrderItemsComponent extends BaseComponent implements  OnInit, OnChanges {\r\n  @Input() salesOrder: SalesOrder;\r\n  salesOrderItems: SalesOrderItem[] = [];\r\n  isLoading = false;\r\n  displayedColumns: string[] = ['productName','source', 'unitName', 'unitPrice', 'quantity',  'totalDiscount', 'taxes', 'totalTax','totalAmount'];\r\n\r\n  constructor(private salesOrderService: SalesOrderService,public translationService:TranslationService) {\r\n    super(translationService);\r\n    this.getLangDir();\r\n   }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n  ngOnChanges(changes: SimpleChanges): void {\r\n    if (changes['salesOrder']) {\r\n      this.getSalesOrderItems();\r\n    }\r\n  }\r\n\r\n  getSalesOrderItems() {\r\n    this.isLoading = true;\r\n    this.salesOrderService.getSalesOrderItems(this.salesOrder.id)\r\n      .subscribe((data: SalesOrderItem[]) => {\r\n        this.isLoading = false;\r\n        this.salesOrderItems = data;\r\n      }, () => this.isLoading = false)\r\n  }\r\n\r\n}\r\n","<div class=\"page-header-main\">\r\n    <div class=\"row align-items-center\">\r\n        <div class=\"col-md-auto col-sm-auto\">\r\n            <div class=\"content-header\">\r\n                <h1>{{\"SALES_ORDER_ITEMS\" | translate}}</h1>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>\r\n<div class=\"loading-shade\" *ngIf=\"isLoading\">\r\n    <mat-spinner></mat-spinner>\r\n</div>\r\n\r\n<div class=\"table-responsive\">\r\n    <table [dir]=\"langDir\" mat-table [dataSource]=\"salesOrderItems\" class=\"table table-bordered table-hover\">\r\n        <ng-container matColumnDef=\"productName\">\r\n            <th mat-header-cell *matHeaderCellDef>{{\"PRODUCT_NAME\" | translate}}</th>\r\n            <td mat-cell *matCellDef=\"let element\">\r\n                {{element.productName}}\r\n            </td>\r\n        </ng-container>\r\n        <ng-container matColumnDef=\"source\">\r\n          <th mat-header-cell *matHeaderCellDef>{{\"SOURCE\" | translate}}</th>\r\n          <td mat-cell *matCellDef=\"let element\">\r\n            <ng-contaner *ngIf=\"element.status ==1\">\r\n                {{'SALES_ORDER_RETURN' | translate}}  \r\n            </ng-contaner>\r\n            <ng-contaner *ngIf=\"element.status != 1\">\r\n                {{'SALES_ORDER' | translate}}  \r\n            </ng-contaner>\r\n          </td>\r\n      </ng-container>\r\n        <ng-container matColumnDef=\"unitName\">\r\n            <th mat-header-cell *matHeaderCellDef>  {{\"UNIT\" | translate}} </th>\r\n            <td mat-cell *matCellDef=\"let element\">\r\n                {{element.unitName}}\r\n            </td>\r\n        </ng-container>\r\n        <ng-container matColumnDef=\"unitPrice\">\r\n            <th mat-header-cell *matHeaderCellDef> {{\"UNIT_PER_PRICE\" | translate}} </th>\r\n            <td mat-cell *matCellDef=\"let element\">\r\n                {{element.unitPrice  | customCurrency}}\r\n            </td>\r\n        </ng-container>\r\n        <ng-container matColumnDef=\"quantity\">\r\n            <th mat-header-cell *matHeaderCellDef> {{\"QUANTITY\" | translate}} </th>\r\n            <td mat-cell *matCellDef=\"let element\">\r\n              {{element.status===1 ? -1 * element.quantity :element.quantity }}\r\n            </td>\r\n        </ng-container>\r\n        <ng-container matColumnDef=\"totalDiscount\">\r\n            <th mat-header-cell *matHeaderCellDef> {{'TOTAL_DISCOUNT' | translate}} </th>\r\n            <td mat-cell *matCellDef=\"let element\">\r\n                {{element.discount | customCurrency}}({{element.discountPercentage}}%)\r\n            </td>\r\n        </ng-container>\r\n        <ng-container matColumnDef=\"taxes\">\r\n            <th mat-header-cell *matHeaderCellDef> {{\"TAX\" | translate}} </th>\r\n            <td mat-cell *matCellDef=\"let element\">\r\n                <span *ngFor=\"let tax of element.salesOrderItemTaxes;let last = last\">\r\n                    {{tax.taxName}}({{tax.taxPercentage}}%) <span *ngIf=\"!last\"> ,</span>\r\n                </span>\r\n            </td>\r\n        </ng-container>\r\n        <ng-container matColumnDef=\"totalTax\">\r\n            <th mat-header-cell *matHeaderCellDef> {{'TOTAL_TAX' | translate}} </th>\r\n            <td mat-cell *matCellDef=\"let element\">\r\n                {{element.taxValue | customCurrency}}\r\n            </td>\r\n        </ng-container>\r\n        <ng-container matColumnDef=\"totalAmount\">\r\n            <th mat-header-cell *matHeaderCellDef> {{'TOTAL' | translate}} </th>\r\n            <td mat-cell *matCellDef=\"let element\">\r\n                {{(element.unitPrice * element.quantity) - element.discount + element.taxValue | customCurrency}}\r\n            </td>\r\n        </ng-container>\r\n        <tr mat-header-row *matHeaderRowDef=\"displayedColumns;sticky: true\"></tr>\r\n        <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\" [class.bg-warning1]=\"row.status===1\"></tr>\r\n    </table>\r\n</div>\r\n","import { NgModule } from '@angular/core';\r\nimport { RouterModule, Routes } from '@angular/router';\r\nimport { AuthGuard } from '@core/security/auth.guard';\r\nimport { SalesOrderReportComponent } from './sales-order-report.component';\r\nconst routes: Routes = [\r\n  {\r\n    path:'',\r\n    component: SalesOrderReportComponent,\r\n    data: { claimType: 'REP_SO_REP' },\r\n    canActivate: [AuthGuard]\r\n  }\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class SalesOrderReportRoutingModule { }\r\n","import { animate, state, style, transition, trigger } from '@angular/animations';\r\nimport { HttpResponse } from '@angular/common/http';\r\nimport { ChangeDetectorRef, Component, OnInit, ViewChild } from '@angular/core';\r\nimport { UntypedFormBuilder, UntypedFormControl, UntypedFormGroup } from '@angular/forms';\r\nimport { MatDialog } from '@angular/material/dialog';\r\nimport { MatPaginator } from '@angular/material/paginator';\r\nimport { MatSort } from '@angular/material/sort';\r\nimport { Router } from '@angular/router';\r\nimport { CommonDialogService } from '@core/common-dialog/common-dialog.service';\r\nimport { Customer } from '@core/domain-classes/customer';\r\nimport { Product } from '@core/domain-classes/product';\r\nimport { ProductResourceParameter } from '@core/domain-classes/product-resource-parameter';\r\nimport { ResponseHeader } from '@core/domain-classes/response-header';\r\nimport { SalesOrder } from '@core/domain-classes/sales-order';\r\nimport { SalesOrderResourceParameter } from '@core/domain-classes/sales-order-resource-parameter';\r\nimport { ClonerService } from '@core/services/clone.service';\r\nimport { dateCompare } from '@core/services/date-range';\r\nimport { TranslationService } from '@core/services/translation.service';\r\nimport { ToastrService } from 'ngx-toastr';\r\nimport { forkJoin, merge, Observable, Subject } from 'rxjs';\r\nimport { debounceTime, distinctUntilChanged, switchMap, tap } from 'rxjs/operators';\r\nimport { BaseComponent } from 'src/app/base.component';\r\nimport { CustomerService } from 'src/app/customer/customer.service';\r\nimport { ProductService } from 'src/app/product/product.service';\r\nimport { AddSalesOrderPaymentComponent } from 'src/app/sales-order/add-sales-order-payment/add-sales-order-payment.component';\r\nimport { SalesOrderDataSource } from 'src/app/sales-order/sales-order-datasource';\r\nimport { SalesOrderService } from 'src/app/sales-order/sales-order.service';\r\nimport { ViewSalesOrderPaymentComponent } from 'src/app/sales-order/view-sales-order-payment/view-sales-order-payment.component';\r\nimport * as XLSX from 'xlsx';\r\nimport { PaymentStatusPipe } from '@shared/pipes/purchase-order-paymentStatus.pipe';\r\nimport { UTCToLocalTime } from '@shared/pipes/utc-to-localtime.pipe';\r\nimport { CustomCurrencyPipe } from '@shared/pipes/custome-currency.pipe';\r\n\r\n@Component({\r\n  selector: 'app-sales-order-report',\r\n  templateUrl: './sales-order-report.component.html',\r\n  styleUrls: ['./sales-order-report.component.scss'],\r\n  animations: [\r\n    trigger('detailExpand', [\r\n      state('collapsed', style({ height: '0px', minHeight: '0' })),\r\n      state('expanded', style({ height: '*' })),\r\n      transition('expanded <=> collapsed', animate('225ms cubic-bezier(0.4, 0.0, 0.2, 1)')),\r\n    ]),\r\n  ],\r\n  providers: [UTCToLocalTime, CustomCurrencyPipe, PaymentStatusPipe]\r\n})\r\nexport class SalesOrderReportComponent extends BaseComponent implements OnInit {\r\n  dataSource: SalesOrderDataSource;\r\n  salesOrders: SalesOrder[] = [];\r\n  displayedColumns: string[] = ['action', 'soCreatedDate', 'orderNumber', 'deliveryDate', 'customerName', 'totalDiscount', 'totalTax', 'totalAmount', 'totalPaidAmount', 'paymentStatus', 'status'];\r\n  filterColumns: string[] = ['action-search', 'soCreatedDate-search', 'orderNumber-search', 'deliverDate-search', 'customer-search', 'totalAmount-search', 'totalDiscount-search', 'totalTax-search', 'totalPaidAmount-search', 'paymentStatus-search', 'status-search'];\r\n  footerToDisplayed: string[] = ['footer'];\r\n  isLoadingResults = true;\r\n  salesOrderResource: SalesOrderResourceParameter;\r\n  loading$: Observable<boolean>;\r\n  @ViewChild(MatPaginator) paginator: MatPaginator;\r\n  @ViewChild(MatSort) sort: MatSort;\r\n  _customerFilter: string;\r\n  _orderNumberFilter: string;\r\n  customerNameControl: UntypedFormControl = new UntypedFormControl();\r\n  customerList$: Observable<Customer[]>;\r\n  expandedElement: SalesOrder | null;\r\n  public filterObservable$: Subject<string> = new Subject<string>();\r\n  salesOrderForInvoice: SalesOrder;\r\n  searchForm: UntypedFormGroup;\r\n  products: Product[] = [];\r\n  productResource: ProductResourceParameter;\r\n  currentDate: Date = new Date();\r\n\r\n  public get CustomerFilter(): string {\r\n    return this._customerFilter;\r\n  }\r\n\r\n  public set CustomerFilter(v: string) {\r\n    this._customerFilter = v;\r\n    const customerFilter = `customerName:${v}`;\r\n    this.filterObservable$.next(customerFilter);\r\n  }\r\n\r\n  public get OrderNumberFilter(): string {\r\n    return this._orderNumberFilter;\r\n  }\r\n\r\n  public set OrderNumberFilter(v: string) {\r\n    this._orderNumberFilter = v;\r\n    const orderNumberFilter = `orderNumber:${v}`;\r\n    this.filterObservable$.next(orderNumberFilter);\r\n  }\r\n\r\n  constructor(\r\n    private salesOrderService: SalesOrderService,\r\n    private customerService: CustomerService,\r\n    private cd: ChangeDetectorRef,\r\n    private commonDialogService: CommonDialogService,\r\n    private toastrService: ToastrService,\r\n    private router: Router,\r\n    public translationService: TranslationService,\r\n    private dialog: MatDialog,\r\n    private clonerService: ClonerService,\r\n    private fb: UntypedFormBuilder,\r\n    private productService: ProductService,\r\n    private utcToLocalTime: UTCToLocalTime,\r\n    private customCurrencyPipe: CustomCurrencyPipe,\r\n    private paymentStatusPipe: PaymentStatusPipe\r\n  ) {\r\n    super(translationService);\r\n    this.getLangDir();\r\n    this.productResource = new ProductResourceParameter();\r\n    this.salesOrderResource = new SalesOrderResourceParameter();\r\n    this.salesOrderResource.pageSize = 50;\r\n    this.salesOrderResource.orderBy = 'soCreatedDate asc'\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.customerNameControlOnChange();\r\n    this.createSearchFormGroup();\r\n    this.getProductByNameValue();\r\n    this.getProducts();\r\n    this.dataSource = new SalesOrderDataSource(this.salesOrderService);\r\n    this.dataSource.loadData(this.salesOrderResource);\r\n    this.getResourceParameter();\r\n    this.sub$.sink = this.filterObservable$\r\n      .pipe(\r\n        debounceTime(1000),\r\n        distinctUntilChanged())\r\n      .subscribe((c) => {\r\n        this.salesOrderResource.skip = 0;\r\n        this.paginator.pageIndex = 0;\r\n        const strArray: Array<string> = c.split(':');\r\n        if (strArray[0] === 'customerName') {\r\n          this.salesOrderResource.customerName = strArray[1];\r\n        } else if (strArray[0] === 'orderNumber') {\r\n          this.salesOrderResource.orderNumber = strArray[1];\r\n        }\r\n        this.dataSource.loadData(this.salesOrderResource);\r\n      });\r\n  }\r\n\r\n  addPayment(salesOrder: SalesOrder): void {\r\n    const dialogRef = this.dialog.open(AddSalesOrderPaymentComponent, {\r\n      width: '100vh',\r\n      direction: this.langDir,\r\n      data: Object.assign({}, salesOrder)\r\n    });\r\n    dialogRef.afterClosed().subscribe((isAdded: boolean) => {\r\n      if (isAdded) {\r\n        this.dataSource.loadData(this.salesOrderResource);\r\n      }\r\n    })\r\n  }\r\n\r\n  createSearchFormGroup() {\r\n    this.searchForm = this.fb.group({\r\n      fromDate: [''],\r\n      toDate: [''],\r\n      filterProductValue: [''],\r\n      productId: ['']\r\n    }, {\r\n      validators: dateCompare()\r\n    });\r\n  }\r\n\r\n  onSearch() {\r\n    if (this.searchForm.valid) {\r\n      this.salesOrderResource.fromDate = this.searchForm.get('fromDate').value;\r\n      this.salesOrderResource.toDate = this.searchForm.get('toDate').value;\r\n      this.salesOrderResource.productId = this.searchForm.get('productId').value;\r\n      this.dataSource.loadData(this.salesOrderResource);\r\n    }\r\n  }\r\n\r\n\r\n  onClear() {\r\n    this.searchForm.reset();\r\n    this.salesOrderResource.fromDate = this.searchForm.get('fromDate').value;\r\n    this.salesOrderResource.toDate = this.searchForm.get('toDate').value;\r\n    this.salesOrderResource.productId = this.searchForm.get('productId').value;\r\n    this.dataSource.loadData(this.salesOrderResource);\r\n  }\r\n\r\n  getProductByNameValue() {\r\n    this.sub$.sink = this.searchForm.get('filterProductValue').valueChanges\r\n      .pipe(\r\n        debounceTime(500),\r\n        distinctUntilChanged(),\r\n        switchMap(c => {\r\n          this.productResource.name = c;\r\n          return this.productService.getProducts(this.productResource);\r\n        })\r\n      ).subscribe((resp: HttpResponse<Product[]>) => {\r\n        if (resp && resp.headers) {\r\n          this.products = [...resp.body];\r\n        }\r\n      }, (err) => {\r\n\r\n      });\r\n  }\r\n\r\n  getProducts() {\r\n    this.productResource.name = '';\r\n    return this.productService.getProducts(this.productResource)\r\n      .subscribe((resp: HttpResponse<Product[]>) => {\r\n        if (resp && resp.headers) {\r\n          this.products = [...resp.body];\r\n        }\r\n      }, (err) => {\r\n\r\n      });;\r\n  }\r\n\r\n\r\n  onDetailSalesOrder(salesOrder: SalesOrder) {\r\n    this.router.navigate(['/sales-order', salesOrder.id]);\r\n  }\r\n\r\n  customerNameControlOnChange() {\r\n    this.customerList$ = this.customerNameControl.valueChanges.pipe(\r\n      debounceTime(1000),\r\n      distinctUntilChanged(),\r\n      switchMap(c => {\r\n        return this.customerService.getCustomersForDropDown('CustomerName', c);\r\n      })\r\n    );\r\n  }\r\n\r\n  ngAfterViewInit() {\r\n    this.sort.sortChange.subscribe(() => this.paginator.pageIndex = 0);\r\n\r\n    this.sub$.sink = merge(this.sort.sortChange, this.paginator.page)\r\n      .pipe(\r\n        tap((c: any) => {\r\n          this.salesOrderResource.skip = this.paginator.pageIndex * this.paginator.pageSize;\r\n          this.salesOrderResource.pageSize = this.paginator.pageSize;\r\n          this.salesOrderResource.orderBy = this.sort.active + ' ' + this.sort.direction;\r\n          this.dataSource.loadData(this.salesOrderResource);\r\n        })\r\n      )\r\n      .subscribe();\r\n  }\r\n\r\n  getResourceParameter() {\r\n    this.sub$.sink = this.dataSource.responseHeaderSubject$\r\n      .subscribe((c: ResponseHeader) => {\r\n        if (c) {\r\n          this.salesOrderResource.pageSize = c.pageSize;\r\n          this.salesOrderResource.skip = c.skip;\r\n          this.salesOrderResource.totalCount = c.totalCount;\r\n        }\r\n      });\r\n  }\r\n\r\n  toggleRow(element: SalesOrder) {\r\n    this.expandedElement = this.expandedElement === element ? null : element;\r\n    this.cd.detectChanges();\r\n  }\r\n\r\n\r\n  deleteSalesOrder(salesOrder: SalesOrder) {\r\n    this.commonDialogService.deleteConformationDialog(this.translationService.getValue('ARE_YOU_SURE_YOU_WANT_TO_DELETE'))\r\n      .subscribe((isYes) => {\r\n        if (isYes) {\r\n          this.salesOrderService.deleteSalesOrder(salesOrder.id).subscribe(() => {\r\n            this.toastrService.success(this.translationService.getValue('SALES_ORDER_DELETED_SUCCESSFULLY'))\r\n            this.dataSource.loadData(this.salesOrderResource);\r\n          });\r\n        }\r\n      });\r\n  }\r\n\r\n\r\n  viewPayment(salesOrder: SalesOrder) {\r\n    const dialogRef = this.dialog.open(ViewSalesOrderPaymentComponent, {\r\n      data: Object.assign({}, salesOrder), direction: this.langDir,\r\n    });\r\n    dialogRef.afterClosed().subscribe((isAdded: boolean) => {\r\n      if (isAdded) {\r\n        this.dataSource.loadData(this.salesOrderResource);\r\n      }\r\n    })\r\n  }\r\n\r\n  onSaleOrderReturn(saleOrder: SalesOrder) {\r\n    this.router.navigate(['sales-order-return', saleOrder.id]);\r\n  }\r\n\r\n\r\n  generateInvoice(so: SalesOrder) {\r\n    let soForInvoice = this.clonerService.deepClone<SalesOrder>(so);\r\n    const getCustomerRequest = this.customerService.getCustomer(so.customerId);\r\n    const getSalesOrderItems = this.salesOrderService.getSalesOrderItems(so.id);\r\n    forkJoin({ getCustomerRequest, getSalesOrderItems }).subscribe(response => {\r\n      soForInvoice.customer = response.getCustomerRequest;\r\n      soForInvoice.salesOrderItems = response.getSalesOrderItems;\r\n      this.salesOrderForInvoice = soForInvoice;\r\n    });\r\n  }\r\n\r\n  onDownloadReport() {\r\n    this.salesOrderService.getAllSalesOrderExcel(this.salesOrderResource)\r\n      .subscribe((c: HttpResponse<SalesOrder[]>) => {\r\n        this.salesOrders = [...c.body];\r\n        let heading = [[\r\n          this.translationService.getValue('CREATED_DATE'),\r\n          this.translationService.getValue('ORDER_NUMBER'),\r\n          this.translationService.getValue('DELIVERY_DATE'),\r\n          this.translationService.getValue('CUSTOMER_NAME'),\r\n          this.translationService.getValue('TOTAL_DISCOUNT'),\r\n          this.translationService.getValue('TOTAL_TAX'),\r\n          this.translationService.getValue('TOTAL_AMOUNT'),\r\n          this.translationService.getValue('TOTAL_PAID_AMOUNT'),\r\n          this.translationService.getValue('PAYMENT_STATUS'),\r\n          this.translationService.getValue('IS_RETURN')\r\n        ]];\r\n\r\n        let salesOrderReport = [];\r\n        this.salesOrders.forEach((salesOrder: SalesOrder) => {\r\n          salesOrderReport.push({\r\n            'CREATED_DATE': this.utcToLocalTime.transform(salesOrder.soCreatedDate, 'shortDate'),\r\n            'ORDER_NUMBER': salesOrder.orderNumber,\r\n            'DELIVERY_DATE': this.utcToLocalTime.transform(salesOrder.deliveryDate, 'shortDate'),\r\n            'CUSTOMER_NAME': salesOrder.customerName,\r\n            'TOTAL_DISCOUNT': this.customCurrencyPipe.transform(salesOrder.totalDiscount),\r\n            'TOTAL_TAX': this.customCurrencyPipe.transform(salesOrder.totalTax),\r\n            'TOTAL_AMOUNT': this.customCurrencyPipe.transform(salesOrder.totalAmount),\r\n            'TOTAL_PAID_AMOUNT': this.customCurrencyPipe.transform(salesOrder.totalPaidAmount),\r\n            'PAYMENT_STATUS': this.paymentStatusPipe.transform(salesOrder.paymentStatus),\r\n            'IS_RETURN': salesOrder.status == 1 ? 'True' : 'False'\r\n          });\r\n        });\r\n\r\n        let workBook = XLSX.utils.book_new();\r\n        XLSX.utils.sheet_add_aoa(workBook, heading);\r\n        let workSheet = XLSX.utils.sheet_add_json(workBook, salesOrderReport, { origin: \"A2\", skipHeader: true });\r\n        XLSX.utils.book_append_sheet(workBook, workSheet, this.translationService.getValue('SALES_ORDER_REPORT'));\r\n        XLSX.writeFile(workBook, this.translationService.getValue('SALES_ORDER_REPORT') + \".xlsx\");\r\n      });\r\n  }\r\n\r\n}\r\n","<div class=\"page-header-main\">\r\n  <div class=\"row align-items-center justify-content-between\">\r\n    <div class=\"col-md-auto col-sm-auto\">\r\n      <div class=\"content-header\">\r\n        <h1>{{'SALES_ORDER_REPORT' | translate}}</h1>\r\n      </div>\r\n    </div>\r\n    <div class=\"col-md-auto col-sm-auto\">\r\n      <button class=\"btn blue-btn btn-sm m-right-10\" *hasClaim=\"'sales_order_add_sales_order'\"\r\n        [routerLink]=\"['/sales-order/add']\">\r\n        <i class=\"fas fa-plus\"></i> {{'ADD_SALES_ORDER' | translate}}\r\n      </button>\r\n    </div>\r\n  </div>\r\n</div>\r\n<div class=\"loading-shade\" *ngIf=\"dataSource.loading$ | async\">\r\n  <mat-spinner></mat-spinner>\r\n</div>\r\n<div class=\"row\">\r\n  <div class=\"col-sm-12 mb-3\">\r\n    <form [formGroup]=\"searchForm\">\r\n      <div class=\"row\">\r\n        <div class=\"col-md-2\">\r\n          <div class=\"form-group\">\r\n            <label for=\"fromDate\">{{'FROM_DATE' | translate}} </label>\r\n            <input class=\"form-control\" id=\"fromDate\" [max]=\"currentDate\" formControlName=\"fromDate\"\r\n              [owlDateTimeTrigger]=\"fromDate\" [owlDateTime]=\"fromDate\" placeholder=\"{{'FROM_DATE' | translate}}\">\r\n            <owl-date-time [pickerType]=\"'calendar'\" #fromDate></owl-date-time>\r\n          </div>\r\n        </div>\r\n        <div class=\"col-md-2\">\r\n          <div class=\"form-group\">\r\n            <label for=\"toDate\">{{'TO_DATE' | translate}} </label>\r\n            <input class=\"form-control\" id=\"toDate\" [max]=\"currentDate\" formControlName=\"toDate\"\r\n              [owlDateTimeTrigger]=\"toDate\" [owlDateTime]=\"toDate\" placeholder=\"{{'TO_DATE' | translate}}\">\r\n            <owl-date-time [pickerType]=\"'calendar'\" #toDate></owl-date-time>\r\n          </div>\r\n        </div>\r\n        <div class=\"col-md-3\">\r\n          <div class=\"form-group\">\r\n            <label>{{'SELECT_PRODUCT' | translate}} </label>\r\n            <mat-select [dir]=\"langDir\" formControlName=\"productId\" placeholder=\"{{'SELECT_PRODUCT' | translate}}\" class=\"form-control\">\r\n              <input class=\"form-control w-100\" formControlName=\"filterProductValue\" focused=\"'true'\" type=\"text\"\r\n                autocomplete=\"off\" placeholder=\"{{'SEARCH_OTHER_PRODUCTS' | translate}}\">\r\n              <mat-divider></mat-divider>\r\n              <mat-option [dir]=\"langDir\" *ngFor=\"let a of products\" [value]=\"a.id\">\r\n                {{a.name}}\r\n              </mat-option>\r\n              <mat-option [value]=\"\" *ngIf=\"products.length==0\">\r\n                {{'NO_RECORDS' | translate}}\r\n              </mat-option>\r\n            </mat-select>\r\n          </div>\r\n        </div>\r\n        <div class=\"col-md-5 report-tool-bar\">\r\n          <button type=\"submit\" (click)=\"onSearch()\" class=\"btn btn-primary btn-sm m-right-10\"><i\r\n              class=\"fas fa-search\"></i> {{'SEARCH' |\r\n            translate}}\r\n          </button>\r\n          <button type=\"submit\" (click)=\"onClear()\" class=\"btn btn-danger btn-sm m-right-10\"><i class=\"fas fa-eraser\"></i>\r\n            {{'CLEAR' |\r\n            translate}}\r\n          </button>\r\n          <button type=\"submit\" (click)=\"onDownloadReport()\" class=\"btn btn-warning btn-sm m-right-10\"><i\r\n            class=\"fas fa-download\"></i> {{'DOWNLOAD_REPORT' | translate}}\r\n          </button>\r\n        </div>\r\n\r\n      </div>\r\n      <div class=\"row\">\r\n        <div class=\"col-sm-12\">\r\n          <div *ngIf=\"searchForm.errors\">\r\n            <div class=\"text-danger\" *ngIf=\"searchForm.errors?.dateRange\">\r\n              {{'DATE_RANGE_VALIDATION_MSG' | translate}}\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </form>\r\n  </div>\r\n</div>\r\n<div class=\"row\">\r\n  <div class=\"col-sm-12\">\r\n    <div class=\"table-responsive\">\r\n      <table [dir]=\"langDir\" mat-table [dataSource]=\"dataSource\" multiTemplateDataRows\r\n        class=\"table table-bordered table-hover grid-height\" matSort matSortActive=\"soCreatedDate\">\r\n        <ng-container matColumnDef=\"action\">\r\n          <th class=\"table-column-150\" mat-header-cell *matHeaderCellDef>\r\n          </th>\r\n          <td class=\"table-column-150\" mat-cell *matCellDef=\"let so\">\r\n            <button mat-icon-button (click)=\"toggleRow(so)\">\r\n              <mat-icon *ngIf=\"so != expandedElement\">chevron_right</mat-icon>\r\n              <mat-icon *ngIf=\"so == expandedElement\">expand_more</mat-icon>\r\n            </button>\r\n\r\n            <button class=\"ml-4\"\r\n              *hasClaim=\"['sales_order_view_sales_order_detail','sales_order_delete_sales_order','sales_order_edit_sales_order','sales_order_AddPayment_sales_order','sales_order_ViewPayment_sales_order']\"\r\n              mat-icon-button [matMenuTriggerFor]=\"menu\" aria-label=\"Action\">\r\n              <mat-icon>more_vert</mat-icon>\r\n            </button>\r\n            <mat-menu #menu=\"matMenu\" [dir]=\"langDir\">\r\n              <button *hasClaim=\"'sales_order_edit_sales_order'\" mat-menu-item\r\n                [routerLink]=\"['/sales-order/detail', so.id]\">\r\n                <mat-icon>info</mat-icon>\r\n                <span>{{'DETAIL' | translate}}</span>\r\n              </button>\r\n              <ng-container *ngIf=\"so.status == 0\">\r\n                <button *hasClaim=\"'sales_order_delete_sales_order'\" mat-menu-item (click)=\"deleteSalesOrder(so)\">\r\n                  <mat-icon>delete</mat-icon>\r\n                  <span>{{'DELETE' | translate}}</span>\r\n                </button>\r\n              </ng-container>\r\n\r\n              <ng-container>\r\n                <button *hasClaim=\"'sale_order_return'\" mat-menu-item (click)=\"onSaleOrderReturn(so)\">\r\n                  <mat-icon>assignment_return</mat-icon>\r\n                  <span>{{'SALES_ORDER_RETURN' | translate}}</span>\r\n                </button>\r\n              </ng-container>\r\n\r\n              <ng-contaner *ngIf=\"so.paymentStatus != 0\">\r\n                <button *hasClaim=\"'sales_order_AddPayment_sales_order'\" mat-menu-item (click)=\"addPayment(so)\">\r\n                  <mat-icon>payment</mat-icon>\r\n                  <span>{{'ADD_PAYMENT' | translate}}</span>\r\n                </button>\r\n              </ng-contaner>\r\n              <button *hasClaim=\"'sales_order_ViewPayment_sales_order'\" mat-menu-item (click)=\"viewPayment(so)\">\r\n                <mat-icon>view_carousel</mat-icon>\r\n                <span>{{'VIEW_PAYMENT' | translate}}</span>\r\n              </button>\r\n              <button mat-menu-item (click)=\"generateInvoice(so)\">\r\n                <mat-icon>receipt</mat-icon>\r\n                <span>{{'GENERATE_INVOICE' | translate}}</span>\r\n              </button>\r\n            </mat-menu>\r\n          </td>\r\n        </ng-container>\r\n        <ng-container matColumnDef=\"soCreatedDate\">\r\n          <th class=\"table-column-100\" mat-header-cell *matHeaderCellDef mat-sort-header> {{'CREATED_DATE' | translate}}\r\n          </th>\r\n          <td class=\"table-column-100\" mat-cell *matCellDef=\"let so\"> {{so.soCreatedDate | utcToLocalTime:'shortDate'\r\n            }} </td>\r\n        </ng-container>\r\n        <ng-container matColumnDef=\"orderNumber\">\r\n          <th class=\"table-column-150\" mat-header-cell *matHeaderCellDef mat-sort-header> {{'ORDER_NUMBER' | translate}}\r\n          </th>\r\n          <td class=\"table-column-150\" mat-cell *matCellDef=\"let so\">\r\n            <a [routerLink]=\"['/sales-order/detail',so.id]\">{{so.orderNumber}} </a>\r\n          </td>\r\n        </ng-container>\r\n        <ng-container matColumnDef=\"deliveryDate\">\r\n          <th class=\"table-column-150\" mat-header-cell *matHeaderCellDef mat-sort-header> {{'DELIVERY_DATE' |\r\n            translate}}\r\n          </th>\r\n          <td class=\"table-column-100\" mat-cell *matCellDef=\"let so\"> {{so.deliveryDate | utcToLocalTime:'shortDate'\r\n            }} </td>\r\n        </ng-container>\r\n        <ng-container matColumnDef=\"customerName\">\r\n          <th class=\"table-column-300\" mat-header-cell mat-sort-header *matHeaderCellDef> {{'CUSTOMER_NAME' | translate}} </th>\r\n          <td class=\"table-column-300\" mat-cell *matCellDef=\"let so\">\r\n            <a [routerLink]=\"['/customer',so.customerId]\"> {{so.customerName}} </a>\r\n          </td>\r\n        </ng-container>\r\n        <ng-container matColumnDef=\"totalDiscount\">\r\n          <th mat-header-cell *matHeaderCellDef mat-sort-header> {{'TOTAL_DISCOUNT' | translate}} </th>\r\n          <td mat-cell *matCellDef=\"let so\">\r\n            {{so.totalDiscount | customCurrency}}\r\n          </td>\r\n        </ng-container>\r\n        <ng-container matColumnDef=\"totalTax\">\r\n          <th mat-header-cell *matHeaderCellDef mat-sort-header> {{'TOTAL_TAX' | translate}} </th>\r\n          <td mat-cell *matCellDef=\"let so\">\r\n            {{so.totalTax | customCurrency}}\r\n          </td>\r\n        </ng-container>\r\n        <ng-container matColumnDef=\"totalAmount\">\r\n          <th mat-header-cell *matHeaderCellDef mat-sort-header> {{'TOTAL_AMOUNT' | translate}} </th>\r\n          <td mat-cell *matCellDef=\"let so\">\r\n            {{so.totalAmount | customCurrency}}\r\n          </td>\r\n        </ng-container>\r\n        <ng-container matColumnDef=\"totalPaidAmount\">\r\n          <th mat-header-cell *matHeaderCellDef mat-sort-header>  {{'TOTAL_PAID_AMOUNT' | translate}} </th>\r\n          <td mat-cell *matCellDef=\"let so\">\r\n            {{so.totalPaidAmount | customCurrency }}\r\n          </td>\r\n        </ng-container>\r\n        <ng-container matColumnDef=\"paymentStatus\">\r\n          <th class=\"table-column-150\" mat-header-cell *matHeaderCellDef mat-sort-header> {{'PAYMENT_STATUS' | translate}} </th>\r\n          <td class=\"table-column-150\" mat-cell *matCellDef=\"let so\" style=\"text-align: center;\">\r\n            <span class=\"badge-pill\" [ngClass]=\"{'badge-success': so.paymentStatus ==  0,\r\n              'badge-danger' : so.paymentStatus == 1,\r\n              'badge-warning' : so.paymentStatus == 2}\">{{so.paymentStatus | paymentStatus }}</span>\r\n          </td>\r\n        </ng-container>\r\n        <ng-container matColumnDef=\"status\">\r\n          <th mat-header-cell *matHeaderCellDef mat-sort-header> {{'IS_RETURN' | translate}} </th>\r\n          <td mat-cell *matCellDef=\"let so\">\r\n            <ng-contaner *ngIf=\"so.status ==1\">\r\n              {{'YES' | translate}}\r\n            </ng-contaner>\r\n            <ng-contaner *ngIf=\"so.status != 1\">\r\n              {{'NO' | translate}}\r\n            </ng-contaner>\r\n          </td>\r\n        </ng-container>\r\n        <ng-container matColumnDef=\"action-search\">\r\n          <th mat-header-cell *matHeaderCellDef> </th>\r\n        </ng-container>\r\n        <ng-container matColumnDef=\"soCreatedDate-search\">\r\n          <th mat-header-cell *matHeaderCellDef>\r\n          </th>\r\n        </ng-container>\r\n        <ng-container matColumnDef=\"orderNumber-search\">\r\n          <th mat-header-cell *matHeaderCellDef>\r\n            <input placeholder=\"{{'ORDER_NO' | translate}}\" type=\"text\" class=\"form-control w-90\"\r\n              [(ngModel)]=\"OrderNumberFilter\">\r\n          </th>\r\n        </ng-container>\r\n        <ng-container matColumnDef=\"deliverDate-search\">\r\n          <th mat-header-cell *matHeaderCellDef>\r\n          </th>\r\n        </ng-container>\r\n        <ng-container matColumnDef=\"customer-search\">\r\n          <th mat-header-cell *matHeaderCellDef>\r\n            <input placeholder=\"{{'CUSTOMER' | translate}}\" type=\"text\" class=\"form-control w-90\"\r\n              [formControl]=\"customerNameControl\" [matAutocomplete]=\"autoCustomer\">\r\n            <mat-autocomplete [autoActiveFirstOption]=\"true\" [dir]=\"langDir\" (optionSelected)='CustomerFilter=$event.option.value'\r\n              #autoCustomer=\"matAutocomplete\">\r\n              <mat-option value=\"\">{{'NONE' | translate}}</mat-option>\r\n              <mat-option *ngFor=\"let customer of customerList$ | async\" [dir]=\"langDir\" [value]=\"customer.customerName\">\r\n                {{customer.customerName}}\r\n              </mat-option>\r\n            </mat-autocomplete>\r\n          </th>\r\n        </ng-container>\r\n        <ng-container matColumnDef=\"totalAmount-search\">\r\n          <th mat-header-cell *matHeaderCellDef>\r\n          </th>\r\n        </ng-container>\r\n        <ng-container matColumnDef=\"totalDiscount-search\">\r\n          <th mat-header-cell *matHeaderCellDef>\r\n          </th>\r\n        </ng-container>\r\n        <ng-container matColumnDef=\"totalTax-search\">\r\n          <th mat-header-cell *matHeaderCellDef>\r\n          </th>\r\n        </ng-container>\r\n        <ng-container matColumnDef=\"totalPaidAmount-search\">\r\n          <th mat-header-cell *matHeaderCellDef>\r\n          </th>\r\n        </ng-container>\r\n        <ng-container matColumnDef=\"paymentStatus-search\">\r\n          <th mat-header-cell *matHeaderCellDef>\r\n          </th>\r\n        </ng-container>\r\n        <ng-container matColumnDef=\"status-search\">\r\n          <th mat-header-cell *matHeaderCellDef>\r\n          </th>\r\n        </ng-container>\r\n        <ng-container matColumnDef=\"footer\">\r\n          <td mat-footer-cell colspan=\"12\" *matFooterCellDef>\r\n            <mat-paginator [dir]=\"langDir\" [length]=\"salesOrderResource.totalCount\" [pageSize]=\"salesOrderResource.pageSize\"\r\n              [pageSizeOptions]=\"[10, 20, 30]\">\r\n            </mat-paginator>\r\n          </td>\r\n        </ng-container>\r\n\r\n        <ng-container matColumnDef=\"expandedDetail\">\r\n          <td mat-cell *matCellDef=\"let soObject\" [attr.colspan]=\"displayedColumns.length\">\r\n            <ng-container *ngIf=\"soObject == expandedElement\">\r\n              <div class=\"example-element-detail\"\r\n                [@detailExpand]=\"soObject == expandedElement ? 'expanded' : 'collapsed'\">\r\n                <div class=\"inner-table mat-elevation-z8\">\r\n                  <app-sales-order-items [salesOrder]=\"soObject\">\r\n                  </app-sales-order-items>\r\n                </div>\r\n              </div>\r\n            </ng-container>\r\n          </td>\r\n        </ng-container>\r\n        <tr *matNoDataRow>\r\n          <td colspan=\"9\">\r\n              <span class=\"p-4 mt-4\">\r\n                  <b> {{'NO_DATA_FOUND' | translate}}</b>\r\n              </span>\r\n          </td>\r\n      </tr>\r\n        <tr mat-header-row *matHeaderRowDef=\"displayedColumns;sticky: true\"></tr>\r\n        <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\" [class.bg-warning1]=\"row.status===1\"></tr>\r\n        <tr mat-header-row *matHeaderRowDef=\"filterColumns;sticky: true\">\r\n\r\n        <tr mat-footer-row *matFooterRowDef=\"footerToDisplayed;sticky: true\"></tr>\r\n        <tr mat-row *matRowDef=\"let row; columns: ['expandedDetail']\" class=\"example-detail-row\"></tr>\r\n      </table>\r\n    </div>\r\n  </div>\r\n</div>\r\n\r\n<ng-container *ngIf=\"salesOrderForInvoice\">\r\n  <app-sales-order-invoice [salesOrder]=\"salesOrderForInvoice\"></app-sales-order-invoice>\r\n</ng-container>\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\n\r\nimport { SalesOrderReportRoutingModule } from './sales-order-report-routing.module';\r\nimport { SalesOrderReportComponent } from './sales-order-report.component';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport { SharedModule } from '@shared/shared.module';\r\nimport { MatDatepickerModule } from '@angular/material/datepicker';\r\nimport { MatNativeDateModule } from '@angular/material/core';\r\nimport { MatInputModule } from '@angular/material/input';\r\nimport { MatFormFieldModule } from '@angular/material/form-field';\r\nimport { MatRadioModule } from '@angular/material/radio';\r\nimport { MatSelectModule } from '@angular/material/select';\r\nimport { MatCardModule } from '@angular/material/card';\r\nimport { MatTableModule } from '@angular/material/table';\r\nimport { MatPaginatorModule } from '@angular/material/paginator';\r\nimport { MatSortModule } from '@angular/material/sort';\r\nimport { MatMenuModule } from '@angular/material/menu';\r\nimport { MatIconModule } from '@angular/material/icon';\r\nimport { MatButtonModule } from '@angular/material/button';\r\nimport { MatAutocompleteModule } from '@angular/material/autocomplete';\r\nimport { MatProgressSpinnerModule } from '@angular/material/progress-spinner';\r\nimport { OwlDateTimeModule, OwlNativeDateTimeModule } from 'ng-pick-datetime-ex';\r\nimport { MatCheckboxModule } from '@angular/material/checkbox';\r\nimport { MatDividerModule } from '@angular/material/divider';\r\nimport { SalesOrderItemsComponent } from './sales-order-items/sales-order-items.component';\r\n\r\n\r\n@NgModule({\r\n  declarations: [\r\n    SalesOrderReportComponent,\r\n    SalesOrderItemsComponent\r\n  ],\r\n  imports: [\r\n    CommonModule,\r\n    SalesOrderReportRoutingModule,\r\n    FormsModule,\r\n    ReactiveFormsModule,\r\n    SharedModule,\r\n    MatDatepickerModule,\r\n    MatNativeDateModule,\r\n    MatInputModule,\r\n    MatFormFieldModule,\r\n    MatRadioModule,\r\n    MatSelectModule,\r\n    MatCardModule,\r\n    MatTableModule,\r\n    MatPaginatorModule,\r\n    MatSortModule,\r\n    MatMenuModule,\r\n    MatIconModule,\r\n    MatButtonModule,\r\n    MatAutocompleteModule,\r\n    MatProgressSpinnerModule,\r\n    OwlDateTimeModule,\r\n    OwlNativeDateTimeModule,\r\n    MatCheckboxModule,\r\n    MatDividerModule\r\n  ]\r\n})\r\nexport class SalesOrderReportModule { }\r\n"],"names":[],"sourceRoot":"webpack:///","x_google_ignoreList":[]}