{"version":3,"file":"src_app_pos_pos_module_ts.js","mappings":"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","sources":["./src/app/core/domain-classes/product-resource-parameter.ts","./src/app/core/domain-classes/sales-order-status.ts","./src/app/customer/customer.service.ts","./src/app/pos/pos-routing.module.ts","./src/app/pos/pos.component.ts","./src/app/pos/pos.component.html","./src/app/pos/pos.module.ts","./src/app/product/product.service.ts","./src/app/sales-order/sales-order.service.ts","./node_modules/ngx-barcodeput/fesm2015/ngx-barcodeput.js"],"sourcesContent":["import { ResourceParameter } from \"./resource-parameter\";\r\nexport class ProductResourceParameter extends ResourceParameter {\r\n    name: string = '';\r\n    unitId?: string = '';\r\n    barcode?:string ='';\r\n    categoryId?: string = '';\r\n    brandId?: string = '';\r\n    id?: string='';\r\n}\r\n","export enum SalesOrderStatusEnum {\r\n  Not_Return = 0,\r\n  Return = 1,\r\n  All = 2\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { Observable, of } from 'rxjs';\r\nimport { HttpResponse, HttpClient, HttpParams } from '@angular/common/http';\r\nimport { Guid } from 'guid-typescript';\r\nimport { CustomerResourceParameter } from '@core/domain-classes/customer-resource-parameter';\r\nimport { Customer } from '@core/domain-classes/customer';\r\nimport { CustomerList } from '@core/domain-classes/customer-list';\r\nimport { SupplierPayment } from '@core/domain-classes/supplier-payment';\r\nimport { CustomerPayment } from '@core/domain-classes/customer-payment';\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class CustomerService {\r\n  constructor(private http: HttpClient) {}\r\n\r\n  getCustomers(\r\n    resourceParams: CustomerResourceParameter\r\n  ): Observable<HttpResponse<Customer[]>> {\r\n    const url = 'customer';\r\n    const customParams = new HttpParams()\r\n      .set('fields', resourceParams.fields)\r\n      .set('orderBy', resourceParams.orderBy)\r\n      .set('pageSize', resourceParams.pageSize.toString())\r\n      .set('skip', resourceParams.skip.toString())\r\n      .set('searchQuery', resourceParams.searchQuery)\r\n      .set('customerName', resourceParams.customerName)\r\n      .set('mobileNo', resourceParams.mobileNo)\r\n      .set('phoneNo', resourceParams.phoneNo)\r\n      .set('email', resourceParams.email)\r\n      .set('contactPerson', resourceParams.contactPerson)\r\n      .set('website', resourceParams.website);\r\n    return this.http.get<Customer[]>(url, {\r\n      params: customParams,\r\n      observe: 'response',\r\n    });\r\n  }\r\n\r\n  getCustomersForDropDown(\r\n    searchBy: string,\r\n    searchString: string\r\n  ): Observable<Customer[]> {\r\n    const url = 'customer/search';\r\n    if (searchString && searchBy) {\r\n      let params = `?searchQuery=${searchString.trim()}&searchBy=${searchBy}&pageSize=10`;\r\n      return this.http.get<Customer[]>(url + params);\r\n    }\r\n    return of([]);\r\n  }\r\n\r\n  getWalkInCustomer() {\r\n    const url = 'customer/walkIn';\r\n    return this.http.get<Customer>(url);\r\n  }\r\n\r\n  getCustomer(id: string): Observable<Customer> {\r\n    const url = 'customer/' + id;\r\n    return this.http.get<Customer>(url);\r\n  }\r\n\r\n  deleteCustomer(id: string): Observable<void> {\r\n    const url = 'customer/' + id;\r\n    return this.http.delete<void>(url);\r\n  }\r\n  updateCustomer(id: string, customer: Customer): Observable<Customer> {\r\n    const url = 'customer/' + id;\r\n    return this.http.put<Customer>(url, customer);\r\n  }\r\n  saveCustomer(customer: Customer): Observable<Customer> {\r\n    const url = 'customer';\r\n    return this.http.post<Customer>(url, customer);\r\n  }\r\n  checkEmailOrPhoneExist(\r\n    email: string,\r\n    mobileNo: string,\r\n    id: string | Guid\r\n  ): Observable<boolean> {\r\n    const url = `customer/${id}/Exist?email=${email}&mobileNo=${mobileNo}`;\r\n    return this.http.get<boolean>(url);\r\n  }\r\n\r\n  getCustomerPayments(\r\n    resourceParams: CustomerResourceParameter\r\n  ): Observable<HttpResponse<CustomerPayment[]>> {\r\n    const url = 'customer/GetCustomerPayment';\r\n    const customParams = new HttpParams()\r\n      .set('Fields', resourceParams.fields)\r\n      .set('OrderBy', resourceParams.orderBy)\r\n      .set('PageSize', resourceParams.pageSize.toString())\r\n      .set('Skip', resourceParams.skip.toString())\r\n      .set('SearchQuery', resourceParams.searchQuery)\r\n      .set('customerName', resourceParams.customerName);\r\n    return this.http.get<CustomerPayment[]>(url, {\r\n      params: customParams,\r\n      observe: 'response',\r\n    });\r\n  }\r\n\r\n  getCustomerPaymentsReport(\r\n    resourceParams: CustomerResourceParameter\r\n  ): Observable<HttpResponse<CustomerPayment[]>> {\r\n    const url = 'customer/GetCustomerPayment/report';\r\n    const customParams = new HttpParams()\r\n      .set('Fields', resourceParams.fields)\r\n      .set('OrderBy', resourceParams.orderBy)\r\n      .set('PageSize', resourceParams.pageSize.toString())\r\n      .set('Skip', resourceParams.skip.toString())\r\n      .set('SearchQuery', resourceParams.searchQuery)\r\n      .set('customerName', resourceParams.customerName);\r\n    return this.http.get<CustomerPayment[]>(url, {\r\n      params: customParams,\r\n      observe: 'response',\r\n    });\r\n  }\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { RouterModule, Routes } from '@angular/router';\r\nimport { AuthGuard } from '@core/security/auth.guard';\r\nimport { ProductsResolver } from '@core/services/products.resolve';\r\nimport { SalesOrderTaxResolver } from '../sales-order/sales-order-add-edit/sales-order-tax-resolve';\r\nimport { SalesOrderUnitResolver } from '../sales-order/sales-order-add-edit/sales-order-unit-resolve';\r\nimport { PosComponent } from './pos.component';\r\nconst routes: Routes = [\r\n  {\r\n    path: '',\r\n    component: PosComponent,\r\n    data: { claimType: ['POS_POS']},\r\n    canActivate: [AuthGuard],\r\n    resolve: {\r\n      'units': SalesOrderUnitResolver,\r\n      'taxs': SalesOrderTaxResolver,\r\n      'products': ProductsResolver\r\n    },\r\n\r\n  },\r\n];\r\n\r\n\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule],\r\n})\r\nexport class PosRoutingModule { }\r\n","import { HttpResponse } from '@angular/common/http';\r\nimport {\r\n  AfterViewInit,\r\n  Component,\r\n  ElementRef,\r\n  OnInit,\r\n  ViewChild,\r\n} from '@angular/core';\r\nimport {\r\n  UntypedFormGroup,\r\n  UntypedFormArray,\r\n  UntypedFormBuilder,\r\n  Validators,\r\n} from '@angular/forms';\r\nimport { Router, ActivatedRoute } from '@angular/router';\r\nimport { Customer } from '@core/domain-classes/customer';\r\nimport { CustomerResourceParameter } from '@core/domain-classes/customer-resource-parameter';\r\nimport { DeliveryStatusEnum } from '@core/domain-classes/delivery-status-enum';\r\nimport { Operators } from '@core/domain-classes/operator';\r\nimport { Product } from '@core/domain-classes/product';\r\nimport { ProductResourceParameter } from '@core/domain-classes/product-resource-parameter';\r\nimport { SalesOrder } from '@core/domain-classes/sales-order';\r\nimport { SalesOrderItem } from '@core/domain-classes/sales-order-item';\r\nimport { SalesOrderItemTax } from '@core/domain-classes/sales-order-item-tax';\r\nimport { SalesOrderStatusEnum } from '@core/domain-classes/sales-order-status';\r\nimport { Tax } from '@core/domain-classes/tax';\r\nimport { UnitConversation } from '@core/domain-classes/unit-conversation';\r\nimport { ClonerService } from '@core/services/clone.service';\r\nimport { TranslationService } from '@core/services/translation.service';\r\nimport { environment } from '@environments/environment';\r\nimport { QuantitiesUnitPriceTaxPipe } from '@shared/pipes/quantities-unitprice-tax.pipe';\r\nimport { QuantitiesUnitPricePipe } from '@shared/pipes/quantities-unitprice.pipe';\r\nimport { IDetect } from 'ngx-barcodeput';\r\nimport { ToastrService } from 'ngx-toastr';\r\nimport {\r\n  debounceTime,\r\n  distinctUntilChanged,\r\n  switchMap,\r\n  tap,\r\n} from 'rxjs/operators';\r\nimport { BaseComponent } from '../base.component';\r\nimport { CustomerService } from '../customer/customer.service';\r\nimport { ProductService } from '../product/product.service';\r\nimport { SalesOrderService } from '../sales-order/sales-order.service';\r\n\r\n@Component({\r\n  selector: 'app-pos',\r\n  templateUrl: './pos.component.html',\r\n  styleUrls: ['./pos.component.scss'],\r\n  viewProviders: [QuantitiesUnitPricePipe, QuantitiesUnitPriceTaxPipe],\r\n})\r\nexport class PosComponent\r\n  extends BaseComponent\r\n  implements OnInit, AfterViewInit\r\n{\r\n  salesOrderForm: UntypedFormGroup;\r\n  products: Product[] = [];\r\n  filterProducts: Product[] = [];\r\n  customers: Customer[] = [];\r\n  customerResource: CustomerResourceParameter;\r\n  productResource: ProductResourceParameter;\r\n  isLoading: boolean = false;\r\n  isCustomerLoading: boolean = false;\r\n  filterProductsMap: { [key: string]: Product[] } = {};\r\n  unitsMap: { [key: string]: UnitConversation[] } = {};\r\n  unitConversationlist: UnitConversation[] = [];\r\n  taxsMap: { [key: string]: Tax[] } = {};\r\n  totalBeforeDiscount: number = 0;\r\n  totalAfterDiscount: number = 0;\r\n  totalDiscount: number = 0;\r\n  grandTotal: number = 0;\r\n  totalTax: number = 0;\r\n  timeoutclear: any;\r\n  salesOrder: SalesOrder;\r\n  isEdit: boolean = false;\r\n  baseUrl = environment.apiUrl;\r\n  isFromScanner = false;\r\n  @ViewChild('filterValue') filterValue: ElementRef;\r\n  get salesOrderItemsArray(): UntypedFormArray {\r\n    return <UntypedFormArray>this.salesOrderForm.get('salesOrderItems');\r\n  }\r\n\r\n  constructor(\r\n    private fb: UntypedFormBuilder,\r\n    private customerService: CustomerService,\r\n    private toastrService: ToastrService,\r\n    private salesOrderService: SalesOrderService,\r\n    private router: Router,\r\n    private productService: ProductService,\r\n    private route: ActivatedRoute,\r\n    private quantitiesUnitPricePipe: QuantitiesUnitPricePipe,\r\n    private quantitiesUnitPriceTaxPipe: QuantitiesUnitPriceTaxPipe,\r\n    public translationService: TranslationService,\r\n    private clonerService: ClonerService\r\n  ) {\r\n    super(translationService);\r\n    this.getLangDir();\r\n    this.customerResource = new CustomerResourceParameter();\r\n    this.productResource = new ProductResourceParameter();\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.unitConversationlist = [...this.route.snapshot.data['units']];\r\n    this.createSalesOrder();\r\n    this.getProducts();\r\n    this.customerNameChangeValue();\r\n    this.getNewSalesOrderNumber();\r\n    this.salesOrderForm.get('filterProductValue').setValue('');\r\n  }\r\n\r\n  ngAfterViewInit(): void {\r\n    this.filterValue.nativeElement.focus();\r\n  }\r\n\r\n  createSalesOrder() {\r\n    this.route.data\r\n      .pipe()\r\n      .subscribe((salesOrderData: { salesorder: SalesOrder }) => {\r\n        this.salesOrder = salesOrderData.salesorder;\r\n        this.isEdit = false;\r\n        this.getCustomers();\r\n        this.salesOrderForm = this.fb.group({\r\n          orderNumber: ['', [Validators.required]],\r\n          filerCustomer: [''],\r\n          deliveryDate: [new Date(), [Validators.required]],\r\n          soCreatedDate: [new Date(), [Validators.required]],\r\n          deliveryStatus: [1],\r\n          customerId: ['', [Validators.required]],\r\n          note: [''],\r\n          termAndCondition: [''],\r\n          salesOrderItems: this.fb.array([]),\r\n          filterProductValue: [''],\r\n        });\r\n      });\r\n  }\r\n\r\n  setUnitConversationForProduct(id: string, index: number) {\r\n    this.unitsMap[index] = this.unitConversationlist.filter(\r\n      (c) => c.id == id || c.parentId == id\r\n    );\r\n  }\r\n\r\n  onSelectionChange(unitId: any, index: number, isFromUI = true) {\r\n    const productId =\r\n      this.salesOrderItemsArray.controls[index].get('productId').value;\r\n    const product = this.filterProducts.find((c) => c.id === productId);\r\n    const unit = this.unitConversationlist.find((c) => c.id === unitId);\r\n    let price = 0;\r\n\r\n    if (unit.value) {\r\n      switch (unit.operator) {\r\n        case Operators.Plush:\r\n          price = product.salesPrice + parseFloat(unit.value);\r\n          break;\r\n        case Operators.Minus:\r\n          price = product.salesPrice - parseFloat(unit.value);\r\n          break;\r\n        case Operators.Multiply:\r\n          price = product.salesPrice * parseFloat(unit.value);\r\n          break;\r\n        case Operators.Divide:\r\n          price = product.salesPrice / parseFloat(unit.value);\r\n          break;\r\n      }\r\n      this.salesOrderItemsArray.controls[index].patchValue({\r\n        unitPrice: price,\r\n      });\r\n    } else {\r\n      this.salesOrderItemsArray.controls[index].patchValue({\r\n        unitPrice: product.salesPrice,\r\n      });\r\n    }\r\n  }\r\n\r\n  onProductSelect(product: Product, index: number) {\r\n    let salesOrderItems: SalesOrderItem[] =\r\n      this.salesOrderForm.get('salesOrderItems').value;\r\n\r\n    const existingProductIndex = salesOrderItems.findIndex(\r\n      (c) => c.productId == product.id\r\n    );\r\n    let newIndex = existingProductIndex;\r\n    if (existingProductIndex >= 0) {\r\n      let iteamToUpdate = salesOrderItems[existingProductIndex];\r\n      this.salesOrderItemsArray\r\n        .at(existingProductIndex)\r\n        .get('quantity')\r\n        .patchValue(iteamToUpdate.quantity + 1);\r\n    } else {\r\n      newIndex = this.salesOrderItemsArray.length;\r\n      this.salesOrderItemsArray.push(\r\n        this.createSalesOrderItem(this.salesOrderItemsArray.length, product)\r\n      );\r\n    }\r\n    this.setUnitConversationForProduct(product.unitId, newIndex);\r\n    this.getAllTotal();\r\n    this.filterValue.nativeElement.focus();\r\n  }\r\n\r\n  createSalesOrderItem(index: number, product: Product) {\r\n    const taxs = product.productTaxes.map((c) => c.taxId);\r\n    const formGroup = this.fb.group({\r\n      productId: [product.id],\r\n      warehouseId: [product.warehouseId],\r\n      unitPrice: [product.salesPrice, [Validators.required, Validators.min(0)]],\r\n      quantity: [1, [Validators.required, Validators.min(1)]],\r\n      taxValue: [taxs],\r\n      unitId: [product.unitId, [Validators.required]],\r\n      discountPercentage: [0, [Validators.min(0)]],\r\n      productName: [product.name],\r\n    });\r\n    this.unitsMap[index] = this.unitConversationlist.filter(\r\n      (c) => c.id == product.unitId || c.parentId == product.unitId\r\n    );\r\n    this.taxsMap[index] = [...this.route.snapshot.data['taxs']];\r\n    return formGroup;\r\n  }\r\n\r\n  public onDetected(event: IDetect) {\r\n    if (event?.type == 'scanner') {\r\n      this.isFromScanner = true;\r\n    } else {\r\n      this.isFromScanner = false;\r\n    }\r\n  }\r\n\r\n  getProducts() {\r\n    this.sub$.sink = this.salesOrderForm\r\n      .get('filterProductValue')\r\n      .valueChanges.pipe(\r\n        debounceTime(500),\r\n        distinctUntilChanged(),\r\n        switchMap((c) => {\r\n          if (this.isFromScanner) {\r\n            this.productResource.barcode = c;\r\n          } else {\r\n            this.productResource.name = c;\r\n          }\r\n          this.productResource.pageSize = 12;\r\n          return this.productService.getProducts(this.productResource);\r\n        })\r\n      )\r\n      .subscribe(\r\n        (resp: HttpResponse<Product[]>) => {\r\n          if (resp && resp.headers) {\r\n            if (this.isFromScanner) {\r\n              this.isFromScanner = false;\r\n              if (resp.body.length == 1) {\r\n                this.onProductSelect(\r\n                  this.clonerService.deepClone<Product>(resp.body[0]),\r\n                  null\r\n                );\r\n                this.toastrService.success('Product Added Successfully');\r\n              } else {\r\n                this.toastrService.warning('Product not found');\r\n              }\r\n              this.productResource.barcode = '';\r\n              this.salesOrderForm.get('filterProductValue').patchValue('');\r\n            } else {\r\n              this.filterProducts = this.clonerService.deepClone<Product[]>(\r\n                resp.body\r\n              );\r\n            }\r\n          }\r\n        },\r\n        (err) => {\r\n          this.isFromScanner = false;\r\n        }\r\n      );\r\n  }\r\n\r\n  getAllTotal() {\r\n    let salesOrderItems = this.salesOrderForm.get('salesOrderItems').value;\r\n    this.totalBeforeDiscount = 0;\r\n    this.grandTotal = 0;\r\n    this.totalDiscount = 0;\r\n    this.totalTax = 0;\r\n    if (salesOrderItems && salesOrderItems.length > 0) {\r\n      salesOrderItems.forEach((so) => {\r\n        if (so.unitPrice && so.quantity) {\r\n          const totalBeforeDiscount =\r\n            this.totalBeforeDiscount +\r\n            parseFloat(\r\n              this.quantitiesUnitPricePipe.transform(so.quantity, so.unitPrice)\r\n            );\r\n          this.totalBeforeDiscount = parseFloat(totalBeforeDiscount.toFixed(2));\r\n          const gradTotal =\r\n            this.grandTotal +\r\n            parseFloat(\r\n              this.quantitiesUnitPricePipe.transform(\r\n                so.quantity,\r\n                so.unitPrice,\r\n                so.discountPercentage,\r\n                so.taxValue,\r\n                this.taxsMap[0]\r\n              )\r\n            );\r\n          this.grandTotal = parseFloat(gradTotal.toFixed(2));\r\n          const totalTax =\r\n            this.totalTax +\r\n            parseFloat(\r\n              this.quantitiesUnitPriceTaxPipe.transform(\r\n                so.quantity,\r\n                so.unitPrice,\r\n                so.discountPercentage,\r\n                so.taxValue,\r\n                this.taxsMap[0]\r\n              )\r\n            );\r\n          this.totalTax = parseFloat(totalTax.toFixed(2));\r\n          const totalDiscount =\r\n            this.totalDiscount +\r\n            parseFloat(\r\n              this.quantitiesUnitPriceTaxPipe.transform(\r\n                so.quantity,\r\n                so.unitPrice,\r\n                so.discountPercentage\r\n              )\r\n            );\r\n          this.totalDiscount = parseFloat(totalDiscount.toFixed(2));\r\n        }\r\n      });\r\n    }\r\n  }\r\n\r\n  onUnitPriceChange() {\r\n    this.getAllTotal();\r\n  }\r\n\r\n  onQuantityChange() {\r\n    this.getAllTotal();\r\n  }\r\n\r\n  onDiscountChange() {\r\n    this.getAllTotal();\r\n  }\r\n\r\n  onTaxSelectionChange() {\r\n    this.getAllTotal();\r\n  }\r\n\r\n  onRemoveSalesOrderItem(index: number) {\r\n    this.salesOrderItemsArray.removeAt(index);\r\n    this.getAllTotal();\r\n  }\r\n\r\n  getNewSalesOrderNumber() {\r\n    this.salesOrderService.getNewSalesOrderNumber().subscribe((salesOrder) => {\r\n      if (!this.salesOrder) {\r\n        this.salesOrderForm.patchValue({\r\n          orderNumber: salesOrder.orderNumber,\r\n        });\r\n      }\r\n    });\r\n  }\r\n\r\n  customerNameChangeValue() {\r\n    this.sub$.sink = this.salesOrderForm\r\n      .get('filerCustomer')\r\n      .valueChanges.pipe(\r\n        tap((c) => (this.isCustomerLoading = true)),\r\n        debounceTime(500),\r\n        distinctUntilChanged(),\r\n        switchMap((c) => {\r\n          this.customerResource.customerName = c;\r\n          this.customerResource.id = null;\r\n          return this.customerService.getCustomers(this.customerResource);\r\n        })\r\n      )\r\n      .subscribe(\r\n        (resp: HttpResponse<Customer[]>) => {\r\n          this.isCustomerLoading = false;\r\n          if (resp && resp.headers) {\r\n            this.customers = [...resp.body];\r\n          }\r\n        },\r\n        (err) => {\r\n          this.isCustomerLoading = false;\r\n        }\r\n      );\r\n  }\r\n\r\n  getCustomers() {\r\n    if (this.salesOrder) {\r\n      this.customerResource.id = this.salesOrder.customerId;\r\n    } else {\r\n      this.customerResource.customerName = '';\r\n      this.customerResource.id = null;\r\n    }\r\n    this.customerService\r\n      .getCustomers(this.customerResource)\r\n      .subscribe((resp) => {\r\n        if (resp && resp.headers) {\r\n          this.customers = [...resp.body];\r\n          const walkInCustomer = this.customers.find((c) => c.isWalkIn);\r\n          if (!walkInCustomer) {\r\n            this.getWalkinCustomer();\r\n          } else {\r\n            this.salesOrderForm.get('customerId').setValue(walkInCustomer.id);\r\n          }\r\n        }\r\n      });\r\n  }\r\n\r\n  getWalkinCustomer() {\r\n    this.customerService.getWalkInCustomer().subscribe((c) => {\r\n      if (c) {\r\n        this.customers.push(c);\r\n        this.salesOrderForm.get('customerId').setValue(c.id);\r\n      }\r\n    });\r\n  }\r\n\r\n  onSaveAndNew() {\r\n    this.onSalesOrderSubmit(true);\r\n  }\r\n\r\n  onSalesOrderSubmit(isSaveAndNew = false) {\r\n    if (!this.salesOrderForm.valid) {\r\n      this.salesOrderForm.markAllAsTouched();\r\n    } else {\r\n      const salesOrder = this.buildSalesOrder();\r\n      let salesOrderItems = this.salesOrderForm.get('salesOrderItems').value;\r\n      if (salesOrderItems && salesOrderItems.length == 0) {\r\n        this.toastrService.error(\r\n          this.translationService.getValue('PLEASE_SELECT_ATLEASE_ONE_PRODUCT')\r\n        );\r\n      } else {\r\n        this.salesOrderService\r\n          .addSalesOrder(salesOrder)\r\n          .subscribe((c: SalesOrder) => {\r\n            this.toastrService.success(\r\n              this.translationService.getValue('SALES_ORDER_ADDED_SUCCESSFULLY')\r\n            );\r\n            if (isSaveAndNew) {\r\n              this.router.navigate(['/pos']);\r\n              this.ngOnInit();\r\n            } else {\r\n              this.router.navigate(['/sales-order/list']);\r\n            }\r\n          });\r\n      }\r\n    }\r\n  }\r\n  reloadCurrentRoute() {\r\n    let currentUrl = this.router.url;\r\n    this.router.navigateByUrl('/', { skipLocationChange: true }).then(() => {\r\n      this.router.navigate([currentUrl]);\r\n    });\r\n  }\r\n\r\n  buildSalesOrder() {\r\n    const salesOrder: SalesOrder = {\r\n      id: this.salesOrder ? this.salesOrder.id : '',\r\n      orderNumber: this.salesOrderForm.get('orderNumber').value,\r\n      deliveryDate: this.salesOrderForm.get('deliveryDate').value,\r\n      deliveryStatus: DeliveryStatusEnum.UnDelivery,\r\n      isSalesOrderRequest: false,\r\n      soCreatedDate: this.salesOrderForm.get('soCreatedDate').value,\r\n      salesOrderStatus: SalesOrderStatusEnum.Not_Return,\r\n      customerId: this.salesOrderForm.get('customerId').value,\r\n      totalAmount: this.grandTotal,\r\n      totalDiscount: this.totalDiscount,\r\n      totalTax: this.totalTax,\r\n      note: this.salesOrderForm.get('note').value,\r\n      termAndCondition: this.salesOrderForm.get('termAndCondition').value,\r\n      salesOrderItems: [],\r\n    };\r\n\r\n    const salesOrderItems = this.salesOrderForm.get('salesOrderItems').value;\r\n    if (salesOrderItems && salesOrderItems.length > 0) {\r\n      salesOrderItems.forEach((so) => {\r\n        salesOrder.salesOrderItems.push({\r\n          discount: parseFloat(\r\n            this.quantitiesUnitPriceTaxPipe.transform(\r\n              so.quantity,\r\n              so.unitPrice,\r\n              so.discountPercentage\r\n            )\r\n          ),\r\n          discountPercentage: so.discountPercentage,\r\n          productId: so.productId,\r\n          unitId: so.unitId,\r\n          quantity: so.quantity,\r\n          warehouseId: so.warehouseId,\r\n          taxValue: parseFloat(\r\n            this.quantitiesUnitPriceTaxPipe.transform(\r\n              so.quantity,\r\n              so.unitPrice,\r\n              so.discountPercentage,\r\n              so.taxValue,\r\n              this.taxsMap[0]\r\n            )\r\n          ),\r\n          unitPrice: parseFloat(so.unitPrice),\r\n          salesOrderItemTaxes: so.taxValue\r\n            ? [\r\n                ...so.taxValue.map((element) => {\r\n                  const salesOrderItemTaxes: SalesOrderItemTax = {\r\n                    taxId: element,\r\n                  };\r\n                  return salesOrderItemTaxes;\r\n                }),\r\n              ]\r\n            : [],\r\n        });\r\n      });\r\n    }\r\n    return salesOrder;\r\n  }\r\n\r\n  onSalesOrderList() {\r\n    this.router.navigate(['/']);\r\n  }\r\n}\r\n","<div class=\"content-area-pos \">\r\n    <form autocomplete=\"off\" [formGroup]=\"salesOrderForm\">\r\n        <div class=\"row\">\r\n            <div class=\"col-sm-12 col-md-12 col-lg-12\">\r\n                <div class=\"row\">\r\n                    <div class=\"col-sm-12 col-12 order-2 order-md-1 col-md-8\">\r\n                        <div class=\"card\">\r\n                            <div class=\"card-body\">\r\n                                <div class=\"col-sm-12 col-md-12 col-lg-12\">\r\n                                    <label class=\"text-danger\">{{'CUSTOMER_NAME' | translate}} *</label>\r\n                                    <div role=\"group\" class=\"input-group input-customer\">\r\n                                        <mat-select formControlName=\"customerId\" [dir]=\"langDir\"\r\n                                            placeholder=\"{{'SELECT_CUSTOMER' | translate}}\" class=\"form-control\">\r\n                                            <input class=\"form-control w-100\" formControlName=\"filerCustomer\"\r\n                                                focused=\"'true'\" type=\"text\" autocomplete=\"off\"\r\n                                                placeholder=\"{{'SEARCH_OTHER_CUSTOMERS' | translate}} \">\r\n                                            <mat-divider></mat-divider>\r\n                                            <mat-option *ngFor=\"let customer of customers\" [value]=\"customer.id\">\r\n                                                {{customer.customerName}}\r\n                                            </mat-option>\r\n                                            <mat-option [value]=\"\" *ngIf=\"customers.length==0\">\r\n                                                {{\"NO_RECORDS\" | translate}}\r\n                                            </mat-option>\r\n                                        </mat-select>\r\n                                    </div>\r\n                                    <div\r\n                                        *ngIf=\"salesOrderForm.get('customerId').touched && salesOrderForm.get('customerId').errors\">\r\n                                        <div class=\"text-danger\"\r\n                                            *ngIf=\"salesOrderForm.get('customerId').errors?.required\">\r\n                                            {{'CUSTOMER_NAME_IS_REQUIRED' | translate}}\r\n                                        </div>\r\n                                    </div>\r\n                                </div><br>\r\n                                <div class=\"col-sm-12 col-md-12 col-lg-12\">\r\n                                    <div class=\"row\">\r\n                                        <div class=\"col-sm-12\" formArrayName=\"salesOrderItems\">\r\n                                            <div class=\"row\">\r\n                                                <div class=\"col\">\r\n                                                    <div class=\"table-responsive\">\r\n                                                        <table class=\"table table-bordered table-hover\">\r\n                                                            <tr>\r\n                                                                <th class=\"table-column-200\">\r\n                                                                    {{'PRODUCT' | translate}}\r\n                                                                </th>\r\n                                                                <th class=\"table-column-150\">\r\n                                                                    {{'UNIT' | translate}}\r\n                                                                  </th>\r\n                                                                <th class=\"table-column-130\">\r\n                                                                    {{'PRICE' | translate}}\r\n                                                                </th>\r\n                                                                <th class=\"table-column-110\">\r\n                                                                    {{'QUANTITY' | translate}}\r\n                                                                </th>\r\n                                                                <th class=\"table-column-100\">\r\n                                                                    {{'DISCOUNT' | translate}}%\r\n                                                                </th>\r\n                                                                <th class=\"table-column-100\">\r\n                                                                    {{'TAX' | translate}}\r\n                                                                </th>\r\n                                                                <th class=\"table-column-150\">\r\n                                                                    {{'TOTAL' | translate}}\r\n                                                                </th>\r\n                                                                <th style=\"text-align: center;\">\r\n                                                                    <i class=\"fas fa-trash-alt\"\r\n                                                                        style=\"opacity:0.5; filter:alpha(opacity=50);\"></i>\r\n                                                                </th>\r\n                                                            </tr>\r\n                                                            <tr [formGroupName]=\"i\"\r\n                                                                *ngFor=\"let salesOrderItem of salesOrderItemsArray?.controls; let i = index\">\r\n\r\n                                                                <td>\r\n                                                                    <input class=\"form-control w-100\" disabled\r\n                                                                        formControlName=\"productName\" focused=\"'true'\"\r\n                                                                        type=\"text\" autocomplete=\"off\">\r\n                                                                </td>\r\n                                                                <td>\r\n                                                                    <mat-select [dir]=\"langDir\" formControlName=\"unitId\" (selectionChange)=\"onSelectionChange($event.value,i)\" class=\"form-control\">\r\n                                                                      <mat-option [dir]=\"langDir\" *ngFor=\"let a of unitsMap[i]\" [value]=\"a.id\">\r\n                                                                        {{a.name}}\r\n                                                                      </mat-option>\r\n                                                                    </mat-select>\r\n                                                                    <div *ngIf=\"salesOrderItem.get('unitId').touched && salesOrderItem.get('unitId').errors\">\r\n                                                                    <div class=\"text-danger\" *ngIf=\"salesOrderItem.get('unitId').errors?.required\">\r\n                                                                      {{'UNIT_IS_REQUIRED' | translate}}\r\n                                                                    </div>\r\n                                                                  </div>\r\n                                                                  </td>\r\n                                                                <td>\r\n                                                                    <input class=\"form-control\" type=\"number\"\r\n                                                                        (change)=\"onUnitPriceChange()\"\r\n                                                                        formControlName=\"unitPrice\"\r\n                                                                        placeholder=\"{{'UNIT_PER_PRICE' | translate}}\">\r\n                                                                    <div\r\n                                                                        *ngIf=\"salesOrderItem.get('unitPrice').touched && salesOrderItem.get('unitPrice').errors\">\r\n                                                                        <div class=\"text-danger\"\r\n                                                                            *ngIf=\"salesOrderItem.get('unitPrice').errors?.required\">\r\n                                                                            {{'UNIT_PER_PRICE_IS_REQUIRED' | translate}}\r\n                                                                        </div>\r\n                                                                        <div class=\"text-danger\"\r\n                                                                            *ngIf=\"salesOrderItem.get('unitPrice').errors?.min\">\r\n                                                                            {{\"PRICE_SHOULD_BE_MORE_THEN_0\" |\r\n                                                                            translate}}\r\n                                                                        </div>\r\n                                                                    </div>\r\n                                                                </td>\r\n                                                                <td>\r\n                                                                    <input class=\"form-control\" type=\"number\"\r\n                                                                        (change)=\"onQuantityChange()\"\r\n                                                                        formControlName=\"quantity\"\r\n                                                                        placeholder=\"{{'QUANTITY' | translate}}\">\r\n                                                                    <div\r\n                                                                        *ngIf=\"salesOrderItem.get('quantity').touched && salesOrderItem.get('quantity').errors\">\r\n                                                                        <div class=\"text-danger\"\r\n                                                                            *ngIf=\"salesOrderItem.get('quantity').errors?.required\">\r\n                                                                            {{'QUANTITY_IS_REQUIRED' | translate}}\r\n                                                                        </div>\r\n                                                                        <div class=\"text-danger\"\r\n                                                                            *ngIf=\"salesOrderItem.get('quantity').errors?.min\">\r\n                                                                            {{\"QUANTITY_SHOULD_BE_MORE_THEN_0\" |\r\n                                                                            translate}}\r\n                                                                        </div>\r\n                                                                    </div>\r\n                                                                </td>\r\n                                                                <td>\r\n                                                                    <input class=\"form-control\"\r\n                                                                        formControlName=\"discountPercentage\"\r\n                                                                        (change)=\"onDiscountChange()\"\r\n                                                                        placeholder=\"{{'DISCOUNT' | translate}}\">\r\n                                                                    <div class=\"text-danger\"\r\n                                                                        *ngIf=\"salesOrderItem.get('discountPercentage').errors?.min\">\r\n                                                                        {{\"DISCOUNT_SHOULD_BE_MORE_THEN_0\" | translate}}\r\n                                                                    </div>\r\n                                                                </td>\r\n                                                                <td>\r\n                                                                    <mat-select [dir]=\"langDir\"\r\n                                                                        formControlName=\"taxValue\"\r\n                                                                        placeholder=\"Select Tax\"\r\n                                                                        (selectionChange)=\"onTaxSelectionChange()\"\r\n                                                                        class=\"form-control\" multiple>\r\n                                                                        <mat-option *ngFor=\"let tax of taxsMap[i]\"\r\n                                                                            [value]=\"tax.id\">{{tax.name}}\r\n                                                                            ({{tax.percentage}}%)\r\n                                                                        </mat-option>\r\n                                                                    </mat-select>\r\n                                                                    <div\r\n                                                                        *ngIf=\"salesOrderItem.get('taxValue').touched && salesOrderItem.get('taxValue').errors\">\r\n                                                                        <div class=\"text-danger\"\r\n                                                                            *ngIf=\"salesOrderItem.get('taxValue').errors?.required\">\r\n                                                                            {{'TAX_IS_REQUIRED' | translate}}\r\n                                                                        </div>\r\n                                                                    </div>\r\n                                                                </td>\r\n                                                                <td>\r\n                                                                    {{ salesOrderItem.get('quantity').value |\r\n                                                                    quantitiesunitprice :\r\n                                                                    salesOrderItem.get('unitPrice').value\r\n                                                                    : salesOrderItem.get('discountPercentage').value:\r\n                                                                    salesOrderItem.get('taxValue').value: taxsMap[i] |\r\n                                                                    customCurrency}}\r\n                                                                    <div class=\"text-danger\"\r\n                                                                        *ngIf=\"salesOrderItem.get('taxValue').value\">\r\n                                                                        {{\"TAX_AMOUNT\" | translate}}: {{\r\n                                                                        salesOrderItem.get('quantity').value |\r\n                                                                        quantitiesunitpriceTax :\r\n                                                                        salesOrderItem.get('unitPrice').value :\r\n                                                                        salesOrderItem.get('discountPercentage').value :\r\n                                                                        salesOrderItem.get('taxValue').value: taxsMap[i]\r\n                                                                        |\r\n                                                                        customCurrency }}\r\n                                                                    </div>\r\n                                                                </td>\r\n                                                                <td>\r\n                                                                    <button type=\"button\"\r\n                                                                        *ngIf=\"salesOrderItemsArray?.controls.length !==1\"\r\n                                                                        (click)=\"onRemoveSalesOrderItem(i)\"\r\n                                                                        mat-icon-button aria-label=\"Action\">\r\n                                                                        <mat-icon class=\"btn-danger\">delete_forever\r\n                                                                        </mat-icon>\r\n                                                                    </button>\r\n                                                                </td>\r\n                                                            </tr>\r\n                                                        </table>\r\n                                                    </div>\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                    <div class=\"row mt-1\">\r\n                                        <div class=\"col-10 text-right font-weight-bold\">\r\n                                            {{\"SUB_TOTAL_BEFORE_DISCOUNT\" | translate}}:\r\n                                        </div>\r\n                                        <div class=\"col-2 text-left  font-weight-bold\">\r\n                                            {{totalBeforeDiscount | customCurrency}}\r\n                                        </div>\r\n                                    </div>\r\n                                    <div class=\"row\">\r\n                                        <div class=\"col-10 text-right font-weight-bold\">\r\n                                            {{'TOTAL_DISCOUNT' | translate}}:\r\n                                        </div>\r\n                                        <div class=\"col-2 text-left text-danger  font-weight-bold\">\r\n                                            {{totalDiscount | customCurrency}}\r\n                                        </div>\r\n                                    </div>\r\n                                    <div class=\"row\">\r\n                                        <div class=\"col-10 text-right font-weight-bold\">\r\n                                            {{'TOTAL_TAX' | translate}}:\r\n                                        </div>\r\n                                        <div class=\"col-2 text-left  font-weight-bold\">\r\n                                            {{totalTax | customCurrency}}\r\n                                        </div>\r\n                                    </div>\r\n                                    <div class=\"row\">\r\n                                        <div class=\"col-12\">\r\n                                            <mat-divider></mat-divider>\r\n                                        </div>\r\n                                    </div>\r\n                                    <div class=\"row\">\r\n                                        <div class=\"col-10 text-right font-weight-bold\">\r\n                                            {{\"GRAND_TOTAL\" | translate}} :\r\n                                        </div>\r\n                                        <div class=\"col-2 text-left font-weight-bold\">\r\n                                            {{grandTotal | customCurrency}}\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                                <div class=\"row\">\r\n                                    <div class=\"col-md-12 mb-1 text-center\">\r\n                                        <button type=\"button\" (click)=\"onSalesOrderSubmit()\"\r\n                                            class=\"btn btn-success btn-sm m-right-10 \"\r\n                                            *hasClaim=\"['SO_ADD_SO','SO_UPDATE_SO','SO_RETURN_SO','POS_POS']\">\r\n                                            <i class=\"fas fa-save\"></i> {{'SAVE' | translate}}</button>\r\n                                        <button type=\"button\" (click)=\"onSaveAndNew()\"\r\n                                            class=\"btn btn-success btn-sm m-right-10 \"\r\n                                            *hasClaim=\"['SO_ADD_SO','SO_UPDATE_SO','SO_RETURN_SO','POS_POS']\">\r\n                                            <i class=\"fas fa-save\"></i> {{'SAVE_AND_NEW' | translate}}</button>\r\n                                        <button type=\"button\" (click)=\"onSalesOrderList()\"\r\n                                            class=\"btn btn-danger btn-sm\"><i class=\"fas fa-times-circle\"></i>\r\n                                            {{'CANCEL' | translate}}\r\n                                        </button>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div class=\"col-sm-12 col-12 order-1 order-md-2 col-md-4\">\r\n                        <div class=\"card\">\r\n                            <div class=\"card-body\">\r\n                                <div class=\"col-sm-12 col-md-12 col-lg-12\">\r\n                                    <h6>{{\"PRODUCT\" | translate}}</h6>\r\n                                    <input #filterValue class=\"form-control w-100\" (onDetected)=\"onDetected($event)\"\r\n                                        ngxBarCodePut formControlName=\"filterProductValue\" type=\"text\"\r\n                                        autocomplete=\"off\"\r\n                                        placeholder=\"{{'SEARCH_OTHER_PRODUCTS_WITH_NAME_AND_SCAN_BARCODE' | translate}}\">\r\n                                </div>\r\n                                <div class=\"col-sm-12 col-md-12 col-lg-12\">\r\n                                    <div class=\"form-row mt-3 card-scroller\">\r\n                                        <div class=\"col-sm-6 col-lg-4\" *ngFor=\"let a of filterProducts;let i = index\">\r\n                                            <div class=\"card card-pos\" (click)=\"onProductSelect(a,i)\">\r\n                                                <div class=\"card-body\">\r\n                                                    <ng-container *ngIf=\"a.productUrl; else noImage\">\r\n                                                        <img [src]=\"baseUrl + a.productUrl\" class=\"img-circle \" />\r\n                                                    </ng-container>\r\n                                                    <ng-template #noImage>\r\n                                                        <img src=\"assets/images/no-preview.jpg\" class=\"img-circle \"\r\n                                                            alt=\"{{'PRODUCT_IMAGE' | translate}}\">\r\n                                                    </ng-template>\r\n                                                    <div class=\"text-center card-text\">{{a.name}}</div>\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                    <br />\r\n                                    <div *ngIf=\"filterProducts.length == 0\"> <b> {{'NO_DATA_FOUND' | translate}}</b>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </form>\r\n    <div class=\"loading-shade\" *ngIf=\"isLoading\">\r\n        <mat-spinner *ngIf=\"isLoading\"></mat-spinner>\r\n    </div>\r\n</div>","import { NgModule } from '@angular/core';\r\nimport { PosComponent } from './pos.component';\r\nimport { PosRoutingModule } from './pos-routing.module';\r\nimport { SharedModule } from '@shared/shared.module';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport { MatAutocompleteModule } from '@angular/material/autocomplete';\r\nimport { MatButtonModule } from '@angular/material/button';\r\nimport { MatCardModule } from '@angular/material/card';\r\nimport { MatCheckboxModule } from '@angular/material/checkbox';\r\nimport { MatNativeDateModule } from '@angular/material/core';\r\nimport { MatDatepickerModule } from '@angular/material/datepicker';\r\nimport { MatDividerModule } from '@angular/material/divider';\r\nimport { MatFormFieldModule } from '@angular/material/form-field';\r\nimport { MatIconModule } from '@angular/material/icon';\r\nimport { MatInputModule } from '@angular/material/input';\r\nimport { MatMenuModule } from '@angular/material/menu';\r\nimport { MatPaginatorModule } from '@angular/material/paginator';\r\nimport { MatProgressSpinnerModule } from '@angular/material/progress-spinner';\r\nimport { MatRadioModule } from '@angular/material/radio';\r\nimport { MatSelectModule } from '@angular/material/select';\r\nimport { MatSortModule } from '@angular/material/sort';\r\nimport { MatTableModule } from '@angular/material/table';\r\nimport { OwlDateTimeModule, OwlNativeDateTimeModule } from 'ng-pick-datetime-ex';\r\nimport { CommonModule } from '@angular/common';\r\nimport { NgxBarCodePutModule } from 'ngx-barcodeput';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    PosComponent\r\n  ],\r\n  imports: [\r\n    CommonModule,\r\n    PosRoutingModule,\r\n    SharedModule,\r\n    FormsModule,\r\n    ReactiveFormsModule,\r\n    MatDatepickerModule,\r\n    MatNativeDateModule,\r\n    MatInputModule,\r\n    MatFormFieldModule,\r\n    MatRadioModule,\r\n    MatSelectModule,\r\n    MatCardModule,\r\n    MatTableModule,\r\n    MatPaginatorModule,\r\n    MatSortModule,\r\n    MatMenuModule,\r\n    MatIconModule,\r\n    MatButtonModule,\r\n    MatAutocompleteModule,\r\n    MatProgressSpinnerModule,\r\n    OwlDateTimeModule,\r\n    OwlNativeDateTimeModule,\r\n    MatCheckboxModule,\r\n    MatDividerModule,\r\n    NgxBarCodePutModule,\r\n  ]\r\n})\r\nexport class PosModule { }\r\n","import { HttpClient, HttpParams, HttpResponse } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { Product } from '@core/domain-classes/product';\r\nimport { ProductResourceParameter } from '@core/domain-classes/product-resource-parameter';\r\nimport { Observable } from 'rxjs';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class ProductService {\r\n\r\n  constructor(private http: HttpClient) { }\r\n\r\n  getProducts(\r\n    resourceParams: ProductResourceParameter\r\n  ): Observable<HttpResponse<Product[]>> {\r\n    const url = 'product';\r\n    const customParams = new HttpParams()\r\n      .set('fields', resourceParams.fields)\r\n      .set('orderBy', resourceParams.orderBy)\r\n      .set('pageSize', resourceParams.pageSize.toString())\r\n      .set('skip', resourceParams.skip.toString())\r\n      .set('searchQuery', resourceParams.searchQuery)\r\n      .set('name', resourceParams.name)\r\n      .set('id', resourceParams.id)\r\n      .set('categoryId', resourceParams.categoryId ? resourceParams.categoryId : '')\r\n      .set('unitId', resourceParams.unitId ? resourceParams.unitId : '')\r\n      .set('barcode', resourceParams.barcode ? resourceParams.barcode : '')\r\n      .set('brandId', resourceParams.brandId ? resourceParams.brandId : resourceParams.brandId);\r\n    return this.http.get<Product[]>(url, {\r\n      params: customParams,\r\n      observe: 'response',\r\n    });\r\n  }\r\n\r\n  getProudct(id: string): Observable<Product> {\r\n    const url = `product/${id}`;\r\n    return this.http.get<Product>(url);\r\n  }\r\n\r\n  addProudct(product: Product): Observable<Product> {\r\n    const url = 'product';\r\n    return this.http.post<Product>(url, product);\r\n  }\r\n\r\n  updateProudct(id: string, product: Product): Observable<Product> {\r\n    const url = `product/${id}`;\r\n    return this.http.put<Product>(url, product);\r\n  }\r\n\r\n\r\n  deleteProudct(id: string): Observable<void> {\r\n    const url = `product/${id}`;\r\n    return this.http.delete<void>(url);\r\n  }\r\n}\r\n","import { HttpClient, HttpEvent, HttpParams, HttpResponse } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { SalesOrder } from '@core/domain-classes/sales-order';\r\nimport { SalesOrderItem } from '@core/domain-classes/sales-order-item';\r\nimport { SalesOrderResourceParameter } from '@core/domain-classes/sales-order-resource-parameter';\r\nimport { CommonError } from '@core/error-handler/common-error';\r\nimport { CommonHttpErrorService } from '@core/error-handler/common-http-error.service';\r\nimport { Observable } from 'rxjs';\r\nimport { catchError } from 'rxjs/operators';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class SalesOrderService {\r\n\r\n\r\n  constructor(private http: HttpClient,\r\n    private commonHttpErrorService: CommonHttpErrorService) { }\r\n\r\n  getAllSalesOrder(\r\n    resourceParams: SalesOrderResourceParameter\r\n  ): Observable<HttpResponse<SalesOrder[]>> {\r\n    const url = 'salesOrder';\r\n    const customParams = new HttpParams()\r\n      .set('Fields', resourceParams.fields)\r\n      .set('OrderBy', resourceParams.orderBy)\r\n      .set('PageSize', resourceParams.pageSize.toString())\r\n      .set('Skip', resourceParams.skip.toString())\r\n      .set('SearchQuery', resourceParams.searchQuery)\r\n      .set('name', resourceParams.name)\r\n      .set('orderNumber', resourceParams.orderNumber)\r\n      .set('customerName', resourceParams.customerName)\r\n      .set('fromDate', resourceParams.fromDate ? resourceParams.fromDate.toDateString() : '')\r\n      .set('toDate', resourceParams.toDate ? resourceParams.toDate.toDateString() : '')\r\n      .set('productId', resourceParams.productId ? resourceParams.productId : '')\r\n      .set('customerId', resourceParams.customerId ? resourceParams.customerId : '')\r\n      .set('status', resourceParams.status);\r\n    return this.http.get<SalesOrder[]>(url, {\r\n      params: customParams,\r\n      observe: 'response'\r\n    });\r\n  }\r\n\r\n  getAllSalesOrderExcel(\r\n    resourceParams: SalesOrderResourceParameter\r\n  ): Observable<HttpResponse<SalesOrder[]>> {\r\n    const url = 'salesOrder';\r\n    const customParams = new HttpParams()\r\n      .set('Fields', resourceParams.fields)\r\n      .set('OrderBy', resourceParams.orderBy)\r\n      .set('PageSize', 0)\r\n      .set('Skip', 0)\r\n      .set('SearchQuery', resourceParams.searchQuery)\r\n      .set('name', resourceParams.name)\r\n      .set('orderNumber', resourceParams.orderNumber)\r\n      .set('customerName', resourceParams.customerName)\r\n      .set('fromDate', resourceParams.fromDate ? resourceParams.fromDate.toDateString() : '')\r\n      .set('toDate', resourceParams.toDate ? resourceParams.toDate.toDateString() : '')\r\n      .set('productId', resourceParams.productId ? resourceParams.productId : '')\r\n      .set('customerId', resourceParams.customerId ? resourceParams.customerId : '');\r\n    return this.http.get<SalesOrder[]>(url, {\r\n      params: customParams,\r\n      observe: 'response'\r\n    });\r\n  }\r\n\r\n  addSalesOrder(salesOrder: SalesOrder): Observable<SalesOrder | CommonError> {\r\n    const url = `salesOrder`;\r\n    return this.http.post<SalesOrder>(url, salesOrder)\r\n      .pipe(catchError(this.commonHttpErrorService.handleError));\r\n  }\r\n\r\n  updateSalesOrder(salesOrder: SalesOrder): Observable<SalesOrder | CommonError> {\r\n    const url = `salesOrder/${salesOrder.id}`;\r\n    return this.http.put<SalesOrder>(url, salesOrder)\r\n      .pipe(catchError(this.commonHttpErrorService.handleError));\r\n  }\r\n\r\n\r\n  updateSalesOrderReturn(salesOrder: SalesOrder): Observable<SalesOrder | CommonError> {\r\n    const url = `salesOrder/${salesOrder.id}/return`;\r\n    return this.http.put<SalesOrder>(url, salesOrder)\r\n      .pipe(catchError(this.commonHttpErrorService.handleError));\r\n  }\r\n\r\n  deleteSalesOrder(id: string): Observable<void | CommonError> {\r\n    const url = `salesOrder/${id}`;\r\n    return this.http.delete<void>(url)\r\n      .pipe(catchError(this.commonHttpErrorService.handleError));\r\n  }\r\n\r\n  getNewSalesOrderNumber(): Observable<SalesOrder> {\r\n    const url = `salesOrder/newOrderNumber`;\r\n    return this.http.get<SalesOrder>(url);\r\n  }\r\n\r\n  getSalesOrderById(salesOrderId: string): Observable<SalesOrder> {\r\n    const url = `salesOrder/${salesOrderId}`;\r\n    return this.http.get<SalesOrder>(url);\r\n  }\r\n\r\n  getSalesOrderItems(salesOrderId: string, isReturn: boolean = false): Observable<SalesOrderItem[]> {\r\n    const url = `salesOrder/${salesOrderId}/items?isReturn=${isReturn}`;\r\n    return this.http.get<SalesOrderItem[]>(url);\r\n  }\r\n\r\n  downloadAttachment(id: string): Observable<HttpEvent<Blob>> {\r\n    const url = `salesOrderAttachment/${id}/download`;\r\n    return this.http.get(url, {\r\n      reportProgress: true,\r\n      observe: 'events',\r\n      responseType: 'blob',\r\n    });\r\n  }\r\n\r\n  getSalesOrderItemReport(\r\n    resourceParams: SalesOrderResourceParameter\r\n  ): Observable<HttpResponse<SalesOrderItem[]>> {\r\n    const url = 'salesOrder/items/reports';\r\n    const customParams = new HttpParams()\r\n      .set('Fields', resourceParams.fields)\r\n      .set('OrderBy', resourceParams.orderBy)\r\n      .set('PageSize', resourceParams.pageSize.toString())\r\n      .set('Skip', resourceParams.skip.toString())\r\n      .set('SearchQuery', resourceParams.searchQuery)\r\n      .set('name', resourceParams.name)\r\n      .set('orderNumber', resourceParams.orderNumber)\r\n      .set('customerName', resourceParams.customerName)\r\n      .set('fromDate', resourceParams.fromDate ? resourceParams.fromDate.toDateString() : '')\r\n      .set('toDate', resourceParams.toDate ? resourceParams.toDate.toDateString() : '')\r\n      .set('productId', resourceParams.productId ? resourceParams.productId : '')\r\n      .set('productName', resourceParams.productName ? resourceParams.productName : '')\r\n      .set('customerId', resourceParams.customerId ? resourceParams.customerId : '')\r\n      .set('isSalesOrderRequest', resourceParams.isSalesOrderRequest)\r\n    return this.http.get<SalesOrderItem[]>(url, {\r\n      params: customParams,\r\n      observe: 'response'\r\n    });\r\n  }\r\n}\r\n","import { Subject, from, fromEvent } from 'rxjs';\nimport { mergeMap, map, filter, debounceTime, distinctUntilChanged, takeUntil } from 'rxjs/operators';\nimport { EventEmitter, Directive, ElementRef, Input, Output, NgModule } from '@angular/core';\n\nimport * as ɵngcc0 from '@angular/core';\nclass NgxBarCodePutDirective {\n    constructor(elementRef) {\n        this.elementRef = elementRef;\n        /**\n         * Input delay\n         */\n        this.debounce = 0;\n        /**\n         * After how many characters start search\n         */\n        this.skipStart = 0;\n        /**\n         * Data cleansing event\n         */\n        this.onDelete = new EventEmitter();\n        /**\n         * Event after data entry\n         */\n        this.onDetected = new EventEmitter();\n        /**\n         * Use for unsubscribe\n         */\n        this.destroy$ = new Subject();\n    }\n    ngAfterViewInit() {\n        /**\n         * Often the code scanner is connected to the computer.\n         * It emulates a press key, so we use keyboard events to press and release keys.\n         */\n        const events = ['keydown', 'keyup'];\n        /**\n         * Empty object for delay logic\n         */\n        const pressed = {};\n        /**\n         * Look at the\n         * {@Link http://reactivex.io/documentation/operators/from.html}\n         */\n        from(events)\n            .pipe(\n        /**\n         * Look at the\n         * {@Link https://rxjs-dev.firebaseapp.com/api/operators/mergeMap}\n         */\n        mergeMap((event) => fromEvent(this.elementRef.nativeElement, event)), \n        /**\n         * Prepare input data\n         */\n        map((event) => {\n            switch (event.type) {\n                case 'keydown':\n                    /**\n                     * Since \"which\" is deprecated, we use it for a temporary variable\n                     * and set the processing time keydown.\n                     */\n                    pressed[event.which] = event.timeStamp;\n                    break;\n                case 'keyup':\n                    /**\n                     * In the delay set the difference between keydown and keyup events.\n                     */\n                    Object.assign(event, { duration: (event.timeStamp - pressed[event.which]) / 1000 });\n                    break;\n            }\n            /**\n             * @return {event: KeyboardEvent}\n             */\n            return event;\n        }), filter((event) => {\n            if (event.keyCode === 8 || event.code === 'Backspace' || event.which === 8) {\n                /**\n                 * Used to clear data.\n                 */\n                this.onDelete.emit({ event, value: event.target.value, type: 'delete' });\n            }\n            /**\n             * Return data after typed in two characters.\n             */\n            return event.target.value.length > this.skipStart;\n        }), \n        /**\n         * Data entry delay is used to limit requests.\n         */\n        debounceTime(this.debounce), \n        /**\n         * Look at the\n         * {@Link http://reactivex.io/documentation/operators/distinct.html}\n         */\n        distinctUntilChanged())\n            /**\n             * Use for unsubscribe\n             */\n            .pipe(takeUntil(this.destroy$))\n            /**\n             * Subscribe to the input data and determine the delay time for our purposes.\n             */\n            .subscribe((event) => {\n            if (event.duration > 0.02) {\n                /**\n                 * Keyboard input.\n                 */\n                this.onDetected.emit({ event, value: event.target.value, time: event.duration, type: 'keyboard' });\n            }\n            else if (event.duration <= 0.02) {\n                /**\n                 * Input from the scanner.\n                 */\n                this.onDetected.emit({ event, value: event.target.value, time: event.duration, type: 'scanner' });\n            }\n        });\n    }\n    /**\n     * Use for unsubscribe\n     */\n    ngOnDestroy() {\n        this.destroy$.next(true);\n        this.destroy$.complete();\n    }\n}\nNgxBarCodePutDirective.ɵfac = function NgxBarCodePutDirective_Factory(t) { return new (t || NgxBarCodePutDirective)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef)); };\nNgxBarCodePutDirective.ɵdir = /*@__PURE__*/ ɵngcc0.ɵɵdefineDirective({ type: NgxBarCodePutDirective, selectors: [[\"\", \"ngxBarCodePut\", \"\"]], inputs: { debounce: \"debounce\", skipStart: \"skipStart\" }, outputs: { onDelete: \"onDelete\", onDetected: \"onDetected\" } });\nNgxBarCodePutDirective.ctorParameters = () => [\n    { type: ElementRef }\n];\nNgxBarCodePutDirective.propDecorators = {\n    debounce: [{ type: Input }],\n    skipStart: [{ type: Input }],\n    onDelete: [{ type: Output }],\n    onDetected: [{ type: Output }]\n};\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(NgxBarCodePutDirective, [{\n        type: Directive,\n        args: [{\n                selector: '[ngxBarCodePut]'\n            }]\n    }], function () { return [{ type: ɵngcc0.ElementRef }]; }, { debounce: [{\n            type: Input\n        }], skipStart: [{\n            type: Input\n        }], onDelete: [{\n            type: Output\n        }], onDetected: [{\n            type: Output\n        }] }); })();\n\nclass NgxBarCodePutModule {\n}\nNgxBarCodePutModule.ɵfac = function NgxBarCodePutModule_Factory(t) { return new (t || NgxBarCodePutModule)(); };\nNgxBarCodePutModule.ɵmod = /*@__PURE__*/ ɵngcc0.ɵɵdefineNgModule({ type: NgxBarCodePutModule });\nNgxBarCodePutModule.ɵinj = /*@__PURE__*/ ɵngcc0.ɵɵdefineInjector({});\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(NgxBarCodePutModule, [{\n        type: NgModule,\n        args: [{\n                declarations: [NgxBarCodePutDirective],\n                exports: [NgxBarCodePutDirective]\n            }]\n    }], null, null); })();\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(NgxBarCodePutModule, { declarations: [NgxBarCodePutDirective], exports: [NgxBarCodePutDirective] }); })();\n\n/*\n * Public API Surface of ngx-barcodeput\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { NgxBarCodePutDirective, NgxBarCodePutModule };\n\n"],"names":["Subject","from","fromEvent","mergeMap","map","filter","debounceTime","distinctUntilChanged","takeUntil","EventEmitter","Directive","ElementRef","Input","Output","NgModule","ɵngcc0","NgxBarCodePutDirective","constructor","elementRef","debounce","skipStart","onDelete","onDetected","destroy$","ngAfterViewInit","events","pressed","pipe","event","nativeElement","type","which","timeStamp","Object","assign","duration","keyCode","code","emit","value","target","length","subscribe","time","ngOnDestroy","next","complete","ɵfac","NgxBarCodePutDirective_Factory","t","ɵɵdirectiveInject","ɵdir","ɵɵdefineDirective","selectors","inputs","outputs","ctorParameters","propDecorators","ngDevMode","ɵsetClassMetadata","args","selector","NgxBarCodePutModule","NgxBarCodePutModule_Factory","ɵmod","ɵɵdefineNgModule","ɵinj","ɵɵdefineInjector","declarations","exports","ngJitMode","ɵɵsetNgModuleScope"],"sourceRoot":"webpack:///","x_google_ignoreList":[9]}