{"version":3,"file":"src_app_core_domain-classes_resource-parameter_ts-src_app_notification_notification_module_ts.js","mappings":"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","sources":["./src/app/core/domain-classes/resource-parameter.ts","./src/app/notification/notification-datasource.ts","./src/app/notification/notification-routing.module.ts","./src/app/notification/notification.component.ts","./src/app/notification/notification.component.html","./src/app/notification/notification.module.ts","./src/app/notification/notification.service.ts"],"sourcesContent":["export abstract class ResourceParameter {\r\n  fields = '';\r\n  orderBy = '';\r\n  searchQuery = '';\r\n  pageSize = 30;\r\n  skip = 0;\r\n  name = '';\r\n  totalCount = 0;\r\n}\r\n","import { DataSource } from '@angular/cdk/table';\r\nimport { HttpResponse } from '@angular/common/http';\r\nimport { ResponseHeader } from '@core/domain-classes/response-header';\r\nimport { BehaviorSubject, Observable, of, Subscription } from 'rxjs';\r\nimport { catchError, finalize } from 'rxjs/operators';\r\nimport { NotificationService } from './notification.service';\r\nimport { ReminderResourceParameter } from '@core/domain-classes/reminder-resource-parameter';\r\nimport { ReminderScheduler } from '@core/domain-classes/reminder-scheduler';\r\n\r\nexport class NotificationDataSource implements DataSource<ReminderScheduler> {\r\n  private _entities$ = new BehaviorSubject<ReminderScheduler[]>([]);\r\n  private _responseHeaderSubject$ = new BehaviorSubject<ResponseHeader>(null);\r\n  private loadingSubject$ = new BehaviorSubject<boolean>(false);\r\n  public loading$ = this.loadingSubject$.asObservable();\r\n  private _count: number = 0;\r\n  sub$: Subscription;\r\n\r\n  public get count(): number {\r\n    return this._count;\r\n  }\r\n  public responseHeaderSubject$ = this._responseHeaderSubject$.asObservable();\r\n\r\n  constructor(private notificationService: NotificationService) {\r\n    this.sub$ = new Subscription();\r\n  }\r\n\r\n  connect(): Observable<ReminderScheduler[]> {\r\n    return this._entities$.asObservable();\r\n  }\r\n\r\n  disconnect(): void {\r\n    this._entities$.complete();\r\n    this.loadingSubject$.complete();\r\n    this.sub$.unsubscribe();\r\n  }\r\n\r\n  loadData(resource: ReminderResourceParameter) {\r\n    this.loadingSubject$.next(true);\r\n    this.sub$ = this.notificationService.getNotifications(resource)\r\n      .pipe(\r\n        catchError(() => of([])),\r\n        finalize(() => this.loadingSubject$.next(false)))\r\n      .subscribe((resp: HttpResponse<ReminderScheduler[]>) => {\r\n        if (resp && resp.headers && resp.headers.get('X-Pagination')) {\r\n          const paginationParam = JSON.parse(\r\n            resp.headers.get('X-Pagination')\r\n          ) as ResponseHeader;\r\n          this._responseHeaderSubject$.next(paginationParam);\r\n          const entities = [...resp.body];\r\n          this._count = entities.length;\r\n          this._entities$.next(entities);\r\n        } else {\r\n          this._entities$.next([]);\r\n        }\r\n      });\r\n  }\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { RouterModule, Routes } from '@angular/router';\r\nimport { NotificationComponent } from './notification.component';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path:'',\r\n    component: NotificationComponent\r\n  }\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class NotificationRoutingModule { }\r\n","import { Component, OnInit, ViewChild } from '@angular/core';\r\nimport { MatPaginator } from '@angular/material/paginator';\r\nimport { MatSort } from '@angular/material/sort';\r\nimport { ReminderResourceParameter } from '@core/domain-classes/reminder-resource-parameter';\r\nimport { ReminderScheduler } from '@core/domain-classes/reminder-scheduler';\r\nimport { ResponseHeader } from '@core/domain-classes/response-header';\r\nimport { TranslationService } from '@core/services/translation.service';\r\nimport { merge, Observable, Subject } from 'rxjs';\r\nimport { debounceTime, distinctUntilChanged, tap } from 'rxjs/operators';\r\nimport { BaseComponent } from '../base.component';\r\nimport { NotificationDataSource } from './notification-datasource';\r\nimport { NotificationService } from './notification.service';\r\n\r\n@Component({\r\n  selector: 'app-notification',\r\n  templateUrl: './notification.component.html',\r\n  styleUrls: ['./notification.component.scss']\r\n})\r\nexport class NotificationComponent extends BaseComponent implements OnInit {\r\n  dataSource: NotificationDataSource;\r\n  reminders: ReminderScheduler[] = [];\r\n  displayedColumns: string[] = ['createdDate', 'subject', 'message'];\r\n  footerToDisplayed = ['footer'];\r\n  isLoadingResults = true;\r\n  reminderResource: ReminderResourceParameter;\r\n  loading$: Observable<boolean>;\r\n  @ViewChild(MatPaginator) paginator: MatPaginator;\r\n  @ViewChild(MatSort) sort: MatSort;\r\n  _subjectFilter: string;\r\n  _messageFilter: string;\r\n  _frequencyFilter: string;\r\n  public filterObservable$: Subject<string> = new Subject<string>();\r\n\r\n  public get SubjectFilter(): string {\r\n    return this._subjectFilter;\r\n  }\r\n\r\n  public set SubjectFilter(v: string) {\r\n    this._subjectFilter = v;\r\n    const subjectFilter = `subject:${v}`;\r\n    this.filterObservable$.next(subjectFilter);\r\n  }\r\n\r\n\r\n  public get MessageFilter(): string {\r\n    return this._messageFilter;\r\n  }\r\n  public set MessageFilter(v: string) {\r\n    this._messageFilter = v;\r\n    const messageFilter = `message:${v}`;\r\n    this.filterObservable$.next(messageFilter);\r\n  }\r\n\r\n  constructor(\r\n    private notificationService: NotificationService,\r\n    public translationService:TranslationService\r\n  ) {\r\n    super(translationService);\r\n    this.getLangDir();\r\n    this.reminderResource = new ReminderResourceParameter();\r\n    this.reminderResource.pageSize = 15;\r\n    this.reminderResource.orderBy = 'createdDate asc';\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.dataSource = new NotificationDataSource(this.notificationService);\r\n    this.dataSource.loadData(this.reminderResource);\r\n    this.getResourceParameter();\r\n    this.markAsReadNotification();\r\n    this.sub$.sink = this.filterObservable$\r\n      .pipe(\r\n        debounceTime(1000),\r\n        distinctUntilChanged())\r\n      .subscribe((c) => {\r\n        this.reminderResource.skip = 0;\r\n        this.paginator.pageIndex = 0;\r\n        const strArray: Array<string> = c.split(':');\r\n        if (strArray[0] === 'subject') {\r\n          this.reminderResource.subject = escape(strArray[1]);\r\n        } else if (strArray[0] === 'message') {\r\n          this.reminderResource.message = strArray[1];\r\n        }\r\n        this.dataSource.loadData(this.reminderResource);\r\n      });\r\n  }\r\n\r\n  markAsReadNotification() {\r\n    this.sub$.sink = this.notificationService.markAsReadNotifications()\r\n      .subscribe(c => {\r\n      });\r\n  }\r\n\r\n  getResourceParameter() {\r\n    this.sub$.sink = this.dataSource.responseHeaderSubject$\r\n      .subscribe((c: ResponseHeader) => {\r\n        if (c) {\r\n          this.reminderResource.pageSize = c.pageSize;\r\n          this.reminderResource.skip = c.skip;\r\n          this.reminderResource.totalCount = c.totalCount;\r\n        }\r\n      });\r\n  }\r\n\r\n  ngAfterViewInit() {\r\n    this.sub$.sink = this.sort.sortChange.subscribe(() => this.paginator.pageIndex = 0);\r\n    this.sub$.sink = merge(this.sort.sortChange, this.paginator.page)\r\n      .pipe(\r\n        tap((c: any) => {\r\n          this.reminderResource.skip = this.paginator.pageIndex * this.paginator.pageSize;\r\n          this.reminderResource.pageSize = this.paginator.pageSize;\r\n          this.reminderResource.orderBy = this.sort.active + ' ' + this.sort.direction;\r\n          this.dataSource.loadData(this.reminderResource);\r\n        })\r\n      )\r\n      .subscribe();\r\n  }\r\n}\r\n","<div class=\"page-header-main\">\r\n  <div class=\"row align-items-center justify-content-between\">\r\n    <div class=\"col-md-auto col-sm-auto\">\r\n      <div class=\"content-header\">\r\n        <h1>{{'NOTIFICATIONS' | translate}}</h1>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</div>\r\n<div class=\"row\">\r\n  <div class=\"col-sm-12\">\r\n    <div class=\"table-responsive grid-height\">\r\n      <table  [dir]=\"langDir\" mat-table [dataSource]=\"dataSource\" class=\"table table-bordered table-hover\" matSort\r\n        matSortActive=\"createdDate\" matSortDirection=\"desc\">\r\n        <ng-container matColumnDef=\"createdDate\">\r\n          <th class=\"table-column-150\" mat-header-cell *matHeaderCellDef mat-sort-header> {{'CREATED_DATE' | translate}}\r\n          </th>\r\n          <td class=\"table-column-150\" mat-cell *matCellDef=\"let reminder\"> {{reminder.createdDate |\r\n            utcToLocalTime:'short'}} </td>\r\n        </ng-container>\r\n        <ng-container matColumnDef=\"subject\">\r\n          <th class=\"table-column-300\" mat-header-cell *matHeaderCellDef mat-sort-header> {{'SUBJECT' | translate}}\r\n          </th>\r\n          <td class=\"table-column-300\" mat-cell *matCellDef=\"let reminder\">\r\n            <ng-container [ngSwitch]=\"reminder.application\">\r\n              <ng-container *ngSwitchCase=\"1\">\r\n                <b>\r\n                  <a [routerLink]=\"['/sales-order/detail',reminder.referenceId]\">\r\n                    {{reminder.subject}}</a>\r\n                </b>- {{'SALES_ORDER_EXPECTED_SHIPMENT_DATE' | translate}}.\r\n              </ng-container>\r\n              <ng-container *ngSwitchCase=\"2\">\r\n                <b>\r\n                  <a [routerLink]=\"['/purchase-order/detail',reminder.referenceId]\"> {{reminder.subject}}</a>\r\n                </b>-{{'PURCHASE_ORDER_EXPECTED_DELIVERY_DATE' | translate}}.\r\n              </ng-container>\r\n              <ng-container *ngSwitchDefault>\r\n                {{reminder.subject}}\r\n              </ng-container>\r\n            </ng-container>\r\n          </td>\r\n        </ng-container>\r\n        <ng-container matColumnDef=\"message\">\r\n          <th class=\"table-column-500\" mat-header-cell *matHeaderCellDef mat-sort-header> {{'MESSAGE' | translate}}\r\n          </th>\r\n          <td class=\"table-column-500\" mat-cell *matCellDef=\"let reminder\">\r\n            <ng-container [ngSwitch]=\"reminder.application\">\r\n              <ng-container *ngSwitchCase=\"1\">\r\n                <b> {{reminder.subject}}</b>-{{'SALES_ORDER_EXPECTED_SHIPMENT_DATE_IS' | translate}}\r\n                <b> {{reminder.duration | date:'MM/dd/yyyy'}}</b>\r\n              </ng-container>\r\n              <ng-container *ngSwitchCase=\"2\">\r\n                <b> {{reminder.subject}}</b>-{{'PURCHASE_ORDER_EXPECTED_DELIVERY_DATE_IS' | translate}}\r\n                <b> {{reminder.duration | date:'MM/dd/yyyy'}}</b>\r\n              </ng-container>\r\n              <ng-container *ngSwitchDefault>\r\n                {{reminder.subject}}\r\n              </ng-container>\r\n            </ng-container>\r\n          </td>\r\n        </ng-container>\r\n        <ng-container matColumnDef=\"footer\">\r\n          <td mat-footer-cell colspan=\"6\" *matFooterCellDef>\r\n            <mat-paginator [length]=\"reminderResource.totalCount\" [pageSize]=\"reminderResource.pageSize\"\r\n              [pageSizeOptions]=\"[15, 20, 30]\">\r\n            </mat-paginator>\r\n          </td>\r\n        </ng-container>\r\n        <tr *matNoDataRow>\r\n          <td colspan=\"9\">\r\n              <span class=\"p-4 mt-4\">\r\n                  <b> {{'NO_DATA_FOUND' | translate}}</b>\r\n              </span>\r\n          </td>\r\n      </tr>\r\n\r\n        <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\r\n        <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\"></tr>\r\n\r\n        <tr mat-footer-row *matFooterRowDef=\"footerToDisplayed\"></tr>\r\n      </table>\r\n    </div>\r\n  </div>\r\n</div>\r\n<div class=\"loading-shade\" *ngIf=\"dataSource.loading$ | async\">\r\n  <mat-spinner></mat-spinner>\r\n</div>\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\n\r\nimport { NotificationRoutingModule } from './notification-routing.module';\r\nimport { NotificationComponent } from './notification.component';\r\nimport { SharedModule } from '@shared/shared.module';\r\nimport { MatPaginatorModule } from '@angular/material/paginator';\r\nimport { MatSortModule } from '@angular/material/sort';\r\nimport { MatProgressSpinnerModule } from '@angular/material/progress-spinner';\r\nimport { MatTableModule } from '@angular/material/table';\r\nimport { MatDialogModule } from '@angular/material/dialog';\r\nimport { MatIconModule } from '@angular/material/icon';\r\nimport { MatButtonModule } from '@angular/material/button';\r\n\r\n\r\n@NgModule({\r\n  declarations: [NotificationComponent],\r\n  imports: [\r\n    CommonModule,\r\n    NotificationRoutingModule,\r\n    CommonModule,\r\n    SharedModule,\r\n    MatPaginatorModule,\r\n    MatSortModule,\r\n    MatProgressSpinnerModule,\r\n    MatTableModule,\r\n    MatDialogModule,\r\n    MatIconModule,\r\n    MatButtonModule\r\n  ]\r\n})\r\nexport class NotificationModule { }\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient, HttpParams, HttpResponse } from '@angular/common/http';\r\nimport { Observable } from 'rxjs';\r\nimport { ReminderScheduler } from '@core/domain-classes/reminder-scheduler';\r\nimport { ReminderResourceParameter } from '@core/domain-classes/reminder-resource-parameter';\r\n\r\n@Injectable({ providedIn: 'root' })\r\nexport class NotificationService {\r\n  constructor(private httpClient: HttpClient) { }\r\n\r\n  getNotifications(resourceParams: ReminderResourceParameter): Observable<HttpResponse<ReminderScheduler[]>> {\r\n    const url = 'reminder/notifications';\r\n    const customParams = new HttpParams()\r\n      .set('fields', resourceParams.fields)\r\n      .set('orderBy', resourceParams.orderBy)\r\n      .set('pageSize', resourceParams.pageSize.toString())\r\n      .set('skip', resourceParams.skip.toString())\r\n      .set('searchQuery', resourceParams.searchQuery);\r\n    return this.httpClient.get<ReminderScheduler[]>(url, {\r\n      params: customParams,\r\n      observe: 'response',\r\n    });\r\n\r\n  }\r\n  markAsReadNotifications(): Observable<boolean> {\r\n    const url = 'reminder/notification/markasread';\r\n    return this.httpClient.get<boolean>(url);\r\n  }\r\n\r\n}\r\n"],"names":[],"sourceRoot":"webpack:///","x_google_ignoreList":[]}