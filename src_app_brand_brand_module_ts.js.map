{"version":3,"file":"src_app_brand_brand_module_ts.js","mappings":"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","sources":["./src/app/brand/brand-list-presentation/brand-list-presentation.component.ts","./src/app/brand/brand-list-presentation/brand-list-presentation.component.html","./src/app/brand/brand-list/brand-list.component.ts","./src/app/brand/brand-list/brand-list.component.html","./src/app/brand/brand-routing.module.ts","./src/app/brand/brand.module.ts","./src/app/brand/manage-brand/manage-brand.component.ts","./src/app/brand/manage-brand/manage-brand.component.html","./src/app/core/domain-classes/brand.ts"],"sourcesContent":["import { Component, EventEmitter, Input, OnInit, Output, ViewChild, AfterViewInit } from '@angular/core';\r\nimport { MatDialog } from '@angular/material/dialog';\r\nimport { CommonDialogService } from '@core/common-dialog/common-dialog.service';\r\nimport { Brand } from '@core/domain-classes/brand';\r\nimport { TranslationService } from '@core/services/translation.service';\r\nimport { environment } from '@environments/environment';\r\nimport { BaseComponent } from 'src/app/base.component';\r\nimport { ManageBrandComponent } from '../manage-brand/manage-brand.component';\r\nimport { MatPaginator } from '@angular/material/paginator';\r\nimport { MatTableDataSource } from '@angular/material/table';\r\n\r\n\r\n@Component({\r\n  selector: 'app-brand-list-presentation',\r\n  templateUrl: './brand-list-presentation.component.html',\r\n  styleUrls: ['./brand-list-presentation.component.scss']\r\n})\r\nexport class BrandListPresentationComponent extends BaseComponent {\r\n  @Input() set brands(value: Brand[]) {\r\n    this.dataSource = new MatTableDataSource<Brand>(value);\r\n    this.dataSource.paginator = this.paginator;\r\n  };\r\n\r\n  @Input() loading: boolean = false;\r\n  @Output() deleteBrandHandler: EventEmitter<string> = new EventEmitter<string>();\r\n  dataSource = new MatTableDataSource<Brand>();\r\n  @ViewChild(MatPaginator, { static: true }) paginator: MatPaginator;\r\n\r\n  displayedColumns: string[] = ['action', 'imageUrl', 'name'];\r\n  footerToDisplayed = ['footer'];\r\n  baseUrl = environment.apiUrl;\r\n\r\n  constructor(\r\n    private dialog: MatDialog,\r\n    private commonDialogService: CommonDialogService,\r\n    public translationService: TranslationService\r\n  ) {\r\n    super(translationService);\r\n    this.getLangDir();\r\n  }\r\n\r\n  deleteBrand(brand: Brand): void {\r\n    const areU = this.translationService.getValue('ARE_YOU_SURE_YOU_WANT_TO_DELETE');\r\n    this.sub$.sink = this.commonDialogService.deleteConformationDialog(`${areU} :: ${brand.name}`)\r\n      .subscribe(isTrue => {\r\n        if (isTrue) {\r\n          this.deleteBrandHandler.emit(brand.id);\r\n        }\r\n      });\r\n  }\r\n\r\n  manageBrand(brand: Brand): void {\r\n    this.dialog.open(ManageBrandComponent, {\r\n      width: '110vh',\r\n      direction:this.langDir,\r\n      data: Object.assign({}, brand)\r\n    });\r\n  }\r\n\r\n}\r\n","<div class=\"page-header-main\">\r\n    <div class=\"row align-items-center justify-content-between\">\r\n        <div class=\"col-md-auto col-sm-auto col\">\r\n            <div class=\"content-header\">\r\n                <h1>{{\"BRANDS\" | translate}}</h1>\r\n            </div>\r\n        </div>\r\n        <div *hasClaim=\"'PRO_MANAGE_BRAND'\" class=\"col-md-auto col-sm-auto col-auto\">\r\n            <button class=\"btn blue-btn btn-sm m-right-10\" (click)=\"manageBrand({})\">\r\n                <i class=\"fas fa-plus\"></i>\r\n                {{\"ADD_BRAND\" | translate}}\r\n            </button>\r\n        </div>\r\n    </div>\r\n</div>\r\n\r\n<div class=\"loading-shade\" *ngIf=\"!loading\">\r\n    <mat-spinner></mat-spinner>\r\n</div>\r\n<div class=\"table-responsive\">\r\n    <table mat-table  [dir]=\"langDir\" [dataSource]=\"dataSource\"  class=\"table table-bordered table-hover\">\r\n        <ng-container matColumnDef=\"action\">\r\n            <th class=\"table-column-200\" mat-header-cell *matHeaderCellDef> {{\"ACTION\" | translate}} </th>\r\n            <td class=\"table-column-200\" mat-cell *matCellDef=\"let element\">\r\n                <button *hasClaim=\"'PRO_MANAGE_BRAND'\" (click)=\"manageBrand(element)\" class=\"btn btn-success btn-sm m-right-10\" type=\"button\">\r\n                    <i class=\"fas fa-pencil-alt\"></i>\r\n                    <span class=\"d-none d-sm-inline\"> {{\"EDIT\" | translate}}</span>\r\n                </button>\r\n                <button *hasClaim=\"'PRO_MANAGE_BRAND'\" (click)=\"deleteBrand(element)\" class=\"btn btn-danger btn-sm\" type=\"button\">\r\n                    <i class=\"fas fa-trash-alt\"></i>\r\n                    <span class=\"d-none d-sm-inline\"> {{\"DELETE\" | translate}}</span>\r\n                </button>\r\n            </td>\r\n        </ng-container>\r\n        <ng-container matColumnDef=\"imageUrl\">\r\n            <th mat-header-cell *matHeaderCellDef> </th>\r\n            <td mat-cell *matCellDef=\"let brand\">\r\n                <ng-container *ngIf=\"brand.imageUrl; else noImage\">\r\n                    <img class=\"img-thumbnail brand-thumbnail my-2\" [src]=\"baseUrl + brand.imageUrl\" alt=\"Brand Image\">\r\n                </ng-container>\r\n                <ng-template #noImage>\r\n                    <img class=\"img-thumbnail brand-thumbnail my-2\" src=\"assets//images/no-preview.jpg\"\r\n                        alt=\"Brand Image\">\r\n                </ng-template>\r\n            </td>\r\n        </ng-container>\r\n        <!-- Name Column -->\r\n        <ng-container matColumnDef=\"name\">\r\n            <th mat-header-cell *matHeaderCellDef> {{\"NAME\" | translate}} </th>\r\n            <td mat-cell *matCellDef=\"let element\"> {{element.name}} </td>\r\n        </ng-container>\r\n        <!-- <ng-container matColumnDef=\"footer\">\r\n          <td mat-footer-cell colspan=\"3\" *matFooterCellDef>\r\n            <mat-paginator [pageSizeOptions]=\"[10, 15, 20]\" showFirstLastButtons>\r\n            </mat-paginator>\r\n          </td>\r\n      </ng-container> -->\r\n\r\n        <tr mat-header-row *matHeaderRowDef=\"displayedColumns;sticky: true\"></tr>\r\n        <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\"></tr>\r\n        <!-- <tr mat-footer-row *matFooterRowDef=\"footerToDisplayed;sticky: true\"></tr> -->\r\n    </table>\r\n\r\n</div>\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { Brand } from '@core/domain-classes/brand';\r\nimport { BrandService } from '@core/services/brand.service';\r\nimport { TranslationService } from '@core/services/translation.service';\r\nimport { ToastrService } from 'ngx-toastr';\r\nimport { Observable } from 'rxjs';\r\nimport { tap } from 'rxjs/operators';\r\nimport { BaseComponent } from 'src/app/base.component';\r\n\r\n@Component({\r\n  selector: 'app-brand-list',\r\n  templateUrl: './brand-list.component.html',\r\n  styleUrls: ['./brand-list.component.scss']\r\n})\r\nexport class BrandListComponent extends BaseComponent implements OnInit {\r\n  brands$: Observable<Brand[]>;\r\n  loading$: Observable<boolean>;\r\n  constructor(\r\n    private brandService: BrandService,\r\n    public translationService: TranslationService,\r\n    private toastrService: ToastrService) {\r\n    super(translationService);\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.loading$ = this.brandService.loaded$\r\n      .pipe(\r\n        tap(loaded => {\r\n          if (!loaded) {\r\n            this.getBrands();\r\n          }\r\n        })\r\n      )\r\n    this.brands$ = this.brandService.entities$\r\n  }\r\n\r\n  getBrands() {\r\n    this.brandService.getAll();\r\n  }\r\n\r\n  deleteBrand(id: string): void {\r\n    this.sub$.sink = this.brandService.delete(id).subscribe(() => {\r\n      this.toastrService.success(this.translationService.getValue('BRAND_DELETED_SUCCESSFULLY'));\r\n    });\r\n  }\r\n}\r\n","<app-brand-list-presentation [brands]=\"brands$ | async\" [loading]=\"loading$ | async\"\r\n  (deleteBrandHandler)=\"deleteBrand($event)\">\r\n</app-brand-list-presentation>\r\n","import { NgModule } from '@angular/core';\r\nimport { RouterModule, Routes } from '@angular/router';\r\nimport { AuthGuard } from '@core/security/auth.guard';\r\nimport { BrandListComponent } from './brand-list/brand-list.component';\r\n\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: '',\r\n    component: BrandListComponent,\r\n    data: { claimType: 'PRO_MANAGE_BRAND' },\r\n    canActivate: [AuthGuard]\r\n  }\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class BrandRoutingModule { }\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { BrandListComponent } from './brand-list/brand-list.component';\r\nimport { BrandListPresentationComponent } from './brand-list-presentation/brand-list-presentation.component';\r\nimport { ManageBrandComponent } from './manage-brand/manage-brand.component';\r\nimport { BrandRoutingModule } from './brand-routing.module';\r\nimport { ReactiveFormsModule } from '@angular/forms';\r\nimport { MatTableModule } from '@angular/material/table';\r\nimport { MatProgressSpinnerModule } from '@angular/material/progress-spinner';\r\nimport { MatDialogModule } from '@angular/material/dialog';\r\nimport { SharedModule } from '@shared/shared.module';\r\nimport { MatCardModule } from '@angular/material/card';\r\nimport { MatPaginatorModule } from '@angular/material/paginator';\r\n\r\n\r\n\r\n@NgModule({\r\n  declarations: [\r\n    BrandListComponent,\r\n    BrandListPresentationComponent,\r\n    ManageBrandComponent\r\n  ],\r\n  imports: [\r\n    CommonModule,\r\n    BrandRoutingModule,\r\n    ReactiveFormsModule,\r\n    MatTableModule,\r\n    MatProgressSpinnerModule,\r\n    MatDialogModule,\r\n    SharedModule,\r\n    MatCardModule,\r\n    MatPaginatorModule,\r\n  ]\r\n})\r\nexport class BrandModule { }\r\n","import { Component, Inject, OnInit } from '@angular/core';\r\nimport { UntypedFormBuilder, UntypedFormGroup, Validators } from '@angular/forms';\r\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\r\nimport { Brand } from '@core/domain-classes/brand';\r\nimport { BrandService } from '@core/services/brand.service';\r\nimport { TranslationService } from '@core/services/translation.service';\r\nimport { ToastrService } from 'ngx-toastr';\r\nimport { BaseComponent } from 'src/app/base.component';\r\nimport { environment } from '@environments/environment';\r\n\r\n@Component({\r\n  selector: 'app-manage-brand',\r\n  templateUrl: './manage-brand.component.html',\r\n  styleUrls: ['./manage-brand.component.scss']\r\n})\r\nexport class ManageBrandComponent extends BaseComponent implements OnInit {\r\n  isEdit: boolean = false;\r\n  brandForm: UntypedFormGroup;\r\n  imgSrc: any = null;\r\n  isImageUpload: boolean = false;\r\n  constructor(\r\n    public dialogRef: MatDialogRef<ManageBrandComponent>,\r\n    @Inject(MAT_DIALOG_DATA) public data: Brand,\r\n    private brandService: BrandService,\r\n    private toastrService: ToastrService,\r\n    private fb: UntypedFormBuilder,\r\n    public translationService: TranslationService) {\r\n    super(translationService);\r\n    this.getLangDir();\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.createForm();\r\n    if (this.data.id) {\r\n      this.brandForm.patchValue(this.data);\r\n      this.isEdit = true;\r\n      if (this.data.imageUrl) {\r\n        this.imgSrc = `${environment.apiUrl}${this.data.imageUrl}`;\r\n      }\r\n    }\r\n    else {\r\n      this.imgSrc = '';\r\n    }\r\n  }\r\n\r\n  createForm() {\r\n    this.brandForm = this.fb.group({\r\n      id: [''],\r\n      name: ['', Validators.required]\r\n    });\r\n  }\r\n\r\n  onFileSelect($event) {\r\n    const fileSelected = $event.target.files[0];\r\n    if (!fileSelected) {\r\n      return;\r\n    }\r\n    const mimeType = fileSelected.type;\r\n    if (mimeType.match(/image\\/*/) == null) {\r\n      return;\r\n    }\r\n    const reader = new FileReader();\r\n    reader.readAsDataURL(fileSelected);\r\n    reader.onload = (_event) => {\r\n      this.imgSrc = reader.result;\r\n      this.isImageUpload = true;\r\n      $event.target.value = '';\r\n    }\r\n  }\r\n\r\n  onRemoveImage() {\r\n    this.isImageUpload = true;\r\n    this.imgSrc = '';\r\n  }\r\n\r\n  onCancel(): void {\r\n    this.dialogRef.close();\r\n  }\r\n\r\n  saveBrand(): void {\r\n    if (!this.brandForm.valid) {\r\n      this.brandForm.markAllAsTouched();\r\n      return;\r\n    }\r\n    const brand: Brand = this.brandForm.value;\r\n    brand.imageUrlData = this.imgSrc;\r\n    brand.isImageChanged = this.isImageUpload;\r\n\r\n    if (this.data.id) {\r\n      this.brandService.update(brand).subscribe(() => {\r\n        this.toastrService.success(this.translationService.getValue('BRAND_SAVED_SUCCESSFULLY'));\r\n        this.dialogRef.close();\r\n      });\r\n    } else {\r\n      this.brandService.add(brand).subscribe(() => {\r\n        this.toastrService.success(this.translationService.getValue('BRAND_SAVED_SUCCESSFULLY'));\r\n        this.dialogRef.close();\r\n      });\r\n    }\r\n  }\r\n}\r\n","<div class=\"modal-content1\">\r\n    <div class=\"modal-header\">\r\n        <div class=\"d-flex w-100 align-items-center justify-content-between\">\r\n            <div class=\"col-md-9 col\">\r\n                <h4 class=\"modal-title\">\r\n                    {{'MANAGE_BRAND' | translate}}\r\n                </h4>\r\n            </div>\r\n            <div class=\"col-sm-auto col-auto ml-auto\">\r\n                <button type=\"button\" class=\"close\" (click)=\"onCancel()\" data-dismiss=\"modal\">\r\n                    <i class=\"fas fa-times\"></i>\r\n                </button>\r\n            </div>\r\n        </div>\r\n    </div>\r\n    <form [formGroup]=\"brandForm\">\r\n        <div class=\"modal-body\">\r\n            <div class=\"row\">\r\n                <div class=\"col-md-12\">\r\n                    <div class=\"form-group\">\r\n                        <label class=\"text-danger\" for=\"brandName\">{{'BRAND_NAME' | translate}} *</label>\r\n                        <input formControlName=\"name\" type=\"text\" class=\"form-control\" id=\"brandName\">\r\n                        <div *ngIf=\"brandForm.get('name').touched && brandForm.get('name').errors\">\r\n                            <div class=\"text-danger\"\r\n                                *ngIf=\"brandForm.get('name').touched && brandForm.get('name').errors?.required\">\r\n                                {{'BRAND_NAME_IS_REQUIRED' | translate}}\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div class=\"col-md-3 p-2\">\r\n                <label>\r\n                    {{'UPLOAD_LOGO' | translate}}\r\n                </label>\r\n                <mat-card class=\"cus-mat-card text-center\" [dir]=\"langDir\">\r\n                    <input hidden (change)=\"onFileSelect($event)\" #fileInput name=\"logo\" type=\"file\"\r\n                        name=\"Profile Image\" fxFlex=\"30\">\r\n                    <img *ngIf=\"imgSrc\" class=\"full-width\" [src]=\"imgSrc\" />\r\n                    <img *ngIf=\"!imgSrc\" class=\"full-width\" src=\"assets/images/no-preview.jpg\" />\r\n                    <mat-card-actions>\r\n                        <button type=\"button\" *ngIf=\"!imgSrc\" class=\"btn btn-success btn-sm m-right-15\"\r\n                            (click)=\"fileInput.click()\">\r\n                            <i class=\"far fa-image\"></i> {{'ADD_LOGO' | translate}}</button>\r\n                        <button type=\"button\" *ngIf=\"imgSrc\" class=\"btn btn-success btn-sm m-right-10\"\r\n                            (click)=\"fileInput.click()\">\r\n                            <i class=\"far fa-image\"></i> {{'CHANGE_LOGO' | translate}}</button>\r\n                        <button *ngIf=\"imgSrc\" type=\"button\" (click)=\"onRemoveImage()\" class=\"btn btn-danger btn-sm\">\r\n                            <i class=\"fas fa-trash-alt\"></i> {{'REMOVE_LOGO' | translate}}</button>\r\n                    </mat-card-actions>\r\n                </mat-card>\r\n            </div>\r\n        </div>\r\n        <div class=\"modal-footer\">\r\n            <div class=\"form-row w-100\">\r\n                <div class=\"col-md-auto col-auto\">\r\n                    <button *hasClaim=\"'PRO_MANAGE_BRAND'\" class=\"btn btn-success btn-sm m-right-10\"\r\n                        (click)=\"saveBrand()\" cdkFocusInitial><i class=\"fas fa-save\"></i>\r\n                        {{\"SAVE\" | translate}}\r\n                    </button>\r\n                    <button class=\"btn btn-danger btn-sm\" (click)=\"onCancel()\">\r\n                        <i class=\"fas fa-times-circle\"></i>\r\n                        {{\"CANCEL\" | translate}}\r\n                    </button>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </form>\r\n</div>","export class Brand {\r\n    id?: string;\r\n    name: string;\r\n    imageUrl: string;\r\n    imageUrlData?: string;\r\n    isImageChanged?: boolean;\r\n}"],"names":[],"sourceRoot":"webpack:///","x_google_ignoreList":[]}