{"version":3,"file":"default-src_app_core_domain-classes_sales-order-resource-parameter_ts-src_app_customer_custom-3e5c04.js","mappings":"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","sources":["./src/app/core/domain-classes/sales-order-resource-parameter.ts","./src/app/core/domain-classes/sales-order-status.ts","./src/app/customer/customer.service.ts","./src/app/sales-order/sales-order-datasource.ts","./src/app/sales-order/sales-order.service.ts"],"sourcesContent":["import { ResourceParameter } from './resource-parameter';\r\nimport { SalesOrderStatusEnum } from './sales-order-status';\r\n\r\nexport class SalesOrderResourceParameter extends ResourceParameter {\r\n    orderNumber?: string = '';\r\n    customerName?: string = '';\r\n    sOCreatedDate?: Date;\r\n    customerId?: string = '';\r\n    fromDate?: Date;\r\n    toDate?: Date;\r\n    productId: string;\r\n    isSalesOrderRequest: boolean = false;\r\n    status?: SalesOrderStatusEnum = SalesOrderStatusEnum.All;\r\n    productName?: string;\r\n}\r\n","export enum SalesOrderStatusEnum {\r\n  Not_Return = 0,\r\n  Return = 1,\r\n  All = 2\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { Observable, of } from 'rxjs';\r\nimport { HttpResponse, HttpClient, HttpParams } from '@angular/common/http';\r\nimport { Guid } from 'guid-typescript';\r\nimport { CustomerResourceParameter } from '@core/domain-classes/customer-resource-parameter';\r\nimport { Customer } from '@core/domain-classes/customer';\r\nimport { CustomerList } from '@core/domain-classes/customer-list';\r\nimport { SupplierPayment } from '@core/domain-classes/supplier-payment';\r\nimport { CustomerPayment } from '@core/domain-classes/customer-payment';\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class CustomerService {\r\n  constructor(private http: HttpClient) {}\r\n\r\n  getCustomers(\r\n    resourceParams: CustomerResourceParameter\r\n  ): Observable<HttpResponse<Customer[]>> {\r\n    const url = 'customer';\r\n    const customParams = new HttpParams()\r\n      .set('fields', resourceParams.fields)\r\n      .set('orderBy', resourceParams.orderBy)\r\n      .set('pageSize', resourceParams.pageSize.toString())\r\n      .set('skip', resourceParams.skip.toString())\r\n      .set('searchQuery', resourceParams.searchQuery)\r\n      .set('customerName', resourceParams.customerName)\r\n      .set('mobileNo', resourceParams.mobileNo)\r\n      .set('phoneNo', resourceParams.phoneNo)\r\n      .set('email', resourceParams.email)\r\n      .set('contactPerson', resourceParams.contactPerson)\r\n      .set('website', resourceParams.website);\r\n    return this.http.get<Customer[]>(url, {\r\n      params: customParams,\r\n      observe: 'response',\r\n    });\r\n  }\r\n\r\n  getCustomersForDropDown(\r\n    searchBy: string,\r\n    searchString: string\r\n  ): Observable<Customer[]> {\r\n    const url = 'customer/search';\r\n    if (searchString && searchBy) {\r\n      let params = `?searchQuery=${searchString.trim()}&searchBy=${searchBy}&pageSize=10`;\r\n      return this.http.get<Customer[]>(url + params);\r\n    }\r\n    return of([]);\r\n  }\r\n\r\n  getWalkInCustomer() {\r\n    const url = 'customer/walkIn';\r\n    return this.http.get<Customer>(url);\r\n  }\r\n\r\n  getCustomer(id: string): Observable<Customer> {\r\n    const url = 'customer/' + id;\r\n    return this.http.get<Customer>(url);\r\n  }\r\n\r\n  deleteCustomer(id: string): Observable<void> {\r\n    const url = 'customer/' + id;\r\n    return this.http.delete<void>(url);\r\n  }\r\n  updateCustomer(id: string, customer: Customer): Observable<Customer> {\r\n    const url = 'customer/' + id;\r\n    return this.http.put<Customer>(url, customer);\r\n  }\r\n  saveCustomer(customer: Customer): Observable<Customer> {\r\n    const url = 'customer';\r\n    return this.http.post<Customer>(url, customer);\r\n  }\r\n  checkEmailOrPhoneExist(\r\n    email: string,\r\n    mobileNo: string,\r\n    id: string | Guid\r\n  ): Observable<boolean> {\r\n    const url = `customer/${id}/Exist?email=${email}&mobileNo=${mobileNo}`;\r\n    return this.http.get<boolean>(url);\r\n  }\r\n\r\n  getCustomerPayments(\r\n    resourceParams: CustomerResourceParameter\r\n  ): Observable<HttpResponse<CustomerPayment[]>> {\r\n    const url = 'customer/GetCustomerPayment';\r\n    const customParams = new HttpParams()\r\n      .set('Fields', resourceParams.fields)\r\n      .set('OrderBy', resourceParams.orderBy)\r\n      .set('PageSize', resourceParams.pageSize.toString())\r\n      .set('Skip', resourceParams.skip.toString())\r\n      .set('SearchQuery', resourceParams.searchQuery)\r\n      .set('customerName', resourceParams.customerName);\r\n    return this.http.get<CustomerPayment[]>(url, {\r\n      params: customParams,\r\n      observe: 'response',\r\n    });\r\n  }\r\n\r\n  getCustomerPaymentsReport(\r\n    resourceParams: CustomerResourceParameter\r\n  ): Observable<HttpResponse<CustomerPayment[]>> {\r\n    const url = 'customer/GetCustomerPayment/report';\r\n    const customParams = new HttpParams()\r\n      .set('Fields', resourceParams.fields)\r\n      .set('OrderBy', resourceParams.orderBy)\r\n      .set('PageSize', resourceParams.pageSize.toString())\r\n      .set('Skip', resourceParams.skip.toString())\r\n      .set('SearchQuery', resourceParams.searchQuery)\r\n      .set('customerName', resourceParams.customerName);\r\n    return this.http.get<CustomerPayment[]>(url, {\r\n      params: customParams,\r\n      observe: 'response',\r\n    });\r\n  }\r\n}\r\n","import { DataSource } from '@angular/cdk/table';\r\nimport { HttpResponse } from '@angular/common/http';\r\nimport { ResponseHeader } from '@core/domain-classes/response-header';\r\nimport { SalesOrder } from '@core/domain-classes/sales-order';\r\nimport { SalesOrderResourceParameter } from '@core/domain-classes/sales-order-resource-parameter';\r\nimport { BehaviorSubject, Observable, of, Subscription } from 'rxjs';\r\nimport { catchError, finalize } from 'rxjs/operators';\r\nimport { SalesOrderService } from './sales-order.service';\r\n\r\nexport class SalesOrderDataSource implements DataSource<SalesOrder> {\r\n  private _salesOrderSubject$ = new BehaviorSubject<SalesOrder[]>([]);\r\n  private _responseHeaderSubject$ = new BehaviorSubject<ResponseHeader>(null);\r\n  private loadingSubject = new BehaviorSubject<boolean>(false);\r\n\r\n  public loading$ = this.loadingSubject.asObservable();\r\n  private _count: number = 0;\r\n  sub$: Subscription;\r\n\r\n  public get count(): number {\r\n    return this._count;\r\n  }\r\n  public responseHeaderSubject$ = this._responseHeaderSubject$.asObservable();\r\n\r\n  constructor(private salesOrderService: SalesOrderService) {\r\n  }\r\n\r\n  connect(): Observable<SalesOrder[]> {\r\n    this.sub$ = new Subscription();\r\n    return this._salesOrderSubject$.asObservable();\r\n  }\r\n\r\n  disconnect(): void {\r\n    this._salesOrderSubject$.complete();\r\n    this.loadingSubject.complete();\r\n    this.sub$.unsubscribe();\r\n  }\r\n\r\n  loadData(salesOrderResource: SalesOrderResourceParameter) {\r\n    this.loadingSubject.next(true);\r\n    this.sub$ = this.salesOrderService.getAllSalesOrder(salesOrderResource)\r\n      .pipe(\r\n        catchError(() => of([])),\r\n        finalize(() => this.loadingSubject.next(false)))\r\n      .subscribe((resp: HttpResponse<SalesOrder[]>) => {\r\n        if (resp && resp.headers) {\r\n          const paginationParam = JSON.parse(\r\n            resp.headers.get('X-Pagination')\r\n          ) as ResponseHeader;\r\n          this._responseHeaderSubject$.next(paginationParam);\r\n          const salesOrders = [...resp.body];\r\n          this._count = salesOrders.length;\r\n          this._salesOrderSubject$.next(salesOrders);\r\n        }\r\n      });\r\n  }\r\n}\r\n","import { HttpClient, HttpEvent, HttpParams, HttpResponse } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { SalesOrder } from '@core/domain-classes/sales-order';\r\nimport { SalesOrderItem } from '@core/domain-classes/sales-order-item';\r\nimport { SalesOrderResourceParameter } from '@core/domain-classes/sales-order-resource-parameter';\r\nimport { CommonError } from '@core/error-handler/common-error';\r\nimport { CommonHttpErrorService } from '@core/error-handler/common-http-error.service';\r\nimport { Observable } from 'rxjs';\r\nimport { catchError } from 'rxjs/operators';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class SalesOrderService {\r\n\r\n\r\n  constructor(private http: HttpClient,\r\n    private commonHttpErrorService: CommonHttpErrorService) { }\r\n\r\n  getAllSalesOrder(\r\n    resourceParams: SalesOrderResourceParameter\r\n  ): Observable<HttpResponse<SalesOrder[]>> {\r\n    const url = 'salesOrder';\r\n    const customParams = new HttpParams()\r\n      .set('Fields', resourceParams.fields)\r\n      .set('OrderBy', resourceParams.orderBy)\r\n      .set('PageSize', resourceParams.pageSize.toString())\r\n      .set('Skip', resourceParams.skip.toString())\r\n      .set('SearchQuery', resourceParams.searchQuery)\r\n      .set('name', resourceParams.name)\r\n      .set('orderNumber', resourceParams.orderNumber)\r\n      .set('customerName', resourceParams.customerName)\r\n      .set('fromDate', resourceParams.fromDate ? resourceParams.fromDate.toDateString() : '')\r\n      .set('toDate', resourceParams.toDate ? resourceParams.toDate.toDateString() : '')\r\n      .set('productId', resourceParams.productId ? resourceParams.productId : '')\r\n      .set('customerId', resourceParams.customerId ? resourceParams.customerId : '')\r\n      .set('status', resourceParams.status);\r\n    return this.http.get<SalesOrder[]>(url, {\r\n      params: customParams,\r\n      observe: 'response'\r\n    });\r\n  }\r\n\r\n  getAllSalesOrderExcel(\r\n    resourceParams: SalesOrderResourceParameter\r\n  ): Observable<HttpResponse<SalesOrder[]>> {\r\n    const url = 'salesOrder';\r\n    const customParams = new HttpParams()\r\n      .set('Fields', resourceParams.fields)\r\n      .set('OrderBy', resourceParams.orderBy)\r\n      .set('PageSize', 0)\r\n      .set('Skip', 0)\r\n      .set('SearchQuery', resourceParams.searchQuery)\r\n      .set('name', resourceParams.name)\r\n      .set('orderNumber', resourceParams.orderNumber)\r\n      .set('customerName', resourceParams.customerName)\r\n      .set('fromDate', resourceParams.fromDate ? resourceParams.fromDate.toDateString() : '')\r\n      .set('toDate', resourceParams.toDate ? resourceParams.toDate.toDateString() : '')\r\n      .set('productId', resourceParams.productId ? resourceParams.productId : '')\r\n      .set('customerId', resourceParams.customerId ? resourceParams.customerId : '');\r\n    return this.http.get<SalesOrder[]>(url, {\r\n      params: customParams,\r\n      observe: 'response'\r\n    });\r\n  }\r\n\r\n  addSalesOrder(salesOrder: SalesOrder): Observable<SalesOrder | CommonError> {\r\n    const url = `salesOrder`;\r\n    return this.http.post<SalesOrder>(url, salesOrder)\r\n      .pipe(catchError(this.commonHttpErrorService.handleError));\r\n  }\r\n\r\n  updateSalesOrder(salesOrder: SalesOrder): Observable<SalesOrder | CommonError> {\r\n    const url = `salesOrder/${salesOrder.id}`;\r\n    return this.http.put<SalesOrder>(url, salesOrder)\r\n      .pipe(catchError(this.commonHttpErrorService.handleError));\r\n  }\r\n\r\n\r\n  updateSalesOrderReturn(salesOrder: SalesOrder): Observable<SalesOrder | CommonError> {\r\n    const url = `salesOrder/${salesOrder.id}/return`;\r\n    return this.http.put<SalesOrder>(url, salesOrder)\r\n      .pipe(catchError(this.commonHttpErrorService.handleError));\r\n  }\r\n\r\n  deleteSalesOrder(id: string): Observable<void | CommonError> {\r\n    const url = `salesOrder/${id}`;\r\n    return this.http.delete<void>(url)\r\n      .pipe(catchError(this.commonHttpErrorService.handleError));\r\n  }\r\n\r\n  getNewSalesOrderNumber(): Observable<SalesOrder> {\r\n    const url = `salesOrder/newOrderNumber`;\r\n    return this.http.get<SalesOrder>(url);\r\n  }\r\n\r\n  getSalesOrderById(salesOrderId: string): Observable<SalesOrder> {\r\n    const url = `salesOrder/${salesOrderId}`;\r\n    return this.http.get<SalesOrder>(url);\r\n  }\r\n\r\n  getSalesOrderItems(salesOrderId: string, isReturn: boolean = false): Observable<SalesOrderItem[]> {\r\n    const url = `salesOrder/${salesOrderId}/items?isReturn=${isReturn}`;\r\n    return this.http.get<SalesOrderItem[]>(url);\r\n  }\r\n\r\n  downloadAttachment(id: string): Observable<HttpEvent<Blob>> {\r\n    const url = `salesOrderAttachment/${id}/download`;\r\n    return this.http.get(url, {\r\n      reportProgress: true,\r\n      observe: 'events',\r\n      responseType: 'blob',\r\n    });\r\n  }\r\n\r\n  getSalesOrderItemReport(\r\n    resourceParams: SalesOrderResourceParameter\r\n  ): Observable<HttpResponse<SalesOrderItem[]>> {\r\n    const url = 'salesOrder/items/reports';\r\n    const customParams = new HttpParams()\r\n      .set('Fields', resourceParams.fields)\r\n      .set('OrderBy', resourceParams.orderBy)\r\n      .set('PageSize', resourceParams.pageSize.toString())\r\n      .set('Skip', resourceParams.skip.toString())\r\n      .set('SearchQuery', resourceParams.searchQuery)\r\n      .set('name', resourceParams.name)\r\n      .set('orderNumber', resourceParams.orderNumber)\r\n      .set('customerName', resourceParams.customerName)\r\n      .set('fromDate', resourceParams.fromDate ? resourceParams.fromDate.toDateString() : '')\r\n      .set('toDate', resourceParams.toDate ? resourceParams.toDate.toDateString() : '')\r\n      .set('productId', resourceParams.productId ? resourceParams.productId : '')\r\n      .set('productName', resourceParams.productName ? resourceParams.productName : '')\r\n      .set('customerId', resourceParams.customerId ? resourceParams.customerId : '')\r\n      .set('isSalesOrderRequest', resourceParams.isSalesOrderRequest)\r\n    return this.http.get<SalesOrderItem[]>(url, {\r\n      params: customParams,\r\n      observe: 'response'\r\n    });\r\n  }\r\n}\r\n"],"names":[],"sourceRoot":"webpack:///","x_google_ignoreList":[]}