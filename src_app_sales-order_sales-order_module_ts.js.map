{"version":3,"file":"src_app_sales-order_sales-order_module_ts.js","mappings":"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","sources":["./src/app/sales-order/sales-order-add-edit/sales-order-add-edit.component.ts","./src/app/sales-order/sales-order-add-edit/sales-order-add-edit.component.html","./src/app/sales-order/sales-order-detail/sales-order-detail.component.ts","./src/app/sales-order/sales-order-detail/sales-order-detail.component.html","./src/app/sales-order/sales-order-list/sales-order-items/sales-order-items.component.ts","./src/app/sales-order/sales-order-list/sales-order-items/sales-order-items.component.html","./src/app/sales-order/sales-order-list/sales-order-list.component.ts","./src/app/sales-order/sales-order-list/sales-order-list.component.html","./src/app/sales-order/sales-order-routing.module.ts","./src/app/sales-order/sales-order.module.ts"],"sourcesContent":["import { HttpResponse } from '@angular/common/http';\r\nimport { Component, OnInit } from '@angular/core';\r\nimport { UntypedFormArray, UntypedFormBuilder, UntypedFormGroup, Validators } from '@angular/forms';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { Customer } from '@core/domain-classes/customer';\r\nimport { CustomerResourceParameter } from '@core/domain-classes/customer-resource-parameter';\r\nimport { DeliveryStatusEnum } from '@core/domain-classes/delivery-status-enum';\r\nimport { Product } from '@core/domain-classes/product';\r\nimport { ProductResourceParameter } from '@core/domain-classes/product-resource-parameter';\r\nimport { SalesOrder } from '@core/domain-classes/sales-order';\r\nimport { SalesOrderItem } from '@core/domain-classes/sales-order-item';\r\nimport { SalesOrderItemTax } from '@core/domain-classes/sales-order-item-tax';\r\nimport { SalesOrderStatusEnum } from '@core/domain-classes/sales-order-status';\r\nimport { Tax } from '@core/domain-classes/tax';\r\nimport { Unit } from '@core/domain-classes/unit';\r\nimport { CommonService } from '@core/services/common.service';\r\nimport { TaxService } from '@core/services/tax.service';\r\nimport { TranslationService } from '@core/services/translation.service';\r\nimport { QuantitiesUnitPriceTaxPipe } from '@shared/pipes/quantities-unitprice-tax.pipe';\r\nimport { QuantitiesUnitPricePipe } from '@shared/pipes/quantities-unitprice.pipe';\r\nimport { ToastrService } from 'ngx-toastr';\r\nimport { Observable, of } from 'rxjs';\r\nimport { debounceTime, distinctUntilChanged, switchMap, tap } from 'rxjs/operators';\r\nimport { BaseComponent } from 'src/app/base.component';\r\nimport { CustomerService } from 'src/app/customer/customer.service';\r\nimport { ProductService } from 'src/app/product/product.service';\r\nimport { SalesOrderService } from '../sales-order.service';\r\nimport { UnitConversationService } from 'src/app/unit-conversation/unit-conversation.service';\r\nimport { UnitConversation } from '@core/domain-classes/unit-conversation';\r\nimport { Operators } from '@core/domain-classes/operator';\r\nimport { Warehouse } from '@core/domain-classes/warehouse';\r\n\r\n@Component({\r\n  selector: 'app-sales-order-add-edit',\r\n  templateUrl: './sales-order-add-edit.component.html',\r\n  styleUrls: ['./sales-order-add-edit.component.scss'],\r\n  viewProviders: [QuantitiesUnitPricePipe, QuantitiesUnitPriceTaxPipe]\r\n})\r\nexport class SalesOrderAddEditComponent extends BaseComponent {\r\n\r\n  taxes$: Observable<Tax[]>;\r\n  salesOrderForm: UntypedFormGroup;\r\n  products: Product[] = [];\r\n  customers: Customer[] = [];\r\n  warehouseList: Warehouse[] = [];\r\n  customerResource: CustomerResourceParameter;\r\n  productResource: ProductResourceParameter;\r\n  isLoading: boolean = false;\r\n  isCustomerLoading: boolean = false;\r\n  filterProductsMap: { [key: string]: Product[] } = {};\r\n  unitsMap: { [key: string]: UnitConversation[] } = {};\r\n  warehouseMap: { [key: string]: Warehouse[] } = {};\r\n  unitConversationlist: UnitConversation[] = [];\r\n  taxsMap: { [key: string]: Tax[] } = {};\r\n  totalBeforeDiscount: number = 0;\r\n  totalAfterDiscount: number = 0;\r\n  totalDiscount: number = 0;\r\n  grandTotal: number = 0;\r\n  totalTax: number = 0;\r\n  timeoutclear: any;\r\n  salesOrder: SalesOrder;\r\n  isEdit: boolean = false;\r\n\r\n  get salesOrderItemsArray(): UntypedFormArray {\r\n    return <UntypedFormArray>this.salesOrderForm.get('salesOrderItems');\r\n  }\r\n\r\n  constructor(\r\n    private fb: UntypedFormBuilder,\r\n    private customerService: CustomerService,\r\n    private toastrService: ToastrService,\r\n    private salesOrderService: SalesOrderService,\r\n    private router: Router,\r\n    private taxService: TaxService,\r\n    private productService: ProductService,\r\n    private route: ActivatedRoute,\r\n    private quantitiesUnitPricePipe: QuantitiesUnitPricePipe,\r\n    private quantitiesUnitPriceTaxPipe: QuantitiesUnitPriceTaxPipe,\r\n    public translationService: TranslationService,\r\n    private unitConversationService: UnitConversationService\r\n  ) {\r\n    super(translationService);\r\n    this.getLangDir();\r\n    this.customerResource = new CustomerResourceParameter();\r\n    this.productResource = new ProductResourceParameter();\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.unitConversationlist = [... this.route.snapshot.data['units']];\r\n    this.warehouseList = [... this.route.snapshot.data['warehouses']];\r\n    this.getSalesOrderById();\r\n    this.createSalesOrder();\r\n    this.customerNameChangeValue();\r\n    this.getNewSalesOrderNumber();\r\n    this.getTaxes();\r\n    this.getProductByBarCodeValue();\r\n  }\r\n\r\n  onFilterValue(filterValue: any) {\r\n    console.log(filterValue);\r\n  }\r\n\r\n  getTaxes() {\r\n    this.taxes$ = this.taxService.entities$;\r\n  }\r\n\r\n  createSalesOrder() {\r\n    this.route.data\r\n      .pipe(\r\n    )\r\n      .subscribe((salesOrderData: { 'salesorder': SalesOrder }) => {\r\n        this.salesOrder = salesOrderData.salesorder;\r\n        if (this.salesOrder) {\r\n          this.isEdit = true;\r\n          this.salesOrderForm = this.fb.group({\r\n            orderNumber: [this.salesOrder.orderNumber, [Validators.required]],\r\n            filerCustomer: [''],\r\n            deliveryDate: [this.salesOrder.deliveryDate, [Validators.required]],\r\n            soCreatedDate: [this.salesOrder.soCreatedDate, [Validators.required]],\r\n            deliveryStatus: [this.salesOrder.deliveryStatus],\r\n            customerId: [this.salesOrder.customerId, [Validators.required]],\r\n            note: [this.salesOrder.note],\r\n            filterBarCodeValue: [''],\r\n            termAndCondition: [this.salesOrder.termAndCondition],\r\n            salesOrderItems: this.fb.array([])\r\n          });\r\n          this.salesOrder.salesOrderItems.forEach(c => {\r\n            this.salesOrderItemsArray.push(this.createSalesOrderItemPatch(this.salesOrderItemsArray.length, c));\r\n          });\r\n          this.getCustomers();\r\n          this.getAllTotal();\r\n        } else {\r\n          this.isEdit = false;\r\n          this.getCustomers();\r\n          this.salesOrderForm = this.fb.group({\r\n            orderNumber: ['', [Validators.required]],\r\n            filerCustomer: [''],\r\n            deliveryDate: [new Date(), [Validators.required]],\r\n            soCreatedDate: [new Date(), [Validators.required]],\r\n            deliveryStatus: [1],\r\n            customerId: ['', [Validators.required]],\r\n            note: [''],\r\n            filterBarCodeValue: [''],\r\n            termAndCondition: [''],\r\n            salesOrderItems: this.fb.array([])\r\n          });\r\n          this.salesOrderItemsArray.push(this.createSalesOrderItem(this.salesOrderItemsArray.length));\r\n        }\r\n      });\r\n  }\r\n\r\n  getProductByBarCodeValue() {\r\n    this.sub$.sink = this.salesOrderForm.get('filterBarCodeValue').valueChanges\r\n      .pipe(\r\n        debounceTime(500),\r\n        distinctUntilChanged(),\r\n        switchMap(c => {\r\n          if (c) {\r\n            this.productResource.barcode = c;\r\n            return this.productService.getProducts(this.productResource);\r\n          } {\r\n            return of([]);\r\n          }\r\n        })\r\n      ).subscribe((resp: HttpResponse<Product[]>) => {\r\n        if (resp && resp.headers) {\r\n          if (resp.body.length == 1) {\r\n\r\n            if (this.salesOrderItemsArray.length == 1) {\r\n              if (!this.salesOrderItemsArray.controls[0].get('productId').value) {\r\n                this.onRemoveSalesOrderItem(0);\r\n              }\r\n            }\r\n\r\n            const productId = (resp.body[0] as Product).id;\r\n            let purchaseOrderItems: SalesOrderItem[] = this.salesOrderItemsArray.value;\r\n            var existingProductIndex = purchaseOrderItems.findIndex(c => c.productId == productId);\r\n\r\n            if (existingProductIndex >= 0) {\r\n              let iteamToUpdate = purchaseOrderItems[existingProductIndex];\r\n              this.salesOrderItemsArray.at(existingProductIndex).get('quantity').patchValue(iteamToUpdate.quantity + 1)\r\n            } else {\r\n              this.onAddAnotherProduct();\r\n              const currentIndex = this.salesOrderItemsArray.length - 1;\r\n              this.filterProductsMap[currentIndex.toString()] = [...resp.body];\r\n              this.onProductSelectionChange(productId, currentIndex, false);\r\n            }\r\n            this.getAllTotal();\r\n          } else {\r\n            this.toastrService.warning('Product not found');\r\n          }\r\n          this.productResource.barcode = '';\r\n          this.salesOrderForm.get('filterBarCodeValue').patchValue('');\r\n        }\r\n      }, (err) => {\r\n\r\n      });\r\n  }\r\n\r\n  onAddAnotherProduct() {\r\n    this.salesOrderItemsArray.push(this.createSalesOrderItem(this.salesOrderItemsArray.length));\r\n  }\r\n\r\n  createSalesOrderItemPatch(index: number, salesOrderItem: SalesOrderItem) {\r\n    const taxs = salesOrderItem.salesOrderItemTaxes.map(c => c.taxId);\r\n    const formGroup = this.fb.group({\r\n      productId: [salesOrderItem.productId, [Validators.required]],\r\n      filterProductValue: [''],\r\n      unitPrice: [salesOrderItem.unitPrice, [Validators.required]],\r\n      quantity: [salesOrderItem.quantity, [Validators.required]],\r\n      taxValue: [taxs],\r\n      unitId: [salesOrderItem.unitId, [Validators.required]],\r\n      warehouseId: [salesOrderItem.warehouseId],\r\n\r\n      discountPercentage: [salesOrderItem.discountPercentage]\r\n    });\r\n    this.unitsMap[index] = this.unitConversationlist.filter(c => c.id == salesOrderItem.product.unitId || c.parentId == salesOrderItem.product.unitId);\r\n    this.taxsMap[index] = [... this.route.snapshot.data['taxs']];\r\n    this.warehouseMap[index] = this.warehouseList;\r\n    this.filterProductsMap[index.toString()] = [salesOrderItem.product];\r\n    return formGroup;\r\n  }\r\n\r\n  createSalesOrderItem(index: number) {\r\n    const formGroup = this.fb.group({\r\n      productId: ['', [Validators.required]],\r\n      filterProductValue: [''],\r\n      unitPrice: [0, [Validators.required, Validators.min(0)]],\r\n      quantity: [1, [Validators.required, Validators.min(1)]],\r\n      taxValue: [null],\r\n      unitId: ['', [Validators.required]],\r\n      warehouseId: [''],\r\n      discountPercentage: [0,[Validators.min(0)]]\r\n    });\r\n    // this.unitsMap[index] = [... this.route.snapshot.data['units']];\r\n    this.taxsMap[index] = [... this.route.snapshot.data['taxs']];\r\n    this.warehouseMap[index] = this.warehouseList;\r\n    this.filterProductsMap[index.toString()] = [...this.route.snapshot.data['products']];\r\n    this.getProductByNameValue(formGroup, index);\r\n    return formGroup;\r\n  }\r\n\r\n  getProductByNameValue(formGroup: UntypedFormGroup, index: number) {\r\n    if (this.salesOrder) {\r\n      this.getProducts(index);\r\n    }\r\n    this.sub$.sink = formGroup.get('filterProductValue').valueChanges\r\n      .pipe(\r\n        debounceTime(500),\r\n        distinctUntilChanged(),\r\n        switchMap(c => {\r\n          this.productResource.name = c;\r\n          return this.productService.getProducts(this.productResource);\r\n        })\r\n      ).subscribe((resp: HttpResponse<Product[]>) => {\r\n        if (resp && resp.headers) {\r\n          this.filterProductsMap[index.toString()] = [...resp.body];\r\n        }\r\n      }, (err) => {\r\n\r\n      });\r\n\r\n  }\r\n\r\n  getAllTotal() {\r\n    let salesOrderItems = this.salesOrderForm.get('salesOrderItems').value;\r\n    this.totalBeforeDiscount = 0;\r\n    this.grandTotal = 0;\r\n    this.totalDiscount = 0;\r\n    this.totalTax = 0;\r\n    if (salesOrderItems && salesOrderItems.length > 0) {\r\n      salesOrderItems.forEach(so => {\r\n        if (so.unitPrice && so.quantity) {\r\n          const totalBeforeDiscount = this.totalBeforeDiscount + parseFloat(this.quantitiesUnitPricePipe.transform(so.quantity, so.unitPrice));\r\n          this.totalBeforeDiscount = parseFloat(totalBeforeDiscount.toFixed(2));\r\n          const gradTotal = this.grandTotal + parseFloat(this.quantitiesUnitPricePipe.transform(so.quantity, so.unitPrice, so.discountPercentage, so.taxValue, this.taxsMap[0]));\r\n          this.grandTotal = parseFloat(gradTotal.toFixed(2));\r\n          const totalTax = this.totalTax + parseFloat(this.quantitiesUnitPriceTaxPipe.transform(so.quantity, so.unitPrice, so.discountPercentage, so.taxValue, this.taxsMap[0]));\r\n          this.totalTax = parseFloat(totalTax.toFixed(2));\r\n          const totalDiscount = this.totalDiscount + parseFloat(this.quantitiesUnitPriceTaxPipe.transform(so.quantity, so.unitPrice, so.discountPercentage));\r\n          this.totalDiscount = parseFloat(totalDiscount.toFixed(2));\r\n        }\r\n      })\r\n    }\r\n  }\r\n\r\n  onUnitPriceChange() {\r\n    this.getAllTotal();\r\n  }\r\n  onQuantityChange() {\r\n    this.getAllTotal();\r\n  }\r\n  onDiscountChange() {\r\n    this.getAllTotal();\r\n  }\r\n  onTaxSelectionChange() {\r\n    this.getAllTotal();\r\n  }\r\n\r\n  onRemoveSalesOrderItem(index: number) {\r\n    this.salesOrderItemsArray.removeAt(index);\r\n    this.salesOrderItemsArray.controls.forEach((c: UntypedFormGroup, index: number) => {\r\n      const productId = c.get('productId').value;\r\n      if (productId) {\r\n        this.salesOrder.salesOrderItems.map(pi => {\r\n          if (pi.product.id === productId) {\r\n            if (this.products.find(c => c.id === productId)) {\r\n              this.getProducts(index);\r\n            } else {\r\n              this.getProducts(index, productId);\r\n            }\r\n          }\r\n        });\r\n      } else {\r\n        this.getProducts(index);\r\n      }\r\n    });\r\n\r\n    this.getAllTotal();\r\n  }\r\n\r\n  getProducts(index: number, productId?: string) {\r\n    if (this.products.length === 0 || productId) {\r\n      this.productResource.name = '';\r\n      this.productResource.id = productId ? productId : '';\r\n      this.productService.getProducts(this.productResource)\r\n        .subscribe((resp: HttpResponse<Product[]>) => {\r\n          this.products = [...resp.body];\r\n          this.filterProductsMap[index.toString()] = [...resp.body];\r\n        }, (err) => {\r\n        });\r\n    } else {\r\n      this.filterProductsMap[index.toString()] = [...this.products];\r\n    }\r\n\r\n  }\r\n\r\n  setUnitConversationForProduct(id: string, index: number) {\r\n    this.unitsMap[index] = this.unitConversationlist.filter(c => c.id == id || c.parentId == id);\r\n  }\r\n\r\n  onSelectionChange(unitId: any, index: number, isFromUI = true) {\r\n    const productId = this.salesOrderItemsArray.controls[index].get('productId').value;\r\n    const product = this.filterProductsMap[index].find(c => c.id === productId);\r\n    const unit = this.unitConversationlist.find(c => c.id === unitId);\r\n    let price = 0;\r\n\r\n    if (unit.value) {\r\n      switch (unit.operator) {\r\n        case Operators.Plush:\r\n          price = product.salesPrice + parseFloat(unit.value);\r\n          break;\r\n        case Operators.Minus:\r\n          price = product.salesPrice - parseFloat(unit.value);\r\n          break;\r\n        case Operators.Multiply:\r\n          price = product.salesPrice * parseFloat(unit.value);\r\n          break;\r\n        case Operators.Divide:\r\n          price = product.salesPrice / parseFloat(unit.value);\r\n          break;\r\n      }\r\n      this.salesOrderItemsArray.controls[index].patchValue({\r\n        unitPrice: price,\r\n      });\r\n\r\n    } else {\r\n      this.salesOrderItemsArray.controls[index].patchValue({\r\n        unitPrice: product.salesPrice,\r\n        warehouseId: product.warehouseId\r\n      });\r\n    }\r\n  }\r\n\r\n\r\n  onProductSelectionChange(productId: any, index: number, isFromUI = true) {\r\n    const product = this.filterProductsMap[index].find((c: Product) => c.id === productId);\r\n    this.setUnitConversationForProduct(product.unitId, index);\r\n    if (isFromUI) {\r\n      this.salesOrderItemsArray.controls[index].patchValue({\r\n        filterProductValue: '',\r\n        unitPrice: ''\r\n      });\r\n    } else {\r\n      this.salesOrderItemsArray.controls[index].patchValue({\r\n        productId: productId\r\n      });\r\n    }\r\n\r\n    this.salesOrderItemsArray.controls[index].patchValue({\r\n      unitPrice:product.salesPrice,\r\n      unitId:product.unitId,\r\n      warehouseId: product.warehouseId\r\n    });\r\n\r\n    if (product.productTaxes.length) {\r\n      this.salesOrderItemsArray.controls[index].patchValue({\r\n        taxValue: product.productTaxes.map(c => c.taxId)\r\n      });\r\n    }\r\n    this.getAllTotal();\r\n  }\r\n\r\n  getNewSalesOrderNumber() {\r\n    this.salesOrderService.getNewSalesOrderNumber().subscribe(salesOrder => {\r\n      if (!this.salesOrder) {\r\n        this.salesOrderForm.patchValue({\r\n          orderNumber: salesOrder.orderNumber\r\n        });\r\n      }\r\n    });\r\n  }\r\n\r\n\r\n  customerNameChangeValue() {\r\n    this.sub$.sink = this.salesOrderForm.get('filerCustomer').valueChanges\r\n      .pipe(\r\n        tap(c => this.isCustomerLoading = true),\r\n        debounceTime(500),\r\n        distinctUntilChanged(),\r\n        switchMap(c => {\r\n          this.customerResource.customerName = c;\r\n          this.customerResource.id = null;\r\n          return this.customerService.getCustomers(this.customerResource);\r\n        })\r\n      ).subscribe((resp: HttpResponse<Customer[]>) => {\r\n        this.isCustomerLoading = false;\r\n        if (resp && resp.headers) {\r\n          this.customers = [...resp.body];\r\n        }\r\n      }, (err) => {\r\n        this.isCustomerLoading = false;\r\n      });\r\n  }\r\n\r\n  getCustomers() {\r\n\r\n    if (this.salesOrder) {\r\n      this.customerResource.id = this.salesOrder.customerId;\r\n    } else {\r\n      this.customerResource.customerName = '';\r\n      this.customerResource.id = null;\r\n    }\r\n    this.customerService.getCustomers(this.customerResource)\r\n      .subscribe(resp => {\r\n        if (resp && resp.headers) {\r\n          this.customers = [...resp.body];\r\n        }\r\n      });\r\n  }\r\n\r\n  onSalesOrderSubmit() {\r\n    if (!this.salesOrderForm.valid) {\r\n      this.salesOrderForm.markAllAsTouched();\r\n    } else {\r\n      if (this.salesOrder && this.salesOrder.salesOrderStatus === SalesOrderStatusEnum.Return) {\r\n        this.toastrService.error(this.translationService.getValue('RETURN_SALES_ORDER_CANT_BE_EDIT'));\r\n        return;\r\n      }\r\n      const salesOrder = this.buildSalesOrder();\r\n      if (salesOrder.id) {\r\n        this.salesOrderService.updateSalesOrder(salesOrder)\r\n          .subscribe((c: SalesOrder) => {\r\n            this.toastrService.success(this.translationService.getValue(\"SALES_ORDER_UPDATED_SUCCESSFULLY\"));\r\n            this.router.navigate(['/sales-order/list']);\r\n          })\r\n      } else {\r\n        this.salesOrderService.addSalesOrder(salesOrder)\r\n          .subscribe((c: SalesOrder) => {\r\n            this.toastrService.success(this.translationService.getValue(\"SALES_ORDER_ADDED_SUCCESSFULLY\"));\r\n            this.router.navigate(['/sales-order/list']);\r\n          });\r\n      }\r\n\r\n    }\r\n  }\r\n\r\n  buildSalesOrder() {\r\n    const salesOrder: SalesOrder = {\r\n      id: this.salesOrder ? this.salesOrder.id : '',\r\n      orderNumber: this.salesOrderForm.get('orderNumber').value,\r\n      deliveryDate: this.salesOrderForm.get('deliveryDate').value,\r\n      deliveryStatus: DeliveryStatusEnum.UnDelivery,\r\n      isSalesOrderRequest: false,\r\n      soCreatedDate: this.salesOrderForm.get('soCreatedDate').value,\r\n      salesOrderStatus: SalesOrderStatusEnum.Not_Return,\r\n      customerId: this.salesOrderForm.get('customerId').value,\r\n      totalAmount: this.grandTotal,\r\n      totalDiscount: this.totalDiscount,\r\n      totalTax: this.totalTax,\r\n      note: this.salesOrderForm.get('note').value,\r\n      termAndCondition: this.salesOrderForm.get('termAndCondition').value,\r\n      salesOrderItems: []\r\n    };\r\n\r\n    const salesOrderItems = this.salesOrderForm.get('salesOrderItems').value;\r\n    if (salesOrderItems && salesOrderItems.length > 0) {\r\n      salesOrderItems.forEach(so => {\r\n        salesOrder.salesOrderItems.push(\r\n          {\r\n            discount: parseFloat(this.quantitiesUnitPriceTaxPipe.transform(so.quantity, so.unitPrice, so.discountPercentage)),\r\n            discountPercentage: so.discountPercentage,\r\n            productId: so.productId,\r\n            unitId: so.unitId,\r\n            warehouseId: so.warehouseId,\r\n            quantity: so.quantity,\r\n            taxValue: parseFloat(this.quantitiesUnitPriceTaxPipe.transform(so.quantity, so.unitPrice, so.discountPercentage, so.taxValue, this.taxsMap[0])),\r\n            unitPrice: parseFloat(so.unitPrice),\r\n            salesOrderItemTaxes: so.taxValue ? [\r\n              ...so.taxValue.map(element => {\r\n                const salesOrderItemTaxes: SalesOrderItemTax = {\r\n                  taxId: element\r\n                };\r\n                return salesOrderItemTaxes;\r\n              })\r\n            ] : []\r\n          }\r\n        )\r\n      })\r\n    }\r\n    return salesOrder;\r\n  }\r\n  onSalesOrderList() {\r\n    this.router.navigate(['/sales-order/list']);\r\n  }\r\n\r\n  getSalesOrderById() {\r\n    this.salesOrder = this.route.snapshot.data['salesorder'];\r\n    if (this.salesOrder) {\r\n\r\n    }\r\n  }\r\n\r\n}\r\n\r\n\r\n","<div class=\"page-header-main\">\r\n  <div class=\"row align-items-center justify-content-between\">\r\n    <div class=\"col-md-auto col-sm-auto\">\r\n      <div class=\"content-header\">\r\n        <h1>{{\"MANAGE_SALES_ORDERS\" | translate}}</h1>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</div>\r\n<form autocomplete=\"off\" [formGroup]=\"salesOrderForm\" >\r\n  <div class=\"row\">\r\n    <div class=\"col-md-3\">\r\n      <div class=\"form-group\">\r\n        <label class=\"text-danger\">{{\"SO_NUMBER\" | translate}} <span>*</span></label>\r\n        <input formControlName=\"orderNumber\" class=\"form-control w-100\" type=\"text\" [readonly]=\"this.isEdit\">\r\n        <div *ngIf=\"salesOrderForm.get('orderNumber').touched && salesOrderForm.get('orderNumber').errors\">\r\n          <div class=\"text-danger\" *ngIf=\"salesOrderForm.get('orderNumber').errors?.required\">\r\n            {{'SO_ORDER_NUMBER_IS_REQUIRED' | translate}}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n    <div class=\"col-md-3\">\r\n      <div class=\"form-group\">\r\n        <label class=\"text-danger\" for=\"soCreatedDate\">{{'ORDER_DATE' | translate}} *</label>\r\n        <input class=\"form-control\" id=\"soCreatedDate\" formControlName=\"soCreatedDate\"\r\n          [owlDateTimeTrigger]=\"soCreatedDate\" [owlDateTime]=\"soCreatedDate\"\r\n          placeholder=\"{{'DELIVERY_DATE' | translate}}\">\r\n        <div *ngIf=\"salesOrderForm.get('soCreatedDate').touched && salesOrderForm.get('soCreatedDate').errors\">\r\n          <div class=\"text-danger\" *ngIf=\"salesOrderForm.get('soCreatedDate').errors?.required\">\r\n            {{'ORDER_DATE_IS_REQUIRED' | translate}}\r\n          </div>\r\n        </div>\r\n        <owl-date-time [pickerType]=\"'calendar'\" #soCreatedDate></owl-date-time>\r\n      </div>\r\n    </div>\r\n    <div class=\"col-md-3\">\r\n      <div class=\"form-group\">\r\n        <label class=\"text-danger\" for=\"deliveryDate\">{{'DELIVERY_DATE' | translate}} *</label>\r\n        <input class=\"form-control\" id=\"deliveryDate\" formControlName=\"deliveryDate\" [owlDateTimeTrigger]=\"deliveryDate\"\r\n          [owlDateTime]=\"deliveryDate\" placeholder=\"{{'DELIVERY_DATE' | translate}}\">\r\n        <div *ngIf=\"salesOrderForm.get('deliveryDate').touched && salesOrderForm.get('deliveryDate').errors\">\r\n          <div class=\"text-danger\" *ngIf=\"salesOrderForm.get('deliveryDate').errors?.required\">\r\n            {{'DELIVERY_DATE_REQUIRED' | translate}}\r\n          </div>\r\n        </div>\r\n        <owl-date-time [pickerType]=\"'calendar'\" #deliveryDate></owl-date-time>\r\n      </div>\r\n    </div>\r\n    <div class=\"col-md-3\">\r\n      <div class=\"form-group\">\r\n        <label class=\"text-danger\">{{'CUSTOMER_NAME' | translate}} *</label>\r\n        <div class=\"input-group\">\r\n          <mat-select [dir]=\"langDir\" formControlName=\"customerId\" placeholder=\"{{'SELECT_CUSTOMER' | translate}} \"\r\n            class=\"form-control\">\r\n            <input class=\"form-control w-100\" formControlName=\"filerCustomer\" focused=\"'true'\" type=\"text\"\r\n              autocomplete=\"off\" placeholder=\"{{'SEARCH_OTHER_CUSTOMERS' |translate}}\">\r\n            <mat-divider></mat-divider>\r\n            <mat-option [dir]=\"langDir\" *ngFor=\"let customer of customers\" [value]=\"customer.id\">\r\n              {{customer.customerName}}\r\n            </mat-option>\r\n            <mat-option [value]=\"\" *ngIf=\"customers.length==0\">\r\n              {{\"NO_RECORDS\" | translate}}\r\n            </mat-option>\r\n          </mat-select>\r\n        </div>\r\n        <div *ngIf=\"salesOrderForm.get('customerId').touched && salesOrderForm.get('customerId').errors\">\r\n          <div class=\"text-danger\" *ngIf=\"salesOrderForm.get('customerId').errors?.required\">\r\n            {{'CUSTOMER_NAME_IS_REQUIRED' | translate}}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n  <div class=\"row\">\r\n    <div class=\"col-md-6\">\r\n      <div class=\"form-group\">\r\n        <label>{{'TERM_AND_CONDITION' | translate}} </label>\r\n        <div class=\"input-group\">\r\n          <textarea formControlName=\"termAndCondition\" class=\"form-control w-100\">\r\n            </textarea>\r\n        </div>\r\n      </div>\r\n    </div>\r\n    <div class=\"col-md-6\">\r\n      <div class=\"form-group\">\r\n        <label>{{'NOTES' | translate}} </label>\r\n        <div class=\"input-group\">\r\n          <textarea formControlName=\"note\" class=\"form-control w-100\">\r\n            </textarea>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n  <div class=\"row\">\r\n    <div class=\"col-sm-12 col-md-12\">\r\n      <div class=\"row\">\r\n        <div class=\"col-sm-6 col-md-6 col-lg-6\">\r\n          <h6>{{\"SCAN_BARCODE\" | translate}}</h6>\r\n          <input #filterValue class=\"form-control w-100\" formControlName=\"filterBarCodeValue\" type=\"text\"\r\n            placeholder=\"{{'SCAN_BARCODE' | translate}}\">\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n  <div class=\"row\">\r\n    <div class=\"col-sm-12\" formArrayName=\"salesOrderItems\">\r\n      <div class=\"row\">\r\n        <div class=\"col-sm-12 text-right mb-2\">\r\n          <button type=\"button\" class=\"btn blue-btn btn-sm m-right-10\" (click)=\"onAddAnotherProduct()\">\r\n            <i class=\"fas fa-plus\"></i> {{\"ADD_ANOTHER_PRODUCT\" | translate}}\r\n          </button>\r\n        </div>\r\n      </div>\r\n      <div class=\"row\">\r\n        <div class=\"col\">\r\n          <div class=\"table-responsive\">\r\n            <table class=\"table table-bordered table-hover table-sm\">\r\n              <tr>\r\n                <th class=\"table-column-10\">\r\n                  &nbsp;\r\n                </th>\r\n                <th class=\"table-column-200\">\r\n                  {{'PRODUCT' | translate}}\r\n                </th>\r\n                <th class=\"table-column-200\">\r\n                  {{'WAREHOUSE' | translate}}\r\n                </th>\r\n                <th class=\"table-column-150\">\r\n                  {{'UNIT' | translate}}\r\n                </th>\r\n                <th class=\"table-column-130\">\r\n                  {{'PRICE' | translate}}\r\n                </th>\r\n                <th class=\"table-column-120\">\r\n                  {{'QUANTITY' | translate}}\r\n                </th>\r\n                <th class=\"table-column-100\">\r\n                  {{'SUBTOTAL_BEFORE_DISCOUNT' | translate}}\r\n                </th>\r\n                <th class=\"table-column-100\">\r\n                  {{'DISCOUNT' | translate}}%\r\n                </th>\r\n                <th class=\"table-column-100\">\r\n                  {{'SUBTOTAL_AFTER_DISCOUNT' | translate}}\r\n                </th>\r\n                <th class=\"table-column-300\">\r\n                  {{'TAX' | translate}}\r\n                </th>\r\n                <th class=\"table-column-150\">\r\n                  {{'TOTAL' | translate}}\r\n                </th>\r\n              </tr>\r\n              <tr [formGroupName]=\"i\" *ngFor=\"let salesOrderItem of salesOrderItemsArray?.controls; let i = index\">\r\n                <td>\r\n                  <button type=\"button\" *ngIf=\"salesOrderItemsArray?.controls.length !==1\" (click)=\"onRemoveSalesOrderItem(i)\"\r\n                    mat-icon-button aria-label=\"Action\">\r\n                    <mat-icon class=\"btn-danger\">delete_forever</mat-icon>\r\n                  </button>\r\n                </td>\r\n                <td>\r\n                  <mat-select [dir]=\"langDir\" formControlName=\"productId\" placeholder=\"{{'SELECT_PRODUCT' | translate}}\"\r\n                    (selectionChange)=\"onProductSelectionChange($event.value,i)\" class=\"form-control\">\r\n                    <input class=\"form-control w-100\" formControlName=\"filterProductValue\" focused=\"'true'\" type=\"text\"\r\n                      autocomplete=\"off\" placeholder=\"{{'SEARCH_OTHER_PRODUCTS' | translate}}\">\r\n                    <mat-divider></mat-divider>\r\n                    <mat-option [dir]=\"langDir\" *ngFor=\"let a of filterProductsMap[i]\" [value]=\"a.id\">\r\n                      {{a.name}}\r\n                    </mat-option>\r\n                    <mat-option [value]=\"\" *ngIf=\"filterProductsMap[i].length==0\">\r\n                      {{'NO_RECORDS' | translate}}\r\n                    </mat-option>\r\n                  </mat-select>\r\n                  <div *ngIf=\"salesOrderItem.get('productId').touched && salesOrderItem.get('productId').errors\">\r\n                    <div class=\"text-danger\" *ngIf=\"salesOrderItem.get('productId').errors?.required\">\r\n                      {{'PRODUCT_IS_REQUIRED' | translate}}\r\n                    </div>\r\n                  </div>\r\n                </td>\r\n                <td>\r\n                  <mat-select [dir]=\"langDir\" placeholder=\"Select Warehouse\" class=\"form-control\"\r\n                    formControlName=\"warehouseId\">\r\n                    <mat-option *ngFor=\"let warehouse of warehouseMap[i]\" [value]=\"warehouse.id\">\r\n                      {{warehouse.name}}\r\n                    </mat-option>\r\n                  </mat-select>\r\n                </td>\r\n                <td>\r\n                  <mat-select [dir]=\"langDir\" formControlName=\"unitId\" (selectionChange)=\"onSelectionChange($event.value,i)\" class=\"form-control\">\r\n                    <mat-option [dir]=\"langDir\" *ngFor=\"let a of unitsMap[i]\" [value]=\"a.id\">\r\n                      {{a.name}}\r\n                    </mat-option>\r\n                  </mat-select>\r\n                  <div *ngIf=\"salesOrderItem.get('unitId').touched && salesOrderItem.get('unitId').errors\">\r\n                  <div class=\"text-danger\" *ngIf=\"salesOrderItem.get('unitId').errors?.required\">\r\n                    {{'UNIT_IS_REQUIRED' | translate}}\r\n                  </div>\r\n                </div>\r\n                </td>\r\n                <td>\r\n                  <input class=\"form-control\" type=\"number\" (change)=\"onUnitPriceChange()\" formControlName=\"unitPrice\"\r\n                    placeholder=\"{{'UNIT_PER_PRICE' | translate}}\">\r\n                  <div *ngIf=\"salesOrderItem.get('unitPrice').touched && salesOrderItem.get('unitPrice').errors\">\r\n                    <div class=\"text-danger\" *ngIf=\"salesOrderItem.get('unitPrice').errors?.required\">\r\n                      {{'UNIT_PER_PRICE_IS_REQUIRED' | translate}}\r\n                    </div>\r\n                    <div class=\"text-danger\" *ngIf=\"salesOrderItem.get('unitPrice').errors?.min\">\r\n                      {{\"PRICE_SHOULD_BE_MORE_THEN_0\" | translate}}\r\n                    </div>\r\n                  </div>\r\n                </td>\r\n                <td>\r\n                  <input class=\"form-control\" type=\"number\" (change)=\"onQuantityChange()\" formControlName=\"quantity\"\r\n                    placeholder=\"{{'QUANTITY' | translate}}\">\r\n                  <div *ngIf=\"salesOrderItem.get('quantity').touched && salesOrderItem.get('quantity').errors\">\r\n                    <div class=\"text-danger\" *ngIf=\"salesOrderItem.get('quantity').errors?.required\">\r\n                      {{'QUANTITY_IS_REQUIRED' | translate}}\r\n                    </div>\r\n                    <div class=\"text-danger\" *ngIf=\"salesOrderItem.get('quantity').errors?.min\">\r\n                      {{\"QUANTITY_SHOULD_BE_MORE_THEN_0\" | translate}}\r\n                    </div>\r\n                  </div>\r\n                </td>\r\n                <td>\r\n                  {{ salesOrderItem.get('quantity').value | quantitiesunitprice : salesOrderItem.get('unitPrice').value\r\n                  | customCurrency}}\r\n                </td>\r\n                <td>\r\n                  <input class=\"form-control\" formControlName=\"discountPercentage\" (change)=\"onDiscountChange()\"\r\n                    placeholder=\"{{'DISCOUNT' | translate}}\">\r\n                  <div class=\"text-danger\" *ngIf=\"salesOrderItem.get('discountPercentage').errors?.min\">\r\n                    {{\"DISCOUNT_SHOULD_BE_MORE_THEN_0\" | translate}}\r\n                  </div>\r\n                </td>\r\n                <td>\r\n                  {{ salesOrderItem.get('quantity').value | quantitiesunitprice : salesOrderItem.get('unitPrice').value\r\n                  : salesOrderItem.get('discountPercentage').value | customCurrency }}\r\n\r\n                  <div class=\"text-danger\" *ngIf=\"salesOrderItem.get('discountPercentage').value !=0\">\r\n                    {{'DISCOUNT_AMOUNT' | translate}}: {{ salesOrderItem.get('quantity').value | quantitiesunitpriceTax\r\n                    : salesOrderItem.get('unitPrice').value : salesOrderItem.get('discountPercentage').value |\r\n                    customCurrency }}\r\n                  </div>\r\n                </td>\r\n                <td>\r\n                  <mat-select [dir]=\"langDir\" formControlName=\"taxValue\" placeholder=\"{{'SELECT_TAX' | translate}}\"\r\n                    (selectionChange)=\"onTaxSelectionChange()\" class=\"form-control\" multiple>\r\n                    <mat-option [dir]=\"langDir\" *ngFor=\"let tax of taxsMap[i]\" [value]=\"tax.id\">{{tax.name}}\r\n                      ({{tax.percentage}}%)\r\n                    </mat-option>\r\n                  </mat-select>\r\n                  <div *ngIf=\"salesOrderItem.get('taxValue').touched && salesOrderItem.get('taxValue').errors\">\r\n                    <div class=\"text-danger\" *ngIf=\"salesOrderItem.get('taxValue').errors?.required\">\r\n                      {{'TAX_IS_REQUIRED' | translate}}\r\n                    </div>\r\n                  </div>\r\n                </td>\r\n                <td>\r\n                  {{ salesOrderItem.get('quantity').value | quantitiesunitprice : salesOrderItem.get('unitPrice').value\r\n                  : salesOrderItem.get('discountPercentage').value: salesOrderItem.get('taxValue').value: taxsMap[i] |\r\n                  customCurrency}}\r\n                  <div class=\"text-danger\" *ngIf=\"salesOrderItem.get('taxValue').value\">\r\n                    {{\"TAX_AMOUNT\" | translate}}: {{ salesOrderItem.get('quantity').value | quantitiesunitpriceTax :\r\n                    salesOrderItem.get('unitPrice').value : salesOrderItem.get('discountPercentage').value :\r\n                    salesOrderItem.get('taxValue').value: taxsMap[i] | customCurrency }}\r\n                  </div>\r\n                </td>\r\n              </tr>\r\n            </table>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n  <div class=\"row mt-2\">\r\n    <div class=\"col-10 text-right font-weight-bold\">\r\n      {{\"SUB_TOTAL_BEFORE_DISCOUNT\" | translate}}:\r\n    </div>\r\n    <div class=\"col-2 text-left  font-weight-bold\">\r\n      {{totalBeforeDiscount | customCurrency}}\r\n    </div>\r\n  </div>\r\n  <div class=\"row\">\r\n    <div class=\"col-10 text-right font-weight-bold\">\r\n      {{'TOTAL_DISCOUNT' | translate}}:\r\n    </div>\r\n    <div class=\"col-2 text-left text-danger  font-weight-bold\">\r\n      {{totalDiscount | customCurrency}}\r\n    </div>\r\n  </div>\r\n  <div class=\"row\">\r\n    <div class=\"col-10 text-right font-weight-bold\">\r\n      {{'TOTAL_TAX' | translate}}:\r\n    </div>\r\n    <div class=\"col-2 text-left  font-weight-bold\">\r\n      {{totalTax | customCurrency}}\r\n    </div>\r\n  </div>\r\n  <div class=\"row\">\r\n    <div class=\"col-12\">\r\n      <mat-divider></mat-divider>\r\n    </div>\r\n  </div>\r\n  <div class=\"row\">\r\n    <div class=\"col-10 text-right font-weight-bold\">\r\n      {{\"GRAND_TOTAL\" | translate}} :\r\n    </div>\r\n    <div class=\"col-2 text-left font-weight-bold\">\r\n      {{grandTotal | customCurrency}}\r\n    </div>\r\n  </div>\r\n\r\n  <div class=\"row\">\r\n    <div class=\"col-md-12 mb-1\">\r\n      <button type=\"button\" (click)=\"onSalesOrderSubmit()\" class=\"btn btn-success btn-sm m-right-10\"\r\n        *hasClaim=\"['SO_ADD_SO','SO_UPDATE_SO','SO_RETURN_SO']\">\r\n        <i class=\"fas fa-save\"></i> {{'SAVE' | translate}}</button>\r\n      <button type=\"button\" (click)=\"onSalesOrderList()\" class=\"btn btn-danger btn-sm\"><i\r\n          class=\"fas fa-times-circle\"></i>\r\n        {{'CANCEL' | translate}}\r\n      </button>\r\n    </div>\r\n  </div>\r\n</form>\r\n\r\n\r\n\r\n<div class=\"loading-shade\" *ngIf=\"isLoading\">\r\n  <mat-spinner *ngIf=\"isLoading\"></mat-spinner>\r\n</div>","import { HttpResponse } from '@angular/common/http';\r\nimport { Component, OnInit } from '@angular/core';\r\nimport { Location } from '@angular/common';\r\nimport { ActivatedRoute, Params } from '@angular/router';\r\nimport { CompanyProfile } from '@core/domain-classes/company-profile';\r\nimport { SalesOrder } from '@core/domain-classes/sales-order';\r\nimport { SalesOrderItem } from '@core/domain-classes/sales-order-item';\r\nimport { SecurityService } from '@core/security/security.service';\r\nimport { ClonerService } from '@core/services/clone.service';\r\nimport { TranslationService } from '@core/services/translation.service';\r\nimport { ToastrService } from 'ngx-toastr';\r\nimport { BaseComponent } from 'src/app/base.component';\r\nimport { SalesOrderService } from '../sales-order.service';\r\n\r\n@Component({\r\n  selector: 'app-sales-order-detail',\r\n  templateUrl: './sales-order-detail.component.html',\r\n  styleUrls: ['./sales-order-detail.component.scss']\r\n})\r\nexport class SalesOrderDetailComponent extends BaseComponent {\r\n\r\n  currentDate: Date = new Date();\r\n  quantitesErrormsg: string = '';\r\n  errorMsg: string = '';\r\n  companyProfile: CompanyProfile;\r\n  isLoading = false;\r\n  salesOrder: SalesOrder = null;\r\n  salesOrderItems: SalesOrderItem[];\r\n  salesOrderReturnsItems: SalesOrderItem[];\r\n  salesOrderForInvoice: SalesOrder;\r\n  constructor(\r\n    private salesOrderService: SalesOrderService,\r\n    private routes: ActivatedRoute,\r\n    private clonerService: ClonerService,\r\n    private toastrService: ToastrService,\r\n    private location:Location,\r\n    private securityService: SecurityService,\r\n    public translationService: TranslationService) {\r\n    super(translationService);\r\n   \r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.getCustomerOrderById();\r\n    this.subScribeCompanyProfile();\r\n  }\r\n\r\n  getCustomerOrderById() {\r\n    this.sub$.sink = this.routes.params.subscribe((c: Params) => {\r\n      this.getSalesOrderById(c['id']);\r\n    });\r\n  }\r\n\r\n  subScribeCompanyProfile() {\r\n    this.securityService.companyProfile.subscribe(data => {\r\n      this.companyProfile = data;\r\n    });\r\n  }\r\n\r\n  getSalesOrderById(id: string) {\r\n    this.isLoading = true;\r\n    this.salesOrderService.getSalesOrderById(id)\r\n      .subscribe((c: SalesOrder) => {\r\n        this.salesOrder = this.clonerService.deepClone<SalesOrder>(c);\r\n        this.salesOrder.totalQuantity = this.salesOrder.salesOrderItems.map(item => item.status == 1 ? -1 * item.quantity : item.quantity).reduce((prev, next) => prev + next);\r\n        this.salesOrderItems = this.salesOrder.salesOrderItems.filter(c => c.status == 0);\r\n        this.salesOrderReturnsItems = this.salesOrder.salesOrderItems.filter(c => c.status == 1);\r\n        this.isLoading = false;\r\n      }, (err) => {\r\n        this.isLoading = false;\r\n      });\r\n  }\r\n\r\n  generateInvoice() {\r\n    let soForInvoice = this.clonerService.deepClone<SalesOrder>(this.salesOrder);\r\n    soForInvoice.salesOrderItems.map(c => {\r\n      c.unitName = c.unitConversation?.name;\r\n      return c;\r\n    })\r\n    this.salesOrderForInvoice = soForInvoice;\r\n  }\r\n\r\n  // calulateTax() {\r\n  //   const totalQuantity = this.purchaseOrder.totalQuantity;\r\n  //   const unitPrice = this.purchaseOrder.pricePerUnit;;\r\n  //   const tax = this.purchaseOrder.tax;\r\n  //   const totalAmountWithTax = totalQuantity * unitPrice;\r\n  //   let totalAmount = 0;\r\n  //   if (tax && tax !== 0) {\r\n  //     totalAmount = totalAmountWithTax + (totalAmountWithTax * tax) / 100;\r\n  //     totalAmount = parseFloat(totalAmount.toFixed(2));\r\n  //   } else {\r\n  //     if (totalAmountWithTax) {\r\n  //       totalAmount = totalAmountWithTax;\r\n  //     } else {\r\n  //       totalAmount = 0;\r\n  //     }\r\n  //   }\r\n  //   return totalAmount;\r\n  // }\r\n\r\n  // downloadAttachment(attachement: PurchaseOrderAttachment) {\r\n  //   this.sub$.sink = this.purchaseOrderService.downloadAttachment(attachement.id)\r\n  //     .subscribe(\r\n  //       (event) => {\r\n  //         if (event.type === HttpEventType.Response) {\r\n  //           this.downloadFile(event, attachement.name);\r\n  //         }\r\n  //       },\r\n  //       (error) => {\r\n  //         this.toastrService.error(this.translationService.getValue('ERROR_WHILE_DOWNLOADING_DOCUMENT'));\r\n  //       }\r\n  //     );\r\n  // }\r\n\r\n  private downloadFile(data: HttpResponse<Blob>, name: string) {\r\n    const downloadedFile = new Blob([data.body], { type: data.body.type });\r\n    const a = document.createElement('a');\r\n    a.setAttribute('style', 'display:none;');\r\n    document.body.appendChild(a);\r\n    a.download = name;\r\n    a.href = URL.createObjectURL(downloadedFile);\r\n    a.target = '_blank';\r\n    a.click();\r\n    document.body.removeChild(a);\r\n  }\r\n\r\n  cancel(){\r\n    this.location.back();\r\n  }\r\n}\r\n","<div class=\"page-header-main\">\r\n    <div class=\"row align-items-center justify-content-between\">\r\n        <div class=\"col-md-auto col-sm-auto\">\r\n            <div class=\"content-header\">\r\n                <h1>{{'SALES_ORDER' | translate}}#{{salesOrder?.orderNumber}}</h1>\r\n            </div>\r\n        </div>\r\n        <div class=\"col-md-auto col-sm-auto\">\r\n            <button *hasClaim=\"'SO_GENERATE_INVOICE'\" class=\"btn blue-btn btn-sm m-right-10\"\r\n                (click)=\"generateInvoice()\">\r\n                <i class=\"fas fa-receipt\"></i> {{'GENERATE_INVOICE' | translate}}\r\n            </button>\r\n        </div>\r\n    </div>\r\n</div>\r\n<br>\r\n<ng-container *ngIf=\"salesOrder\">\r\n    <div class=\"row\">\r\n        <div class=\"col-sm-4\">\r\n            <div class=\"form-group\">\r\n                <h5 class=\"\">{{\"CUSTOMER_ADDRESS\" | translate}}</h5>\r\n                <b> {{salesOrder?.customer?.customerName}}</b><br>\r\n                {{salesOrder?.customer?.address}}<br><br>{{\"PHONE\"| translate}}:\r\n                {{salesOrder?.customer?.mobileNo}}<br>{{\"EMAIL\"| translate}}:\r\n                <ng-container *ngIf=\"salesOrder?.customer?.email\">\r\n                    <a href=\"mailto:{{salesOrder?.customer?.email}}\">{{salesOrder?.customer?.email}}</a>\r\n                </ng-container>\r\n                <div class=\"clearfix\"></div>\r\n            </div>\r\n        </div>\r\n        <div class=\"col-md-4\">\r\n            <div class=\"form-group\">\r\n                <h5 class=\"\">{{\"COMPANY_PROFILE\" | translate}}</h5>\r\n                <b> {{companyProfile.title}}</b><br>\r\n                {{companyProfile.address}}<br><br>{{\"PHONE\"| translate}}:\r\n                {{companyProfile.phone}}<br>{{\"EMAIL\" | translate}}:\r\n                <ng-container *ngIf=\"companyProfile.email\">\r\n                    <a href=\"mailto:{{companyProfile.email}}\">{{companyProfile.email}}</a>\r\n                </ng-container>\r\n                <div class=\"clearfix\"></div>\r\n            </div>\r\n        </div>\r\n        <div class=\"col-md-4\">\r\n            <div class=\"form-group\">\r\n                <h5 class=\"\">{{'REFERENCE' | translate}}</h5>\r\n                <b> {{salesOrder?.orderNumber}}</b><br>\r\n                <b>{{\"DATE\" | translate}} : </b>{{salesOrder?.soCreatedDate | utcToLocalTime:'shortDate'}}\r\n                <br><b>{{\"PAYMENT_STATUS\" | translate}} : </b>\r\n                <span class=\"badge-pill\" [ngClass]=\"{'badge-success': salesOrder?.paymentStatus == 0 ,\r\n                'badge-danger' : salesOrder?.paymentStatus == 1,\r\n                'badge-warning' : salesOrder?.paymentStatus == 2}\">\r\n                    {{salesOrder?.paymentStatus | paymentStatus }}</span>\r\n                <div class=\"clearfix\"></div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n    <div class=\"page-header-main\">\r\n        <div class=\"row align-items-center justify-content-between\">\r\n            <div class=\"col-md-auto col-sm-auto\">\r\n                <div class=\"content-header\">\r\n                    <h1>{{\"SALES_ORDER_ITEMS\" | translate}}</h1>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n    <br>\r\n    <div class=\"table-responsive\">\r\n        <table class=\"table table-bordered table-hover table-striped table-sm\">\r\n            <thead class=\"head\">\r\n                <tr>\r\n                    <th style=\"width:1%\">{{\"NO.\" | translate}}</th>\r\n                    <th style=\"width:20%\">{{\"DESCRIPTION\" | translate}}</th>\r\n                    <th style=\"width:3%\">{{\"UNIT_PRICE\" | translate}}</th>\r\n                    <th style=\"width:2%\">{{\"QUANTITY\" | translate}}</th>\r\n                    <th style=\"width:3%\">{{\"DISCOUNT\" | translate}}</th>\r\n                    <th style=\"width:5%\">{{\"TAX\" | translate}}</th>\r\n                    <th style=\"width:10%\">{{\"TOTAL_AMOUNT\" | translate}}</th>\r\n                </tr>\r\n            </thead>\r\n            <tbody>\r\n                <tr *ngFor=\"let salesItem of salesOrderItems;let i=index\">\r\n                    <ng-container *ngIf=\"salesItem.status == 0\">\r\n                        <td style=\"text-align: center;\">{{i+1}}</td>\r\n                        <td>{{salesItem.productName}}</td>\r\n                        <td class=\"text-right\">{{salesItem.unitPrice | customCurrency}}</td>\r\n                        <td class=\"text-right\">{{salesItem.quantity}} <span\r\n                                style=\"font-size: 10px;\">({{salesItem?.unitConversation?.name}})</span></td>\r\n                        <td class=\"text-right\">{{salesItem.discount | customCurrency}}</td>\r\n                        <td class=\"text-right\">{{salesItem.taxValue | customCurrency}}<br>\r\n                            <span style=\"font-size: 10px;\"\r\n                                *ngFor=\"let tax of salesItem.salesOrderItemTaxes;let last=last\">\r\n                                {{tax.taxName}}({{tax.taxPercentage}}%) <span *ngIf=\"!last\">, </span>\r\n                            </span>\r\n                        </td>\r\n                        <td class=\"text-right\">\r\n                            {{(salesItem?.quantity * salesItem?.unitPrice) - salesItem.discount +\r\n                            salesItem.taxValue | customCurrency }}\r\n                        </td>\r\n                    </ng-container>\r\n                </tr>\r\n                <tr class=\"bg-warning1\" *ngIf=\"salesOrderReturnsItems?.length > 0\">\r\n                    <td colspan=\"100%\" class=\"no-border\"><strong>Returned Items</strong></td>\r\n                </tr>\r\n                <tr class=\"bg-warning1\" *ngFor=\"let salesItem of salesOrderReturnsItems;let i=index\">\r\n                    <td style=\"text-align: center;\">{{i+1}}</td>\r\n                    <td>{{salesItem.productName}}</td>\r\n                    <td class=\"text-right\">{{salesItem.unitPrice | customCurrency}}</td>\r\n                    <td class=\"text-right\">{{ -1 *salesItem.quantity}}<br> <span\r\n                            style=\"font-size: 10px;\">({{salesItem?.unitConversation?.name}})</span></td>\r\n                    <td class=\"text-right\">{{ -1 *salesItem.discount | customCurrency}}</td>\r\n                    <td class=\"text-right\">{{  -1 *salesItem.taxValue | customCurrency}}<br>\r\n                        <span style=\"font-size: 10px;\" *ngFor=\"let tax of salesItem.salesOrderItemTaxes;let last=last\">\r\n                            {{tax.taxName}}({{tax.taxPercentage}}%) <span *ngIf=\"!last\">, </span>\r\n                        </span>\r\n                    </td>\r\n                    <td class=\"text-right\">\r\n                        {{ -1 *((salesItem?.quantity * salesItem?.unitPrice) - salesItem.discount +\r\n                        salesItem.taxValue) | customCurrency }}\r\n                    </td>\r\n                </tr>\r\n                <tr>\r\n                    <td colspan=\"4\" class=\"text-right total\">{{\"TOTAL\" | translate}}</td>\r\n                    <!-- <td class=\"text-right total\">{{salesOrder.totalQuantity}}</td> -->\r\n                    <td class=\"text-right total\">{{salesOrder.totalDiscount | customCurrency}}</td>\r\n                    <td class=\"text-right total\">{{salesOrder.totalTax | customCurrency}}</td>\r\n                    <td class=\"total\">{{salesOrder.totalAmount | customCurrency}}</td>\r\n                </tr>\r\n                <tr>\r\n                    <td colspan=\"6\" class=\"text-right total\">{{\"PAID\" | translate}}</td>\r\n                    <td class=\"total\">{{salesOrder.totalPaidAmount | customCurrency}} </td>\r\n                </tr>\r\n                <tr>\r\n                    <td colspan=\"6\" class=\"text-right total\">{{\"BALANCE\" | translate}}</td>\r\n                    <td class=\"total\">{{salesOrder.totalAmount-salesOrder.totalPaidAmount | customCurrency}}</td>\r\n                </tr>\r\n            </tbody>\r\n        </table>\r\n    </div>\r\n    <div *ngIf=\"salesOrder.salesOrderPayments.length > 0\">\r\n        <div class=\"page-header-main\">\r\n            <div class=\"row align-items-center justify-content-between\">\r\n                <div class=\"col-md-auto col-sm-auto\">\r\n                    <div class=\"content-header\">\r\n                        <h1>{{\"SALES_ORDER_PAYMENTS\" | translate}}</h1>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n        <br>\r\n        <div class=\"table-responsive\">\r\n            <table class=\"table table-bordered table-hover table-striped table-sm\" style=\"width: 50%;\">\r\n                <thead class=\"head\">\r\n                    <tr>\r\n                        <th>{{\"PAYMENT_DATE\" | translate}}</th>\r\n                        <th>{{'AMOUNT' | translate}}</th>\r\n                        <th>{{'REFERENCE_NUMBER' | translate}}</th>\r\n                        <th>{{'PAID_BY' | translate}}</th>\r\n                    </tr>\r\n                </thead>\r\n                <tbody>\r\n                    <tr *ngFor=\"let salesItempayments of salesOrder.salesOrderPayments;\">\r\n                        <td class=\"head\">{{salesItempayments.paymentDate | utcToLocalTime:'shortDate'}}</td>\r\n                        <td class=\"head\">{{salesItempayments.amount | customCurrency}}</td>\r\n                        <td class=\"head\">{{salesItempayments.referenceNumber}}</td>\r\n                        <td class=\"head\">{{salesItempayments.paymentMethod | paymentmethod}}</td>\r\n                    </tr>\r\n                </tbody>\r\n            </table>\r\n        </div>\r\n    </div>\r\n    <div *ngIf=\"salesOrder.termAndCondition\">\r\n        <div class=\"page-header-main\">\r\n            <div class=\"row align-items-center justify-content-between\">\r\n                <div class=\"col-md-auto col-sm-auto\">\r\n                    <div class=\"content-header\">\r\n                        <h1>{{\"TERMS_AND_CONDITION\" | translate}}</h1>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n        <br>\r\n        <div class=\"row\">\r\n            <div class=\"col-sm-12\">\r\n                <div class=\"form-group\">\r\n                    {{salesOrder?.termAndCondition}}<br>\r\n                    <div class=\"clearfix\"></div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n    <div *ngIf=\"salesOrder.note\">\r\n        <div class=\"page-header-main\">\r\n            <div class=\"row align-items-center justify-content-between\">\r\n                <div class=\"col-md-auto col-sm-auto\">\r\n                    <div class=\"content-header\">\r\n                        <h1>{{\"NOTE\" | translate}}</h1>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n        <br>\r\n        <div class=\"row\">\r\n            <div class=\"col-sm-12\">\r\n                <div class=\"form-group\">\r\n                    {{salesOrder?.note}}<br>\r\n                    <div class=\"clearfix\"></div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n    <div class=\"row\">\r\n        <div class=\"col-md-12 mb-1\">\r\n            <button type=\"button\" (click)=\"cancel()\" class=\"btn btn-danger btn-sm\"><i class=\"fas fa-times-circle\"></i>\r\n                {{'CANCEL' | translate}}\r\n            </button>\r\n        </div>\r\n    </div>\r\n\r\n\r\n</ng-container>\r\n<div class=\"loading-shade\" *ngIf=\"isLoading\">\r\n    <mat-spinner *ngIf=\"isLoading\"></mat-spinner>\r\n</div>\r\n<ng-container *ngIf=\"salesOrderForInvoice\">\r\n    <app-sales-order-invoice [salesOrder]=\"salesOrderForInvoice\"></app-sales-order-invoice>\r\n</ng-container>","import { Component, Input, OnChanges, OnInit, SimpleChanges } from '@angular/core';\r\nimport { SalesOrder } from '@core/domain-classes/sales-order';\r\nimport { SalesOrderItem } from '@core/domain-classes/sales-order-item';\r\nimport { TranslationService } from '@core/services/translation.service';\r\nimport { BaseComponent } from 'src/app/base.component';\r\nimport { SalesOrderService } from '../../sales-order.service';\r\n\r\n@Component({\r\n  selector: 'app-sales-order-items',\r\n  templateUrl: './sales-order-items.component.html',\r\n  styleUrls: ['./sales-order-items.component.scss']\r\n})\r\nexport class SalesOrderItemsComponent extends BaseComponent implements OnInit, OnChanges {\r\n  @Input() salesOrder: SalesOrder;\r\n  salesOrderItems: SalesOrderItem[] = [];\r\n  isLoading = false;\r\n  displayedColumns: string[] = ['productName','source', 'unitName', 'unitPrice', 'quantity',  'totalDiscount', 'taxes', 'totalTax','totalAmount','warehouse'];\r\n\r\n  constructor(private salesOrderService: SalesOrderService,public translationService:TranslationService) { \r\n    super(translationService);\r\n    this.getLangDir();\r\n  }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n  ngOnChanges(changes: SimpleChanges): void {\r\n    if (changes['salesOrder']) {\r\n      this.getSalesOrderItems();\r\n    }\r\n  }\r\n\r\n  getSalesOrderItems() {\r\n    this.isLoading = true;\r\n    this.salesOrderService.getSalesOrderItems(this.salesOrder.id)\r\n      .subscribe((data: SalesOrderItem[]) => {\r\n        this.isLoading = false;\r\n        this.salesOrderItems = data;\r\n      }, () => this.isLoading = false)\r\n  }\r\n\r\n}\r\n","<div class=\"page-header-main\">\r\n    <div class=\"row align-items-center\">\r\n        <div class=\"col-md-auto col-sm-auto\">\r\n            <div class=\"content-header\">\r\n                <h1>{{\"SALES_ORDER_ITEMS\" | translate}}</h1>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>\r\n<div class=\"loading-shade\" *ngIf=\"isLoading\">\r\n    <mat-spinner></mat-spinner>\r\n</div>\r\n\r\n<div class=\"table-responsive\">\r\n    <table [dir]=\"langDir\" mat-table [dataSource]=\"salesOrderItems\" class=\"table table-bordered table-hover\">\r\n        <ng-container matColumnDef=\"productName\">\r\n            <th mat-header-cell *matHeaderCellDef>{{\"PRODUCT_NAME\" | translate}}</th>\r\n            <td mat-cell *matCellDef=\"let element\">\r\n                {{element.productName}}\r\n            </td>\r\n        </ng-container>\r\n        <ng-container matColumnDef=\"source\">\r\n          <th mat-header-cell *matHeaderCellDef>{{\"SOURCE\" | translate}}</th>\r\n          <td mat-cell *matCellDef=\"let element\">\r\n            <ng-container *ngIf=\"element.status===1\">\r\n              {{'SALES_ORDER_RETURN' | translate}}\r\n            </ng-container>\r\n            <ng-container *ngIf=\"element.status !==1\">\r\n              {{'SALES_ORDER' | translate}}\r\n            </ng-container>\r\n          </td>\r\n      </ng-container>\r\n        <ng-container matColumnDef=\"unitName\">\r\n            <th mat-header-cell *matHeaderCellDef> {{\"UNIT\" | translate}} </th>\r\n            <td mat-cell *matCellDef=\"let element\">\r\n                {{element.unitName}}\r\n            </td>\r\n        </ng-container>\r\n        <ng-container matColumnDef=\"unitPrice\">\r\n            <th mat-header-cell *matHeaderCellDef> {{\"UNIT_PER_PRICE\" | translate}} </th>\r\n            <td mat-cell *matCellDef=\"let element\">\r\n                {{element.unitPrice  | customCurrency}}\r\n            </td>\r\n        </ng-container>\r\n        <ng-container matColumnDef=\"quantity\">\r\n            <th mat-header-cell *matHeaderCellDef> {{\"QUANTITY\" | translate}} </th>\r\n            <td mat-cell *matCellDef=\"let element\">\r\n              {{element.status===1 ? -1 * element.quantity :element.quantity }}\r\n            </td>\r\n        </ng-container>\r\n        <ng-container matColumnDef=\"totalDiscount\">\r\n            <th mat-header-cell *matHeaderCellDef> {{'TOTAL_DISCOUNT' | translate}} </th>\r\n            <td mat-cell *matCellDef=\"let element\">\r\n                {{element.discount | customCurrency}}({{element.discountPercentage}}%)\r\n            </td>\r\n        </ng-container>\r\n        <ng-container matColumnDef=\"taxes\">\r\n            <th mat-header-cell *matHeaderCellDef> {{\"TAX\" | translate}} </th>\r\n            <td mat-cell *matCellDef=\"let element\">\r\n                <span *ngFor=\"let tax of element.salesOrderItemTaxes;let last = last\">\r\n                    {{tax.taxName}}({{tax.taxPercentage}}%) <span *ngIf=\"!last\"> ,</span>\r\n                </span>\r\n            </td>\r\n        </ng-container>\r\n        <ng-container matColumnDef=\"totalTax\">\r\n            <th mat-header-cell *matHeaderCellDef> {{'TOTAL_TAX' | translate}} </th>\r\n            <td mat-cell *matCellDef=\"let element\">\r\n                {{element.taxValue | customCurrency}}\r\n            </td>\r\n        </ng-container>\r\n        <ng-container matColumnDef=\"totalAmount\">\r\n            <th mat-header-cell *matHeaderCellDef> {{'TOTAL' | translate}} </th>\r\n            <td mat-cell *matCellDef=\"let element\">\r\n                {{(element.unitPrice * element.quantity) - element.discount + element.taxValue | customCurrency}}\r\n            </td>\r\n        </ng-container>\r\n        <ng-container matColumnDef=\"warehouse\">\r\n            <th mat-header-cell *matHeaderCellDef> {{'WAREHOUSE' | translate}}</th>\r\n            <td mat-cell *matCellDef=\"let element\">\r\n                {{element.warehouseName}}\r\n            </td>\r\n        </ng-container>\r\n        <tr mat-header-row *matHeaderRowDef=\"displayedColumns;sticky: true\"></tr>\r\n        <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\" [class.bg-warning1]=\"row.status===1\"></tr>\r\n    </table>\r\n</div>\r\n","import { animate, state, style, transition, trigger } from '@angular/animations';\r\nimport { ChangeDetectorRef, Component, OnInit, ViewChild } from '@angular/core';\r\nimport { UntypedFormControl } from '@angular/forms';\r\nimport { MatDialog } from '@angular/material/dialog';\r\nimport { MatPaginator } from '@angular/material/paginator';\r\nimport { MatSort } from '@angular/material/sort';\r\nimport { Router } from '@angular/router';\r\nimport { CommonDialogService } from '@core/common-dialog/common-dialog.service';\r\nimport { Customer } from '@core/domain-classes/customer';\r\nimport { ResponseHeader } from '@core/domain-classes/response-header';\r\nimport { SalesOrder } from '@core/domain-classes/sales-order';\r\nimport { SalesOrderResourceParameter } from '@core/domain-classes/sales-order-resource-parameter';\r\nimport { ClonerService } from '@core/services/clone.service';\r\nimport { TranslationService } from '@core/services/translation.service';\r\nimport { ToastrService } from 'ngx-toastr';\r\nimport { forkJoin, merge, Observable, Subject } from 'rxjs';\r\nimport { debounceTime, distinctUntilChanged, switchMap, tap } from 'rxjs/operators';\r\nimport { BaseComponent } from 'src/app/base.component';\r\nimport { CustomerService } from 'src/app/customer/customer.service';\r\nimport { AddSalesOrderPaymentComponent } from '../add-sales-order-payment/add-sales-order-payment.component';\r\nimport { SalesOrderDataSource } from '../sales-order-datasource';\r\nimport { SalesOrderService } from '../sales-order.service';\r\nimport { ViewSalesOrderPaymentComponent } from '../view-sales-order-payment/view-sales-order-payment.component';\r\n\r\n@Component({\r\n  selector: 'app-sales-order-list',\r\n  templateUrl: './sales-order-list.component.html',\r\n  styleUrls: ['./sales-order-list.component.scss'],\r\n  animations: [\r\n    trigger('detailExpand', [\r\n      state('collapsed', style({ height: '0px', minHeight: '0' })),\r\n      state('expanded', style({ height: '*' })),\r\n      transition('expanded <=> collapsed', animate('225ms cubic-bezier(0.4, 0.0, 0.2, 1)')),\r\n    ]),\r\n  ],\r\n})\r\nexport class SalesOrderListComponent extends BaseComponent implements OnInit {\r\n  dataSource: SalesOrderDataSource;\r\n  salesOrders: SalesOrder[] = [];\r\n  displayedColumns: string[] = ['action', 'soCreatedDate', 'orderNumber', 'deliveryDate', 'customerName', 'totalDiscount', 'totalTax', 'totalAmount','totalPaidAmount', 'paymentStatus','status'];\r\n  filterColumns: string[] = ['action-search', 'soCreatedDate-search', 'orderNumber-search', 'deliverDate-search', 'customer-search', 'totalAmount-search', 'totalDiscount-search', 'totalTax-search','totalPaidAmount-search', 'paymentStatus-search', 'status-search'];\r\n  footerToDisplayed: string[] = ['footer'];\r\n  isLoadingResults = true;\r\n  salesOrderResource: SalesOrderResourceParameter;\r\n  loading$: Observable<boolean>;\r\n  @ViewChild(MatPaginator) paginator: MatPaginator;\r\n  @ViewChild(MatSort) sort: MatSort;\r\n  _customerFilter: string;\r\n  _orderNumberFilter: string;\r\n  customerNameControl: UntypedFormControl = new UntypedFormControl();\r\n  customerList$: Observable<Customer[]>;\r\n  expandedElement: SalesOrder | null;\r\n  public filterObservable$: Subject<string> = new Subject<string>();\r\n  salesOrderForInvoice: SalesOrder;\r\n\r\n  public get CustomerFilter(): string {\r\n    return this._customerFilter;\r\n  }\r\n\r\n  public set CustomerFilter(v: string) {\r\n    this._customerFilter = v;\r\n    const customerFilter = `customerName:${v}`;\r\n    this.filterObservable$.next(customerFilter);\r\n  }\r\n\r\n  public get OrderNumberFilter(): string {\r\n    return this._orderNumberFilter;\r\n  }\r\n\r\n  public set OrderNumberFilter(v: string) {\r\n    this._orderNumberFilter = v;\r\n    const orderNumberFilter = `orderNumber:${v}`;\r\n    this.filterObservable$.next(orderNumberFilter);\r\n  }\r\n\r\n  constructor(\r\n    private salesOrderService: SalesOrderService,\r\n    private customerService: CustomerService,\r\n    private cd: ChangeDetectorRef,\r\n    private commonDialogService: CommonDialogService,\r\n    private toastrService: ToastrService,\r\n    private router: Router,\r\n    public translationService: TranslationService,\r\n    private dialog: MatDialog,\r\n    private clonerService: ClonerService) {\r\n    super(translationService);\r\n    this.getLangDir();\r\n    this.salesOrderResource = new SalesOrderResourceParameter();\r\n    this.salesOrderResource.pageSize = 50;\r\n    this.salesOrderResource.orderBy = 'soCreatedDate asc'\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.customerNameControlOnChange();\r\n    this.dataSource = new SalesOrderDataSource(this.salesOrderService);\r\n    this.dataSource.loadData(this.salesOrderResource);\r\n    this.getResourceParameter();\r\n    this.sub$.sink = this.filterObservable$\r\n      .pipe(\r\n        debounceTime(1000),\r\n        distinctUntilChanged())\r\n      .subscribe((c) => {\r\n        this.salesOrderResource.skip = 0;\r\n        this.paginator.pageIndex = 0;\r\n        const strArray: Array<string> = c.split(':');\r\n        if (strArray[0] === 'customerName') {\r\n          this.salesOrderResource.customerName = strArray[1];\r\n        } else if (strArray[0] === 'orderNumber') {\r\n          this.salesOrderResource.orderNumber = strArray[1];\r\n        }\r\n        this.dataSource.loadData(this.salesOrderResource);\r\n      });\r\n  }\r\n\r\n  customerNameControlOnChange() {\r\n    this.customerList$ = this.customerNameControl.valueChanges.pipe(\r\n      debounceTime(1000),\r\n      distinctUntilChanged(),\r\n      switchMap(c => {\r\n        return this.customerService.getCustomersForDropDown('CustomerName', c);\r\n      })\r\n    );\r\n  }\r\n\r\n  ngAfterViewInit() {\r\n    this.sort.sortChange.subscribe(() => this.paginator.pageIndex = 0);\r\n\r\n    this.sub$.sink = merge(this.sort.sortChange, this.paginator.page)\r\n      .pipe(\r\n        tap((c: any) => {\r\n          this.salesOrderResource.skip = this.paginator.pageIndex * this.paginator.pageSize;\r\n          this.salesOrderResource.pageSize = this.paginator.pageSize;\r\n          this.salesOrderResource.orderBy = this.sort.active + ' ' + this.sort.direction;\r\n          this.dataSource.loadData(this.salesOrderResource);\r\n        })\r\n      )\r\n      .subscribe();\r\n  }\r\n\r\n  getResourceParameter() {\r\n    this.sub$.sink = this.dataSource.responseHeaderSubject$\r\n      .subscribe((c: ResponseHeader) => {\r\n        if (c) {\r\n          this.salesOrderResource.pageSize = c.pageSize;\r\n          this.salesOrderResource.skip = c.skip;\r\n          this.salesOrderResource.totalCount = c.totalCount;\r\n        }\r\n      });\r\n  }\r\n\r\n  toggleRow(element: SalesOrder) {\r\n    this.expandedElement = this.expandedElement === element ? null : element;\r\n    this.cd.detectChanges();\r\n  }\r\n\r\n  deleteSalesOrder(salesOrder: SalesOrder) {\r\n    this.commonDialogService.deleteConformationDialog(this.translationService.getValue('ARE_YOU_SURE_YOU_WANT_TO_DELETE'))\r\n      .subscribe((isYes) => {\r\n        if (isYes) {\r\n          this.salesOrderService.deleteSalesOrder(salesOrder.id).subscribe(() => {\r\n            this.toastrService.success(this.translationService.getValue('SALES_ORDER_DELETED_SUCCESSFULLY'))\r\n            this.dataSource.loadData(this.salesOrderResource);\r\n          });\r\n        }\r\n      });\r\n  }\r\n\r\n  addPayment(salesOrder: SalesOrder): void {\r\n    const dialogRef = this.dialog.open(AddSalesOrderPaymentComponent, {\r\n      width: '100vh',\r\n      direction:this.langDir,\r\n      data: Object.assign({}, salesOrder)\r\n    });\r\n    dialogRef.afterClosed().subscribe((isAdded: boolean) => {\r\n      if (isAdded) {\r\n        this.dataSource.loadData(this.salesOrderResource);\r\n      }\r\n    })\r\n  }\r\n\r\n  viewPayment(salesOrder: SalesOrder) {\r\n    const dialogRef = this.dialog.open(ViewSalesOrderPaymentComponent, {\r\n      data: Object.assign({}, salesOrder), direction:this.langDir,\r\n    });\r\n    dialogRef.afterClosed().subscribe((isAdded: boolean) => {\r\n      if (isAdded) {\r\n        this.dataSource.loadData(this.salesOrderResource);\r\n      }\r\n    })\r\n  }\r\n\r\n  onSaleOrderReturn(saleOrder: SalesOrder){\r\n    this.router.navigate(['sales-order-return', saleOrder.id]);\r\n  }\r\n\r\n\r\n  generateInvoice(so: SalesOrder) {\r\n    let soForInvoice = this.clonerService.deepClone<SalesOrder>(so);\r\n    const getCustomerRequest = this.customerService.getCustomer(so.customerId);\r\n    const getSalesOrderItems = this.salesOrderService.getSalesOrderItems(so.id);\r\n    forkJoin({ getCustomerRequest, getSalesOrderItems }).subscribe(response => {\r\n      soForInvoice.customer = response.getCustomerRequest;\r\n      soForInvoice.salesOrderItems = response.getSalesOrderItems;\r\n      this.salesOrderForInvoice = soForInvoice;\r\n    });\r\n  }\r\n\r\n}\r\n","<div class=\"page-header-main\">\r\n  <div class=\"row align-items-center justify-content-between\">\r\n    <div class=\"col-md-auto col-sm-auto\">\r\n      <div class=\"content-header\">\r\n        <h1>{{\"SALES_ORDER\" | translate}}</h1>\r\n      </div>\r\n    </div>\r\n    <div class=\"col-md-auto col-sm-auto\">\r\n      <button class=\"btn blue-btn btn-sm m-right-10\" *hasClaim=\"'SO_ADD_SO'\" [routerLink]=\"['/sales-order/add']\">\r\n        <i class=\"fas fa-plus\"></i> {{\"ADD_SALES_ORDER\" | translate}}\r\n      </button>\r\n    </div>\r\n  </div>\r\n</div>\r\n<div class=\"loading-shade\" *ngIf=\"dataSource.loading$ | async\">\r\n  <mat-spinner></mat-spinner>\r\n</div>\r\n<div class=\"row\">\r\n  <div class=\"col-sm-12\">\r\n    <div class=\"table-responsive\">\r\n      <table [dir]=\"langDir\" mat-table [dataSource]=\"dataSource\" multiTemplateDataRows\r\n        class=\"table table-bordered table-hover grid-height\" matSort matSortActive=\"soCreatedDate\">\r\n        <ng-container matColumnDef=\"action\">\r\n          <th class=\"table-column-150\" mat-header-cell *matHeaderCellDef>\r\n          </th>\r\n          <td class=\"table-column-150\" mat-cell *matCellDef=\"let so\">\r\n            <button mat-icon-button (click)=\"toggleRow(so)\">\r\n              <mat-icon *ngIf=\"so != expandedElement\">chevron_right</mat-icon>\r\n              <mat-icon *ngIf=\"so == expandedElement\">expand_more</mat-icon>\r\n            </button>\r\n            <button class=\"ml-4\"\r\n              *hasClaim=\"['SO_UPDATE_SO','SO_VIEW_SO_DETAIL','SO_DELETE_SO','SO_RETURN_SO','SO_ADD_SO_PAYMENT','SO_VIEW_SO_PAYMENTS','SO_GENERATE_INVOICE']\"\r\n              mat-icon-button [matMenuTriggerFor]=\"menu\" aria-label=\"Action\">\r\n              <mat-icon>more_vert</mat-icon>\r\n            </button>\r\n            <mat-menu #menu=\"matMenu\" [dir]=\"langDir\">\r\n              <ng-container *ngIf=\"so.status == 0\">\r\n                <button *hasClaim=\"'SO_UPDATE_SO'\" mat-menu-item [routerLink]=\"['/sales-order/', so.id]\">\r\n                  <mat-icon>edit</mat-icon>\r\n                  <span>{{'EDIT' | translate}}</span>\r\n                </button>\r\n              </ng-container>\r\n              <button *hasClaim=\"'SO_VIEW_SO_DETAIL'\" mat-menu-item [routerLink]=\"['/sales-order/detail', so.id]\">\r\n                <mat-icon>info</mat-icon>\r\n                <span>{{'DETAIL' | translate}}</span>\r\n              </button>\r\n              <ng-container *ngIf=\"so.status == 0\">\r\n                <button *hasClaim=\"'SO_DELETE_SO'\" mat-menu-item (click)=\"deleteSalesOrder(so)\">\r\n                  <mat-icon>delete</mat-icon>\r\n                  <span>{{'DELETE' | translate}}</span>\r\n                </button>\r\n              </ng-container>\r\n              <ng-container *ngIf=\"so.status == 0\">\r\n                <button *hasClaim=\"'SO_RETURN_SO'\" mat-menu-item (click)=\"onSaleOrderReturn(so)\">\r\n                  <mat-icon>assignment_return</mat-icon>\r\n                  <span>{{\"RETURN_SALES_ORDER\" | translate}}</span>\r\n                </button>\r\n              </ng-container>\r\n              <ng-contaner *ngIf=\"so.paymentStatus != 0\">\r\n                <button *hasClaim=\"'SO_ADD_SO_PAYMENT'\" mat-menu-item (click)=\"addPayment(so)\">\r\n                  <mat-icon>payment</mat-icon>\r\n                  <span>{{\"ADD_PAYMENT\" | translate}}</span>\r\n                </button>\r\n              </ng-contaner>\r\n              <button *hasClaim=\"'SO_VIEW_SO_PAYMENTS'\" mat-menu-item (click)=\"viewPayment(so)\">\r\n                <mat-icon>view_carousel</mat-icon>\r\n                <span>{{\"VIEW_PAYMENT\" | translate}}</span>\r\n              </button>\r\n              <button *hasClaim=\"'SO_GENERATE_INVOICE'\" mat-menu-item (click)=\"generateInvoice(so)\">\r\n                <mat-icon>receipt</mat-icon>\r\n                <span>{{'GENERATE_INVOICE' | translate}}</span>\r\n              </button>\r\n            </mat-menu>\r\n          </td>\r\n        </ng-container>\r\n        <ng-container matColumnDef=\"soCreatedDate\">\r\n          <th class=\"table-column-100\" mat-header-cell *matHeaderCellDef mat-sort-header> {{'CREATED_DATE' | translate}}\r\n          </th>\r\n          <td class=\"table-column-100\" mat-cell *matCellDef=\"let so\"> {{so.soCreatedDate | utcToLocalTime:'shortDate'\r\n            }} </td>\r\n        </ng-container>\r\n        <ng-container matColumnDef=\"orderNumber\">\r\n          <th class=\"table-column-150\" mat-header-cell *matHeaderCellDef mat-sort-header> {{'ORDER_NUMBER' | translate}}\r\n          </th>\r\n          <td class=\"table-column-150\" mat-cell *matCellDef=\"let so\">\r\n            <a [routerLink]=\"['/sales-order/detail', so.id]\">{{so.orderNumber}} </a>\r\n          </td>\r\n        </ng-container>\r\n        <ng-container matColumnDef=\"deliveryDate\">\r\n          <th class=\"table-column-150\" mat-header-cell *matHeaderCellDef mat-sort-header> {{'DELIVERY_DATE' |\r\n            translate}}\r\n          </th>\r\n          <td class=\"table-column-100\" mat-cell *matCellDef=\"let so\"> {{so.deliveryDate | utcToLocalTime:'shortDate'\r\n            }} </td>\r\n        </ng-container>\r\n        <ng-container matColumnDef=\"customerName\">\r\n          <th class=\"table-column-300\" mat-header-cell mat-sort-header *matHeaderCellDef>{{'CUSTOMER_NAME' | translate}}\r\n          </th>\r\n          <td class=\"table-column-300\" mat-cell *matCellDef=\"let so\">\r\n            <a [routerLink]=\"['/customer',so.customerId]\"> {{so.customerName}} </a>\r\n          </td>\r\n        </ng-container>\r\n        <ng-container matColumnDef=\"totalDiscount\">\r\n          <th mat-header-cell *matHeaderCellDef mat-sort-header> {{'TOTAL_DISCOUNT' | translate}} </th>\r\n          <td mat-cell *matCellDef=\"let so\">\r\n            {{so.totalDiscount | customCurrency}}\r\n          </td>\r\n        </ng-container>\r\n        <ng-container matColumnDef=\"totalTax\">\r\n          <th mat-header-cell *matHeaderCellDef mat-sort-header> {{'TOTAL_TAX' | translate}} </th>\r\n          <td mat-cell *matCellDef=\"let so\">\r\n            {{so.totalTax | customCurrency}}\r\n          </td>\r\n        </ng-container>\r\n        <ng-container matColumnDef=\"totalAmount\">\r\n          <th mat-header-cell *matHeaderCellDef mat-sort-header> {{'TOTAL_AMOUNT' | translate}} </th>\r\n          <td mat-cell *matCellDef=\"let so\">\r\n            {{so.totalAmount | customCurrency}}\r\n          </td>\r\n        </ng-container>\r\n        <ng-container matColumnDef=\"totalPaidAmount\">\r\n          <th mat-header-cell *matHeaderCellDef mat-sort-header> {{'TOTAL_PAID_AMOUNT' | translate}} </th>\r\n          <td mat-cell *matCellDef=\"let so\">\r\n            {{so.totalPaidAmount | customCurrency }}\r\n          </td>\r\n        </ng-container>\r\n        <ng-container matColumnDef=\"paymentStatus\">\r\n          <th class=\"table-column-150\" mat-header-cell *matHeaderCellDef mat-sort-header> {{'PAYMENT_STATUS' |\r\n            translate}} </th>\r\n          <td class=\"table-column-150\" mat-cell *matCellDef=\"let so\" style=\"text-align: center;\">\r\n            <span class=\"badge-pill\" [ngClass]=\"{'badge-success': so.paymentStatus ==  0,\r\n              'badge-danger' : so.paymentStatus == 1,\r\n              'badge-warning' : so.paymentStatus == 2}\">{{so.paymentStatus | paymentStatus }}</span>\r\n          </td>\r\n        </ng-container>\r\n        <ng-container matColumnDef=\"status\">\r\n          <th mat-header-cell *matHeaderCellDef mat-sort-header> {{'IS_RETURN' | translate}} </th>\r\n          <td mat-cell *matCellDef=\"let so\">\r\n            <ng-contaner *ngIf=\"so.status ==1\">\r\n              {{'YES' | translate}}\r\n            </ng-contaner>\r\n            <ng-contaner *ngIf=\"so.status != 1\">\r\n              {{'NO' | translate}}\r\n            </ng-contaner>\r\n          </td>\r\n        </ng-container>\r\n        <ng-container matColumnDef=\"action-search\">\r\n          <th mat-header-cell *matHeaderCellDef> </th>\r\n        </ng-container>\r\n        <ng-container matColumnDef=\"soCreatedDate-search\">\r\n          <th mat-header-cell *matHeaderCellDef>\r\n          </th>\r\n        </ng-container>\r\n        <ng-container matColumnDef=\"orderNumber-search\">\r\n          <th mat-header-cell *matHeaderCellDef>\r\n            <input placeholder=\"{{'ORDER_NO' | translate}}\" type=\"text\" class=\"form-control w-90\"\r\n              [(ngModel)]=\"OrderNumberFilter\">\r\n          </th>\r\n        </ng-container>\r\n        <ng-container matColumnDef=\"deliverDate-search\">\r\n          <th mat-header-cell *matHeaderCellDef>\r\n          </th>\r\n        </ng-container>\r\n        <ng-container matColumnDef=\"customer-search\">\r\n          <th mat-header-cell *matHeaderCellDef>\r\n            <input placeholder=\"{{'CUSTOMER' | translate}}\" type=\"text\" class=\"form-control w-90\"\r\n              [formControl]=\"customerNameControl\" [matAutocomplete]=\"autoCustomer\">\r\n            <mat-autocomplete [dir]=\"langDir\" [autoActiveFirstOption]=\"true\"\r\n              (optionSelected)='CustomerFilter=$event.option.value' #autoCustomer=\"matAutocomplete\">\r\n              <mat-option value=\"\">{{'NONE' | translate}}</mat-option>\r\n              <mat-option [dir]=\"langDir\" *ngFor=\"let customer of customerList$ | async\"\r\n                [value]=\"customer.customerName\">\r\n                {{customer.customerName}}\r\n              </mat-option>\r\n            </mat-autocomplete>\r\n          </th>\r\n        </ng-container>\r\n        <ng-container matColumnDef=\"totalAmount-search\">\r\n          <th mat-header-cell *matHeaderCellDef>\r\n          </th>\r\n        </ng-container>\r\n        <ng-container matColumnDef=\"totalDiscount-search\">\r\n          <th mat-header-cell *matHeaderCellDef>\r\n          </th>\r\n        </ng-container>\r\n        <ng-container matColumnDef=\"totalTax-search\">\r\n          <th mat-header-cell *matHeaderCellDef>\r\n          </th>\r\n        </ng-container>\r\n        <ng-container matColumnDef=\"totalPaidAmount-search\">\r\n          <th mat-header-cell *matHeaderCellDef>\r\n          </th>\r\n        </ng-container>\r\n        <ng-container matColumnDef=\"paymentStatus-search\">\r\n          <th mat-header-cell *matHeaderCellDef>\r\n          </th>\r\n        </ng-container>\r\n        <ng-container matColumnDef=\"status-search\">\r\n          <th mat-header-cell *matHeaderCellDef>\r\n          </th>\r\n        </ng-container>\r\n        <ng-container matColumnDef=\"footer\">\r\n          <td mat-footer-cell colspan=\"12\" *matFooterCellDef>\r\n            <mat-paginator [dir]=\"langDir\" [length]=\"salesOrderResource.totalCount\"\r\n              [pageSize]=\"salesOrderResource.pageSize\" [pageSizeOptions]=\"[10, 20, 30]\">\r\n            </mat-paginator>\r\n          </td>\r\n        </ng-container>\r\n        <ng-container matColumnDef=\"expandedDetail\">\r\n          <td mat-cell *matCellDef=\"let soObject\" [attr.colspan]=\"displayedColumns.length\">\r\n            <ng-container *ngIf=\"soObject == expandedElement\">\r\n              <div class=\"example-element-detail\"\r\n                [@detailExpand]=\"soObject == expandedElement ? 'expanded' : 'collapsed'\">\r\n                <div class=\"inner-table mat-elevation-z8\">\r\n                  <app-sales-order-items [salesOrder]=\"soObject\">\r\n                  </app-sales-order-items>\r\n                </div>\r\n              </div>\r\n            </ng-container>\r\n          </td>\r\n        </ng-container>\r\n        <tr *matNoDataRow>\r\n          <td colspan=\"9\">\r\n            <span class=\"p-4 mt-4\">\r\n              <b> {{'NO_DATA_FOUND' | translate}}</b>\r\n            </span>\r\n          </td>\r\n        </tr>\r\n        <tr mat-header-row *matHeaderRowDef=\"displayedColumns;sticky: true\"></tr>\r\n        <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\" [class.bg-warning1]=\"row.status===1\"></tr>\r\n        <tr mat-header-row *matHeaderRowDef=\"filterColumns;sticky: true\">\r\n\r\n        <tr mat-footer-row *matFooterRowDef=\"footerToDisplayed;sticky: true\"></tr>\r\n        <tr mat-row *matRowDef=\"let row; columns: ['expandedDetail']\" class=\"example-detail-row\"></tr>\r\n      </table>\r\n    </div>\r\n  </div>\r\n</div>\r\n<ng-container *ngIf=\"salesOrderForInvoice\">\r\n  <app-sales-order-invoice [salesOrder]=\"salesOrderForInvoice\"></app-sales-order-invoice>\r\n</ng-container>","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { RouterModule, Routes } from '@angular/router';\r\nimport { SalesOrderListComponent } from './sales-order-list/sales-order-list.component';\r\nimport { SalesOrderAddEditComponent } from './sales-order-add-edit/sales-order-add-edit.component';\r\nimport { AuthGuard } from '@core/security/auth.guard';\r\nimport { SalesOrderByIdResolver } from './sales-order-add-edit/sales-oredr-by-id-resolve';\r\nimport { SalesOrderUnitResolver } from './sales-order-add-edit/sales-order-unit-resolve';\r\nimport { SalesOrderTaxResolver } from './sales-order-add-edit/sales-order-tax-resolve';\r\nimport { ProductsResolver } from '@core/services/products.resolve';\r\nimport { SalesOrderDetailComponent } from './sales-order-detail/sales-order-detail.component';\r\nimport { SaleOrderWarehouseResolver } from './sales-order-add-edit/sale-order-warehouse.resolve';\r\n\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: 'list',\r\n    component: SalesOrderListComponent,\r\n    data: { claimType: 'SO_VIEW_SALES_ORDERS' },\r\n    canActivate: [AuthGuard]\r\n  }, {\r\n    path: ':id',\r\n    component: SalesOrderAddEditComponent,\r\n    data: { claimType: ['SO_ADD_SO','SO_UPDATE_SO']},\r\n    canActivate: [AuthGuard],\r\n    resolve: {\r\n      'units': SalesOrderUnitResolver,\r\n      'warehouses':SaleOrderWarehouseResolver,\r\n      'taxs': SalesOrderTaxResolver,\r\n      'salesorder': SalesOrderByIdResolver,\r\n      'products': ProductsResolver\r\n    }\r\n  },\r\n  {\r\n    path: 'detail/:id',\r\n    component: SalesOrderDetailComponent,\r\n    data: { claimType: 'SO_VIEW_SO_DETAIL' },\r\n    canActivate: [AuthGuard]\r\n  }\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class SalesOrderRoutingModule { }\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { SalesOrderListComponent } from './sales-order-list/sales-order-list.component';\r\nimport { SalesOrderAddEditComponent } from './sales-order-add-edit/sales-order-add-edit.component';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport { SharedModule } from '@shared/shared.module';\r\nimport { MatDatepickerModule } from '@angular/material/datepicker';\r\nimport { MatNativeDateModule } from '@angular/material/core';\r\nimport { MatInputModule } from '@angular/material/input';\r\nimport { MatFormFieldModule } from '@angular/material/form-field';\r\nimport { MatRadioModule } from '@angular/material/radio';\r\nimport { MatSelectModule } from '@angular/material/select';\r\nimport { MatCardModule } from '@angular/material/card';\r\nimport { MatTableModule } from '@angular/material/table';\r\nimport { MatPaginatorModule } from '@angular/material/paginator';\r\nimport { MatSortModule } from '@angular/material/sort';\r\nimport { MatMenuModule } from '@angular/material/menu';\r\nimport { MatIconModule } from '@angular/material/icon';\r\nimport { MatButtonModule } from '@angular/material/button';\r\nimport { MatAutocompleteModule } from '@angular/material/autocomplete';\r\nimport { MatProgressSpinnerModule } from '@angular/material/progress-spinner';\r\nimport { OwlDateTimeModule, OwlNativeDateTimeModule } from 'ng-pick-datetime-ex';\r\nimport { MatCheckboxModule } from '@angular/material/checkbox';\r\nimport { MatDividerModule } from '@angular/material/divider';\r\nimport { SalesOrderRoutingModule } from './sales-order-routing.module';\r\nimport { SalesOrderItemsComponent } from './sales-order-list/sales-order-items/sales-order-items.component';\r\nimport { ViewSalesOrderPaymentComponent } from './view-sales-order-payment/view-sales-order-payment.component';\r\nimport { AddSalesOrderPaymentComponent } from './add-sales-order-payment/add-sales-order-payment.component';\r\nimport { SalesOrderDetailComponent } from './sales-order-detail/sales-order-detail.component';\r\n\r\n\r\n\r\n@NgModule({\r\n  declarations: [\r\n    SalesOrderListComponent,\r\n    SalesOrderAddEditComponent,\r\n    SalesOrderItemsComponent,\r\n    ViewSalesOrderPaymentComponent,\r\n    AddSalesOrderPaymentComponent,\r\n    SalesOrderDetailComponent,\r\n    \r\n  ],\r\n  imports: [\r\n    CommonModule,\r\n    SalesOrderRoutingModule,\r\n    FormsModule,\r\n    ReactiveFormsModule,\r\n    SharedModule,\r\n    MatDatepickerModule,\r\n    MatNativeDateModule,\r\n    MatInputModule,\r\n    MatFormFieldModule,\r\n    MatRadioModule,\r\n    MatSelectModule,\r\n    MatCardModule,\r\n    MatTableModule,\r\n    MatPaginatorModule,\r\n    MatSortModule,\r\n    MatMenuModule,\r\n    MatIconModule,\r\n    MatButtonModule,\r\n    MatAutocompleteModule,\r\n    MatProgressSpinnerModule,\r\n    OwlDateTimeModule,\r\n    OwlNativeDateTimeModule,\r\n    MatCheckboxModule,\r\n    MatDividerModule\r\n  ]\r\n})\r\nexport class SalesOrderModule { }\r\n"],"names":[],"sourceRoot":"webpack:///","x_google_ignoreList":[]}