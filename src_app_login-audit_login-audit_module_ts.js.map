{"version":3,"file":"src_app_login-audit_login-audit_module_ts.js","mappings":";;;;;;;;;;;;;;AAAyD;AAElD,MAAM,kBAAmB,SAAQ,kEAAiB;IAAzD;;QACI,OAAE,GAAY,EAAE,CAAC;QACjB,aAAQ,GAAY,EAAE,CAAC;IAC3B,CAAC;CAAA;;;;;;;;;;;;;;;ACLM,MAAe,iBAAiB;IAAvC;QACE,WAAM,GAAG,EAAE,CAAC;QACZ,YAAO,GAAG,EAAE,CAAC;QACb,gBAAW,GAAG,EAAE,CAAC;QACjB,aAAQ,GAAG,EAAE,CAAC;QACd,SAAI,GAAG,CAAC,CAAC;QACT,SAAI,GAAG,EAAE,CAAC;QACV,eAAU,GAAG,CAAC,CAAC;IACjB,CAAC;CAAA;;;;;;;;;;;;;;;;;;;ACHsD;AACD;AAG/C,MAAM,oBAAoB;IAgB7B,YAAoB,iBAAoC;QAApC,sBAAiB,GAAjB,iBAAiB,CAAmB;QAdhD,sBAAiB,GAAG,IAAI,iDAAe,CAAe,EAAE,CAAC,CAAC;QAC1D,0BAAqB,GAAG,IAAI,iDAAe,CAAiB,IAAI,CAAC,CAAC;QAClE,mBAAc,GAAG,IAAI,iDAAe,CAAU,KAAK,CAAC,CAAC;QAEtD,aAAQ,GAAG,IAAI,CAAC,cAAc,CAAC,YAAY,EAAE,CAAC;QAC7C,WAAM,GAAW,CAAC,CAAC;QAOpB,2BAAsB,GAAG,IAAI,CAAC,qBAAqB,CAAC,YAAY,EAAE,CAAC;IAEd,CAAC;IAN7D,IAAW,KAAK;QACZ,OAAO,IAAI,CAAC,MAAM,CAAC;IACvB,CAAC;IAMD,OAAO;QACH,OAAO,IAAI,CAAC,iBAAiB,CAAC,YAAY,EAAE,CAAC;IACjD,CAAC;IAED,UAAU;QACN,IAAI,CAAC,iBAAiB,CAAC,QAAQ,EAAE,CAAC;QAClC,IAAI,CAAC,cAAc,CAAC,QAAQ,EAAE,CAAC;IACnC,CAAC;IAED,eAAe,CAAC,kBAAsC;QAClD,IAAI,CAAC,cAAc,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;QAC/B,IAAI,CAAC,iBAAiB,CAAC,cAAc,CAAC,kBAAkB,CAAC,CAAC,IAAI,CAC1D,0DAAU,CAAC,GAAG,EAAE,CAAC,wCAAE,CAAC,EAAE,CAAC,CAAC,EACxB,wDAAQ,CAAC,GAAG,EAAE,CAAC,IAAI,CAAC,cAAc,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,CAClD;aACI,SAAS,CACN,CAAC,IAAgC,EAAE,EAAE;YACjC,MAAM,eAAe,GAAG,IAAI,CAAC,KAAK,CAC9B,IAAI,CAAC,OAAO,CAAC,GAAG,CAAC,cAAc,CAAC,CACjB,CAAC;YACpB,IAAI,CAAC,qBAAqB,CAAC,IAAI,CAAC,eAAe,CAAC,CAAC;YACjD,MAAM,gBAAgB,GAAG,CAAC,GAAG,IAAI,CAAC,IAAI,CAAC,CAAC;YACxC,IAAI,CAAC,MAAM,GAAG,gBAAgB,CAAC,MAAM,CAAC;YACtC,IAAI,CAAC,iBAAiB,CAAC,IAAI,CAAC,gBAAgB,CAAC,CAAC;QAClD,CAAC,CACJ,CAAC;IACV,CAAC;CACJ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACtDuF;AAC7B;AACV;AAE8B;AAG3B;AACqB;AAClB;AACU;;;;;;;;;;;;;ICC7D,0EAA+D;IAC3D,yEAA2B;IAC/B,4DAAM;;;IAQM,yEAAsD;IAClD,uDACJ;;IAAA,4DAAK;;IADD,0DACJ;IADI,wJACJ;;;IACA,yEAAqC;IAAC,uDAAkD;;IAAA,4DAAK;;;IAAvD,0DAAkD;IAAlD,kNAAkD;;;IAGxF,yEAAsD;IAClD,uDACJ;;IAAA,4DAAK;;IADD,0DACJ;IADI,oJACJ;;;IACA,yEAAqC;IAAC,uDAAmB;IAAA,4DAAK;;;IAAxB,0DAAmB;IAAnB,8FAAmB;;;IAGzD,yEAAsD;IAClD,uDACJ;;IAAA,4DAAK;;IADD,0DACJ;IADI,qJACJ;;;IAEI,2EAAmE;IAAA,uDAAiB;IAAA,4DAAO;;;IAAxB,0DAAiB;IAAjB,4GAAiB;;;IACpF,2EAAiE;IAAA,uDAAiB;IAAA,4DAAO;;;IAAxB,0DAAiB;IAAjB,4GAAiB;;;IAFtF,yEAAqC;IACjC,4HAA2F;IAC3F,4HAAyF;IAC7F,4DAAK;;;IAFM,0DAA8B;IAA9B,4HAA8B;IAC9B,0DAA4B;IAA5B,0HAA4B;;;IAIvC,yEAAsD;IAAC,uDAA6B;;IAAA,4DAAK;;IAAlC,0DAA6B;IAA7B,yJAA6B;;;IACpF,yEAAqC;IAAC,uDAAmB;IAAA,4DAAK;;;IAAxB,0DAAmB;IAAnB,8FAAmB;;;IAIzD,yEAAsC;IAAC,uDAA2B;;IAAA,4DAAK;;IAAhC,0DAA2B;IAA3B,uJAA2B;;;IAClE,yEAAqC;IAAC,uDAAmB;IAAA,4DAAK;;;IAAxB,0DAAmB;IAAnB,8FAAmB;;;IAIzD,yEAAsC;IAAC,uDAA4B;;IAAA,4DAAK;;IAAjC,0DAA4B;IAA5B,wJAA4B;;;IACnE,yEAAqC;IAAC,uDAAoB;IAAA,4DAAK;;;IAAzB,0DAAoB;IAApB,+FAAoB;;;IAE9D,oEAAyE;;;IACzE,oEAAkE;;;IAEtE,wEAA6C;IACzC,0EAAiB;IAEuB,uDAA+B;;IAAA,4DAAQ;IAGnF,qEAAe;;IAH6B,0DAA+B;IAA/B,iJAA+B;;;AD3C5E,MAAM,uBAAwB,SAAQ,iEAAa;IAYxD,YAAoB,iBAAoC,EAAQ,kBAAqC;QACnG,KAAK,CAAC,kBAAkB,CAAC,CAAC;QADR,sBAAiB,GAAjB,iBAAiB,CAAmB;QAAQ,uBAAkB,GAAlB,kBAAkB,CAAmB;QATrG,gBAAW,GAAiB,EAAE,CAAC;QAC/B,qBAAgB,GAAa,CAAC,WAAW,EAAE,UAAU,EAAE,UAAU,EAAE,QAAQ,EAAE,UAAU,EAAE,WAAW,CAAC,CAAC;QACtG,qBAAgB,GAAG,IAAI,CAAC;QAStB,IAAI,CAAC,UAAU,EAAE,CAAC;QAClB,IAAI,CAAC,kBAAkB,GAAG,IAAI,yFAAkB,EAAE,CAAC;QACnD,IAAI,CAAC,kBAAkB,CAAC,QAAQ,GAAG,EAAE,CAAC;QACtC,IAAI,CAAC,kBAAkB,CAAC,OAAO,GAAG,gBAAgB;IACpD,CAAC;IAED,QAAQ;QACN,IAAI,CAAC,UAAU,GAAG,IAAI,yEAAoB,CAAC,IAAI,CAAC,iBAAiB,CAAC,CAAC;QACnE,IAAI,CAAC,UAAU,CAAC,eAAe,CAAC,IAAI,CAAC,kBAAkB,CAAC,CAAC;QACzD,IAAI,CAAC,oBAAoB,EAAE,CAAC;IAC9B,CAAC;IAED,eAAe;QACb,IAAI,CAAC,IAAI,CAAC,UAAU,CAAC,SAAS,CAAC,GAAG,EAAE,CAAC,IAAI,CAAC,SAAS,CAAC,SAAS,GAAG,CAAC,CAAC,CAAC;QAEnE,IAAI,CAAC,IAAI,CAAC,IAAI,GAAG,2CAAK,CAAC,IAAI,CAAC,IAAI,CAAC,UAAU,EAAE,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC;aAC9D,IAAI,CACH,mDAAG,CAAC,CAAC,CAAM,EAAE,EAAE;YACb,IAAI,CAAC,kBAAkB,CAAC,IAAI,GAAG,IAAI,CAAC,SAAS,CAAC,SAAS,GAAG,IAAI,CAAC,SAAS,CAAC,QAAQ,CAAC;YAClF,IAAI,CAAC,kBAAkB,CAAC,QAAQ,GAAG,IAAI,CAAC,SAAS,CAAC,QAAQ,CAAC;YAC3D,IAAI,CAAC,kBAAkB,CAAC,OAAO,GAAG,IAAI,CAAC,IAAI,CAAC,MAAM,GAAG,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,SAAS,CAAC;YAC/E,IAAI,CAAC,UAAU,CAAC,eAAe,CAAC,IAAI,CAAC,kBAAkB,CAAC,CAAC;QAC3D,CAAC,CAAC,CACH;aACA,SAAS,EAAE,CAAC;QAEf,IAAI,CAAC,IAAI,CAAC,IAAI,GAAG,+CAAS,CAAC,IAAI,CAAC,KAAK,CAAC,aAAa,EAAE,OAAO,CAAC;aAC1D,IAAI,CACH,4DAAY,CAAC,IAAI,CAAC,EAClB,qEAAoB,EAAE,EACtB,mDAAG,CAAC,GAAG,EAAE;YACP,IAAI,CAAC,SAAS,CAAC,SAAS,GAAG,CAAC,CAAC;YAC7B,IAAI,CAAC,kBAAkB,CAAC,QAAQ,GAAG,IAAI,CAAC,KAAK,CAAC,aAAa,CAAC,KAAK,CAAC;YAClE,IAAI,CAAC,UAAU,CAAC,eAAe,CAAC,IAAI,CAAC,kBAAkB,CAAC,CAAC;QAC3D,CAAC,CAAC,CACH;aACA,SAAS,EAAE,CAAC;IACjB,CAAC;IAED,oBAAoB;QAClB,IAAI,CAAC,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC,UAAU,CAAC,sBAAsB;aACpD,SAAS,CAAC,CAAC,CAAiB,EAAE,EAAE;YAC/B,IAAI,CAAC,EAAE;gBACL,IAAI,CAAC,kBAAkB,CAAC,QAAQ,GAAG,CAAC,CAAC,QAAQ,CAAC;gBAC9C,IAAI,CAAC,kBAAkB,CAAC,IAAI,GAAG,CAAC,CAAC,IAAI,CAAC;gBACtC,IAAI,CAAC,kBAAkB,CAAC,UAAU,GAAG,CAAC,CAAC,UAAU,CAAC;aACnD;QACH,CAAC,CAAC,CAAC;IACP,CAAC;;8FA9DU,uBAAuB;qHAAvB,uBAAuB;kEAQvB,sEAAY;kEACZ,4DAAO;;;;;;;;QC3BpB,yEAA8B;QAIV,uDAAkC;;QAAA,4DAAK;QAM3D,yEAA8B;QAC1B,mHAEM;;QACN,0EAA8B;QAEtB,0EAAuF;;QAC3F,4DAAM;QACN,6EACsD;QAClD,6EAAuC;QACnC,oHAEK;QACL,oHAA6F;QACjG,qEAAe;QACf,6EAAsC;QAClC,oHAEK;QACL,oHAA8D;QAClE,qEAAe;QACf,6EAAoC;QAChC,oHAEK;QACL,oHAGK;QACT,qEAAe;QACf,6EAAsC;QAClC,oHAAyF;QACzF,oHAA8D;QAClE,qEAAe;QAEf,6EAAsC;QAClC,oHAAuE;QACvE,oHAA8D;QAClE,qEAAe;QAEf,6EAAuC;QACnC,oHAAwE;QACxE,oHAA+D;QACnE,qEAAe;QACf,oHAAyE;QACzE,oHAAkE;QACtE,4DAAQ;QACR,wIAMe;QACf,gFACqD;QACzD,4DAAM;;QA/DU,0DAAkC;QAAlC,qJAAkC;QAOtB,0DAAiC;QAAjC,2JAAiC;QAKzB,0DAAmD;QAAnD,4KAAmD;QAE3E,0DAAe;QAAf,4EAAe;QAqCC,2DAAkC;QAAlC,iGAAkC;QACrB,0DAA0B;QAA1B,kGAA0B;QAEhD,0DAA4B;QAA5B,4FAA4B;QAOd,0DAAwC;QAAxC,qGAAwC;;;;;;;;;;;;;;;;;;;;AChEtB;AACD;AACkC;;;AAExF,MAAM,MAAM,GAAW;IACrB;QACE,IAAI,EAAE,EAAE;QACR,SAAS,EAAE,iGAAuB;QAClC,IAAI,EAAE,EAAE,SAAS,EAAE,wBAAwB,EAAE;QAC7C,WAAW,EAAE,CAAC,gEAAS,CAAC;KACzB;CACF,CAAC;AAUK,MAAM,uBAAuB;;8FAAvB,uBAAuB;oHAAvB,uBAAuB;wHALhC,kEAAqB,CAAC,MAAM,CAAC,EAE7B,yDAAY;mIAGH,uBAAuB,oFAHhC,yDAAY;;;;;;;;;;;;;;;;;;;;;;;;;AClB+B;AACyC;AAC/B;AACqB;AACvB;AACU;AACR;AACc;AACjB;;AAe/C,MAAM,gBAAgB;;gFAAhB,gBAAgB;6GAAhB,gBAAgB;iHAVzB,yDAAY;QACZ,mEAAc;QACd,wFAAwB;QACxB,iEAAa;QACb,2EAAkB;QAClB,mEAAc;QACd,gFAAuB;QACvB,gEAAe;mIAGN,gBAAgB,mBAZZ,iGAAuB,aAEpC,yDAAY;QACZ,mEAAc;QACd,wFAAwB;QACxB,iEAAa;QACb,2EAAkB;QAClB,mEAAc;QACd,gFAAuB;QACvB,gEAAe;;;;;;;;;;;;;;;;;;;ACrByD;AAOhC;;;;AAKrC,MAAM,iBAAiB;IAE1B,YACY,UAAsB,EACtB,sBAA8C;QAD9C,eAAU,GAAV,UAAU,CAAY;QACtB,2BAAsB,GAAtB,sBAAsB,CAAwB;IAAI,CAAC;IAE/D,cAAc,CAAC,QAA4B;QACvC,MAAM,GAAG,GAAG,YAAY,CAAC;QACzB,MAAM,YAAY,GAAG,IAAI,4DAAU,EAAE;aAChC,GAAG,CAAC,QAAQ,EAAE,QAAQ,CAAC,MAAM,CAAC;aAC9B,GAAG,CAAC,SAAS,EAAE,QAAQ,CAAC,OAAO,CAAC;aAChC,GAAG,CAAC,UAAU,EAAE,QAAQ,CAAC,QAAQ,CAAC,QAAQ,EAAE,CAAC;aAC7C,GAAG,CAAC,MAAM,EAAE,QAAQ,CAAC,IAAI,CAAC,QAAQ,EAAE,CAAC;aACrC,GAAG,CAAC,aAAa,EAAE,QAAQ,CAAC,WAAW,CAAC;aACxC,GAAG,CAAC,IAAI,EAAE,QAAQ,CAAC,EAAE,CAAC,QAAQ,EAAE,CAAC;aACjC,GAAG,CAAC,UAAU,EAAE,QAAQ,CAAC,QAAQ,CAAC,QAAQ,EAAE,CAAC;QAElD,OAAO,IAAI,CAAC,UAAU,CAAC,GAAG,CAAe,GAAG,EAAE;YAC1C,MAAM,EAAE,YAAY;YACpB,OAAO,EAAE,UAAU;SACtB,CAAC,CAAC,IAAI,CAAC,0DAAU,CAAC,IAAI,CAAC,sBAAsB,CAAC,WAAW,CAAC,CAAC,CAAC;IACjE,CAAC;;kFArBQ,iBAAiB;kHAAjB,iBAAiB,WAAjB,iBAAiB,mBAFd,MAAM","sources":["./src/app/core/domain-classes/login-audit-resource.ts","./src/app/core/domain-classes/resource-parameter.ts","./src/app/login-audit/login-audit-datasource.ts","./src/app/login-audit/login-audit-list/login-audit-list.component.ts","./src/app/login-audit/login-audit-list/login-audit-list.component.html","./src/app/login-audit/login-audit-routing.module.ts","./src/app/login-audit/login-audit.module.ts","./src/app/login-audit/login-audit.service.ts"],"sourcesContent":["import { ResourceParameter } from './resource-parameter';\r\n\r\nexport class LoginAuditResource extends ResourceParameter {\r\n    id?: string = '';\r\n    userName?: string = '';\r\n}","export abstract class ResourceParameter {\r\n  fields = '';\r\n  orderBy = '';\r\n  searchQuery = '';\r\n  pageSize = 30;\r\n  skip = 0;\r\n  name = '';\r\n  totalCount = 0;\r\n}\r\n","import { DataSource } from '@angular/cdk/table';\r\nimport { HttpResponse } from '@angular/common/http';\r\nimport { LoginAudit } from '@core/domain-classes/login-audit';\r\nimport { LoginAuditResource } from '@core/domain-classes/login-audit-resource';\r\nimport { ResponseHeader } from '@core/domain-classes/response-header';\r\nimport { BehaviorSubject, Observable, of } from 'rxjs';\r\nimport { catchError, finalize } from 'rxjs/operators';\r\nimport { LoginAuditService } from './login-audit.service';\r\n\r\nexport class LoginAuditDataSource implements DataSource<LoginAudit> {\r\n\r\n    private loginAuditSubject = new BehaviorSubject<LoginAudit[]>([]);\r\n    private responseHeaderSubject = new BehaviorSubject<ResponseHeader>(null);\r\n    private loadingSubject = new BehaviorSubject<boolean>(false);\r\n\r\n    public loading$ = this.loadingSubject.asObservable();\r\n    private _count: number = 0;\r\n\r\n\r\n    public get count(): number {\r\n        return this._count;\r\n    }\r\n\r\n    public responseHeaderSubject$ = this.responseHeaderSubject.asObservable();\r\n\r\n    constructor(private loginAuditService: LoginAuditService) { }\r\n\r\n    connect(): Observable<LoginAudit[]> {\r\n        return this.loginAuditSubject.asObservable();\r\n    }\r\n\r\n    disconnect(): void {\r\n        this.loginAuditSubject.complete();\r\n        this.loadingSubject.complete();\r\n    }\r\n\r\n    loadLoginAudits(loginAuditResource: LoginAuditResource) {\r\n        this.loadingSubject.next(true);\r\n        this.loginAuditService.getLoginAudits(loginAuditResource).pipe(\r\n            catchError(() => of([])),\r\n            finalize(() => this.loadingSubject.next(false))\r\n        )\r\n            .subscribe(\r\n                (resp: HttpResponse<LoginAudit[]>) => {\r\n                    const paginationParam = JSON.parse(\r\n                        resp.headers.get('X-Pagination')\r\n                    ) as ResponseHeader;\r\n                    this.responseHeaderSubject.next(paginationParam);\r\n                    const loginAuditTrails = [...resp.body];\r\n                    this._count = loginAuditTrails.length;\r\n                    this.loginAuditSubject.next(loginAuditTrails);\r\n                }\r\n            );\r\n    }\r\n}\r\n","import { AfterViewInit, Component, ElementRef, OnInit, ViewChild } from '@angular/core';\r\nimport { MatPaginator } from '@angular/material/paginator';\r\nimport { MatSort } from '@angular/material/sort';\r\nimport { LoginAudit } from '@core/domain-classes/login-audit';\r\nimport { LoginAuditResource } from '@core/domain-classes/login-audit-resource';\r\nimport { ResponseHeader } from '@core/domain-classes/response-header';\r\nimport { TranslationService } from '@core/services/translation.service';\r\nimport { fromEvent, merge, Observable } from 'rxjs';\r\nimport { debounceTime, distinctUntilChanged, tap } from 'rxjs/operators';\r\nimport { BaseComponent } from 'src/app/base.component';\r\nimport { LoginAuditDataSource } from '../login-audit-datasource';\r\nimport { LoginAuditService } from '../login-audit.service';\r\n\r\n@Component({\r\n  selector: 'app-login-audit-list',\r\n  templateUrl: './login-audit-list.component.html',\r\n  styleUrls: ['./login-audit-list.component.scss']\r\n})\r\nexport class LoginAuditListComponent extends BaseComponent implements OnInit, AfterViewInit {\r\n\r\n  dataSource: LoginAuditDataSource;\r\n  loginAudits: LoginAudit[] = [];\r\n  displayedColumns: string[] = ['loginTime', 'userName', 'remoteIP', 'status', 'latitude', 'longitude'];\r\n  isLoadingResults = true;\r\n  loginAuditResource: LoginAuditResource;\r\n  loading$: Observable<boolean>;\r\n  @ViewChild(MatPaginator) paginator: MatPaginator;\r\n  @ViewChild(MatSort) sort: MatSort;\r\n  @ViewChild('input') input: ElementRef;\r\n\r\n  constructor(private loginAuditService: LoginAuditService,public translationService:TranslationService) {\r\n    super(translationService);\r\n    this.getLangDir();\r\n    this.loginAuditResource = new LoginAuditResource();\r\n    this.loginAuditResource.pageSize = 10;\r\n    this.loginAuditResource.orderBy = 'loginTime desc'\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.dataSource = new LoginAuditDataSource(this.loginAuditService);\r\n    this.dataSource.loadLoginAudits(this.loginAuditResource);\r\n    this.getResourceParameter();\r\n  }\r\n\r\n  ngAfterViewInit() {\r\n    this.sort.sortChange.subscribe(() => this.paginator.pageIndex = 0);\r\n\r\n    this.sub$.sink = merge(this.sort.sortChange, this.paginator.page)\r\n      .pipe(\r\n        tap((c: any) => {\r\n          this.loginAuditResource.skip = this.paginator.pageIndex * this.paginator.pageSize;\r\n          this.loginAuditResource.pageSize = this.paginator.pageSize;\r\n          this.loginAuditResource.orderBy = this.sort.active + ' ' + this.sort.direction;\r\n          this.dataSource.loadLoginAudits(this.loginAuditResource);\r\n        })\r\n      )\r\n      .subscribe();\r\n\r\n    this.sub$.sink = fromEvent(this.input.nativeElement, 'keyup')\r\n      .pipe(\r\n        debounceTime(1000),\r\n        distinctUntilChanged(),\r\n        tap(() => {\r\n          this.paginator.pageIndex = 0;\r\n          this.loginAuditResource.userName = this.input.nativeElement.value;\r\n          this.dataSource.loadLoginAudits(this.loginAuditResource);\r\n        })\r\n      )\r\n      .subscribe();\r\n  }\r\n\r\n  getResourceParameter() {\r\n    this.sub$.sink = this.dataSource.responseHeaderSubject$\r\n      .subscribe((c: ResponseHeader) => {\r\n        if (c) {\r\n          this.loginAuditResource.pageSize = c.pageSize;\r\n          this.loginAuditResource.skip = c.skip;\r\n          this.loginAuditResource.totalCount = c.totalCount;\r\n        }\r\n      });\r\n  }\r\n\r\n}\r\n","<div class=\"page-header-main\">\r\n    <div class=\"row align-items-center justify-content-between\">\r\n        <div class=\"col-md-auto col-sm-auto\">\r\n            <div class=\"content-header\">\r\n                <h1>{{'LOGIN_AUDIT_LOGS' | translate}}</h1>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>\r\n\r\n<div class=\"mat-elevation-z8\">\r\n    <div class=\"loading-shade\" *ngIf=\"dataSource.loading$ | async\">\r\n        <mat-spinner></mat-spinner>\r\n    </div>\r\n    <div class=\"table-responsive\">\r\n        <div class=\"mb-3 col-sm-5\">\r\n            <input class=\"form-control\" placeholder=\"{{'SEARCH_BY_USER_NAME' | translate}}\" #input>\r\n        </div>\r\n        <table  [dir]=\"langDir\" mat-table [dataSource]=\"dataSource\" class=\"table table-bordered table-hover\" matSort\r\n            matSortActive=\"loginTime\" matSortDirection=\"desc\">\r\n            <ng-container matColumnDef=\"loginTime\">\r\n                <th mat-header-cell *matHeaderCellDef mat-sort-header>\r\n                    {{'DATE_TIME'| translate}}\r\n                </th>\r\n                <td mat-cell *matCellDef=\"let audit\"> {{audit?.loginTime | date:\"dd/MM/yyyy hh:mm:ss\"}} </td>\r\n            </ng-container>\r\n            <ng-container matColumnDef=\"userName\">\r\n                <th mat-header-cell *matHeaderCellDef mat-sort-header>\r\n                    {{'EMAIL' | translate}}\r\n                </th>\r\n                <td mat-cell *matCellDef=\"let audit\"> {{audit.userName}} </td>\r\n            </ng-container>\r\n            <ng-container matColumnDef=\"status\">\r\n                <th mat-header-cell *matHeaderCellDef mat-sort-header>\r\n                    {{'STATUS'| translate}}\r\n                </th>\r\n                <td mat-cell *matCellDef=\"let audit\">\r\n                    <span *ngIf=\"audit?.status=='Success'\" class=\"badge badge-success\">{{audit?.status}}</span>\r\n                    <span *ngIf=\"audit?.status=='Error'\" class=\"badge badge-warning\">{{audit?.status}}</span>\r\n                </td>\r\n            </ng-container>\r\n            <ng-container matColumnDef=\"remoteIP\">\r\n                <th mat-header-cell *matHeaderCellDef mat-sort-header> {{'IP_ADDRESS' | translate}} </th>\r\n                <td mat-cell *matCellDef=\"let audit\"> {{audit.remoteIP}} </td>\r\n            </ng-container>\r\n\r\n            <ng-container matColumnDef=\"latitude\">\r\n                <th mat-header-cell *matHeaderCellDef> {{'LATITUDE' | translate}} </th>\r\n                <td mat-cell *matCellDef=\"let audit\"> {{audit.latitude}} </td>\r\n            </ng-container>\r\n\r\n            <ng-container matColumnDef=\"longitude\">\r\n                <th mat-header-cell *matHeaderCellDef> {{'LONGITUDE' | translate}} </th>\r\n                <td mat-cell *matCellDef=\"let audit\"> {{audit.longitude}} </td>\r\n            </ng-container>\r\n            <tr mat-header-row *matHeaderRowDef=\"displayedColumns;sticky: true\"></tr>\r\n            <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\"></tr>\r\n        </table>\r\n        <ng-container *ngIf=\"dataSource.count === 0\">\r\n            <div class=\"row\">\r\n                <div class=\"col-sm-12 ml-4 mt-3\">\r\n                    <label class=\"font-weight-bold\">{{\"NO_DATA_FOUND\" | translate}}</label>\r\n                </div>\r\n            </div>\r\n        </ng-container>\r\n        <mat-paginator class=\"w-100\" [length]=\"loginAuditResource.totalCount\"  [dir]=\"langDir\" [pageSize]=\"loginAuditResource.pageSize\"\r\n            [pageSizeOptions]=\"[10, 20, 30]\"></mat-paginator>\r\n    </div>\r\n</div>","import { NgModule } from '@angular/core';\r\nimport { RouterModule, Routes } from '@angular/router';\r\nimport { AuthGuard } from '@core/security/auth.guard';\r\nimport { LoginAuditListComponent } from './login-audit-list/login-audit-list.component';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: '',\r\n    component: LoginAuditListComponent,\r\n    data: { claimType: 'LOGS_VIEW_LOGIN_AUDITS' },\r\n    canActivate: [AuthGuard]\r\n  }\r\n];\r\n\r\n@NgModule({\r\n  declarations: [],\r\n  imports: [\r\n    RouterModule.forChild(routes)\r\n  ], exports: [\r\n    RouterModule\r\n  ]\r\n})\r\nexport class LoginAuditRoutingModule { }\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { LoginAuditListComponent } from './login-audit-list/login-audit-list.component';\r\nimport { MatTableModule } from '@angular/material/table';\r\nimport { MatProgressSpinnerModule } from '@angular/material/progress-spinner';\r\nimport { MatSortModule } from '@angular/material/sort';\r\nimport { MatPaginatorModule } from '@angular/material/paginator';\r\nimport { MatInputModule } from '@angular/material/input';\r\nimport { LoginAuditRoutingModule } from './login-audit-routing.module';\r\nimport { TranslateModule } from '@ngx-translate/core';\r\n\r\n@NgModule({\r\n  declarations: [LoginAuditListComponent],\r\n  imports: [\r\n    CommonModule,\r\n    MatTableModule,\r\n    MatProgressSpinnerModule,\r\n    MatSortModule,\r\n    MatPaginatorModule,\r\n    MatInputModule,\r\n    LoginAuditRoutingModule,\r\n    TranslateModule\r\n  ]\r\n})\r\nexport class LoginAuditModule { }\r\n","import { HttpClient, HttpParams, HttpResponse } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { LoginAudit } from '@core/domain-classes/login-audit';\r\nimport { LoginAuditResource } from '@core/domain-classes/login-audit-resource';\r\nimport { CommonError } from '@core/error-handler/common-error';\r\nimport { CommonHttpErrorService } from '@core/error-handler/common-http-error.service';\r\nimport { Observable } from 'rxjs';\r\nimport { catchError } from 'rxjs/operators';\r\n\r\n@Injectable({\r\n    providedIn: 'root'\r\n})\r\nexport class LoginAuditService {\r\n\r\n    constructor(\r\n        private httpClient: HttpClient,\r\n        private commonHttpErrorService: CommonHttpErrorService) { }\r\n\r\n    getLoginAudits(resource: LoginAuditResource): Observable<HttpResponse<LoginAudit[]> | CommonError> {\r\n        const url = `LoginAudit`;\r\n        const customParams = new HttpParams()\r\n            .set('Fields', resource.fields)\r\n            .set('OrderBy', resource.orderBy)\r\n            .set('PageSize', resource.pageSize.toString())\r\n            .set('Skip', resource.skip.toString())\r\n            .set('SearchQuery', resource.searchQuery)\r\n            .set('id', resource.id.toString())\r\n            .set('userName', resource.userName.toString())\r\n\r\n        return this.httpClient.get<LoginAudit[]>(url, {\r\n            params: customParams,\r\n            observe: 'response'\r\n        }).pipe(catchError(this.commonHttpErrorService.handleError));\r\n    }\r\n}\r\n"],"names":[],"sourceRoot":"webpack:///","x_google_ignoreList":[]}