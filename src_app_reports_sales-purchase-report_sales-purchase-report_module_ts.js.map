{"version":3,"file":"src_app_reports_sales-purchase-report_sales-purchase-report_module_ts.js","mappings":"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","sources":["./src/app/reports/sales-purchase-report/sales-purchase-report.component.ts","./src/app/reports/sales-purchase-report/sales-purchase-report.component.html","./src/app/reports/sales-purchase-report/sales-purchase-report.module.ts","./src/app/reports/sales-purchase-report/sales-purchase-report.service.ts","./src/app/reports/sales-purchase-report/sales-purchase-routing.module.ts"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { Months } from '@core/domain-classes/months';\nimport { SalesVsPurchase } from '@core/domain-classes/sales-purchase';\nimport { CustomCurrencyPipe } from '@shared/pipes/custome-currency.pipe';\nimport { UTCToLocalTime } from '@shared/pipes/utc-to-localtime.pipe';\nimport { ChartDataSets, ChartOptions } from 'chart.js';\nimport { Label } from 'ng2-charts';\nimport { SalesPurchaseReportService } from './sales-purchase-report.service';\n\n@Component({\n  selector: 'app-sales-purchase-report',\n  templateUrl: './sales-purchase-report.component.html',\n  styleUrls: ['./sales-purchase-report.component.scss']\n})\nexport class SalesPurchaseReportComponent implements OnInit {\n  months = Months;\n  years = [];\n  barChartLabels: Label[] = [];\n  barChartData: ChartDataSets[] = [];\n  selectedMonth = new Date().getMonth() + 1;\n  selectedYear = new Date().getFullYear();\n\n  barChartOptions: ChartOptions = {\n    responsive: true,\n  };\n\n  lineChartColors: any[] = [\n    {\n      backgroundColor: '#2196f3',\n    },\n  ];\n\n  constructor(private salesPurchaseReportService: SalesPurchaseReportService,\n    private uTCToLocalTime: UTCToLocalTime) { }\n\n  ngOnInit(): void {\n    for (let index = 1995; index < 2050; index++) {\n      this.years.push(index);\n    }\n    this.getReportData();\n  }\n\n  getReportData() {\n    this.salesPurchaseReportService.getSalesVsPurchaseReport(this.selectedMonth, this.selectedYear).subscribe((data: SalesVsPurchase[]) => {\n      const totalSales = data.map(c =>  c.totalSales);\n      const totalPurchase = data.map(c => c.totalPurchase);\n      this.barChartData = [\n        { data: totalSales, label: 'Sales' },\n        { data: totalPurchase, label: 'Purchase' }\n      ];\n      this.barChartLabels = data.map(c => this.uTCToLocalTime.transform(c.date, 'shortDate'));\n    });\n  }\n}\n","<div class=\"page-header-main mt-2\">\r\n    <div class=\"row align-items-center justify-content-between\">\r\n        <div class=\"col-md-auto col-sm-auto\">\r\n            <div class=\"content-header\">\r\n                <h1>{{'SALES_VS_PURCHASE_REPORT' | translate}}</h1>\r\n            </div>\r\n        </div>\r\n        <div class=\"col-md-auto col-sm-auto\">\r\n            <div class=\"form-inline mr-5\">\r\n                <div class=\"form-group\">\r\n                    <label class=\"mr-2 font-weight-bold\"> {{'MONTH' | translate}}:</label>\r\n                    <select (change)=\"getReportData()\" [(ngModel)]=\"selectedMonth\"\r\n                        class=\"form-control mr-3\">\r\n                        <option [value]=\"month.id\" *ngFor=\"let month of months\">\r\n                            {{month.name}}\r\n                        </option>\r\n                    </select>\r\n                </div>\r\n                <div class=\"form-group\">\r\n                    <label class=\"mr-2 font-weight-bold\"> {{'YEAR' | translate}}:</label>\r\n                    <select (change)=\"getReportData()\" [(ngModel)]=\"selectedYear\" class=\"form-control\">\r\n                        <option [value]=\"year\" *ngFor=\"let year of years\">\r\n                            {{year}}\r\n                        </option>\r\n                    </select>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>\r\n<div style=\"display: block;\">\r\n    <canvas baseChart\r\n      [datasets]=\"barChartData\"\r\n      [labels]=\"barChartLabels\"\r\n      [options]=\"barChartOptions\"\r\n      [legend]=\"true\"\r\n      [colors]=\"lineChartColors\"\r\n      chartType=\"bar\">\r\n    </canvas>\r\n  </div>\r\n","import { NgModule } from '@angular/core';\r\nimport { SalesPurchaseReportComponent } from './sales-purchase-report.component';\r\nimport { SalesPurchaseRoutingModule } from './sales-purchase-routing.module';\r\nimport { SharedModule } from '@shared/shared.module';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { ChartsModule  } from 'ng2-charts';\r\nimport { UTCToLocalTime } from '@shared/pipes/utc-to-localtime.pipe';\r\nimport { CommonModule } from '@angular/common';\r\nimport { MatProgressSpinnerModule } from '@angular/material/progress-spinner';\r\nimport { MatCardModule } from '@angular/material/card';\r\nimport { MatButtonModule } from '@angular/material/button';\r\nimport { MatIconModule } from '@angular/material/icon';\r\nimport { MatMenuModule } from '@angular/material/menu';\r\n\r\n\r\n\r\n@NgModule({\r\n  declarations: [\r\n    SalesPurchaseReportComponent\r\n  ],\r\n  imports: [\r\n    SalesPurchaseRoutingModule,\r\n    FormsModule,\r\n    SharedModule,\r\n    ChartsModule,\r\n    CommonModule,\r\n    MatProgressSpinnerModule,\r\n    MatCardModule,\r\n    MatButtonModule,\r\n    MatIconModule,\r\n    MatMenuModule,\r\n  ],\r\n  providers: [UTCToLocalTime]\r\n})\r\nexport class SalesPurchaseReportModule { }\r\n","import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { SalesVsPurchase } from '@core/domain-classes/sales-purchase';\nimport { CommonError } from '@core/error-handler/common-error';\nimport { CommonHttpErrorService } from '@core/error-handler/common-http-error.service';\nimport { Observable } from 'rxjs';\nimport { catchError } from 'rxjs/operators';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class SalesPurchaseReportService {\n\n  constructor(private httpClient: HttpClient,\n    private commonHttpErrorService: CommonHttpErrorService) { }\n\n  getSalesVsPurchaseReport(month, year): Observable<SalesVsPurchase[] | CommonError> {\n    const url = `dashboard/salesvspurchase/${month}/${year}`;\n    return this.httpClient.get<SalesVsPurchase[]>(url)\n      .pipe(catchError(this.commonHttpErrorService.handleError));\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { Routes, RouterModule } from '@angular/router';\nimport { SalesPurchaseReportComponent } from './sales-purchase-report.component';\nimport { AuthGuard } from '@core/security/auth.guard';\n\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: SalesPurchaseReportComponent,\n    data: { claimType: 'REP_SALES_VS_PURCHASE_REP' },\n    canActivate: [AuthGuard]\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class SalesPurchaseRoutingModule { }"],"names":[],"sourceRoot":"webpack:///","x_google_ignoreList":[]}