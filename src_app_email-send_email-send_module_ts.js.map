{"version":3,"file":"src_app_email-send_email-send_module_ts.js","mappings":"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","sources":["./src/app/core/domain-classes/file-info.ts","./src/app/email-send/email-send-routing.module.ts","./src/app/email-send/email-send.component.ts","./src/app/email-send/email-send.component.html","./src/app/email-send/email-send.module.ts","./src/app/email-send/email-send.service.ts"],"sourcesContent":["export class FileInfo {\r\n  src?: string = '';\r\n  name?: string = '';\r\n  extension?: string = '';\r\n  fileType?: string='';\r\n  fileName?: string;\r\n  id?: string;\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { RouterModule, Routes } from '@angular/router';\r\nimport { EmailSendComponent } from './email-send.component';\r\nimport { AuthGuard } from '@core/security/auth.guard';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: '',\r\n    component: EmailSendComponent,\r\n    canActivate: [AuthGuard],\r\n    data: { claimType: 'EMAIL_SEND_EMAIL' }\r\n  }\r\n]\r\n\r\n@NgModule({\r\n  declarations: [],\r\n  imports: [\r\n    CommonModule,\r\n    RouterModule.forChild(routes)\r\n  ],\r\n  exports: [RouterModule]\r\n})\r\nexport class EmailSendRoutingModule { }\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { UntypedFormArray, UntypedFormBuilder, UntypedFormGroup, Validators } from '@angular/forms';\r\nimport { Router } from '@angular/router';\r\nimport { EmailParameter } from '@core/domain-classes/email-parameter';\r\nimport { EmailTemplate } from '@core/domain-classes/email-template';\r\nimport { FileInfo } from '@core/domain-classes/file-info';\r\nimport { TranslationService } from '@core/services/translation.service';\r\nimport { EditorConfig } from '@shared/editor.config';\r\nimport { ToastrService } from 'ngx-toastr';\r\nimport { BaseComponent } from '../base.component';\r\nimport { EmailTemplateService } from '../email-template/email-template.service';\r\nimport { EmailSendService } from './email-send.service';\r\n\r\n@Component({\r\n  selector: 'app-email-send',\r\n  templateUrl: './email-send.component.html',\r\n  styleUrls: ['./email-send.component.scss']\r\n})\r\nexport class EmailSendComponent extends BaseComponent implements OnInit {\r\n  emailTamplates: EmailTemplate[] = [];\r\n  selectedEmailTamplate: EmailTemplate;\r\n  emailForm: UntypedFormGroup;\r\n  editorConfig= EditorConfig;\r\n  isLoading = false;\r\n  files: any = [];\r\n  fileData: FileInfo[] = [];\r\n  extension: string = '';\r\n  fileType: string = '';\r\n  constructor(\r\n    private fb: UntypedFormBuilder,\r\n    private emailTemplateService: EmailTemplateService,\r\n    private toastrService: ToastrService,\r\n    private emailSendService: EmailSendService,\r\n    private router: Router,\r\n    public translationService: TranslationService) {\r\n    super(translationService);\r\n    this.getLangDir();\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.createEmailForm();\r\n    this.getEmailTamplate();\r\n  }\r\n\r\n  onTempateChange() {\r\n    this.parameters.clear();\r\n    this.emailForm.patchValue(this.selectedEmailTamplate);\r\n    const regex = /\\##(.*?)\\##/gi;\r\n    const parameters: Array<string> = this.selectedEmailTamplate.body.match(regex);\r\n    [...new Set(parameters)].forEach(parameter => {\r\n      this.parameters.push(this.newParameter(parameter));\r\n    });\r\n  }\r\n\r\n  newParameter(parameter): UntypedFormGroup {\r\n    return this.fb.group({\r\n      parameter: [parameter, [Validators.required]],\r\n      value: ['', [Validators.required]]\r\n    })\r\n  }\r\n\r\n  get parameters(): UntypedFormArray {\r\n    return <UntypedFormArray>this.emailForm.get('parameters');\r\n  }\r\n\r\n  setParameterValue() {\r\n    const paramters: EmailParameter[] = this.parameters.value;\r\n    let emailBody = this.selectedEmailTamplate.body;\r\n    if (paramters) {\r\n      paramters.forEach(paramter => {\r\n        if (paramter.value) {\r\n          emailBody = emailBody.split(paramter.parameter).join(paramter.value);\r\n        }\r\n      });\r\n      this.emailForm.get('body').setValue(emailBody);\r\n    }\r\n  }\r\n\r\n  getEmailTamplate() {\r\n    this.sub$.sink = this.emailTemplateService.getEmailTemplates().subscribe((emailTamplats: EmailTemplate[]) => {\r\n      this.emailTamplates = emailTamplats;\r\n    })\r\n  }\r\n\r\n  createEmailForm() {\r\n    this.emailForm = this.fb.group({\r\n      id: [''],\r\n      toAddress: ['', [Validators.required]],\r\n      cCAddress: [''],\r\n      subject: ['', [Validators.required]],\r\n      body: ['', [Validators.required]],\r\n      parameters: this.fb.array([])\r\n    });\r\n  }\r\n\r\n  fileBrowseHandler(files: any) {\r\n    for (let file of files) {\r\n      this.files.push(file);\r\n    }\r\n    this.getFileInfo();\r\n  }\r\n\r\n  getFileInfo() {\r\n    this.fileData = [];\r\n    for (let i = 0; i < this.files.length; i++) {\r\n      const reader = new FileReader();\r\n      this.extension = this.files[i].name.split('.').pop().toLowerCase();\r\n      this.fileType = this.files[i].type;\r\n      reader.onload = (ev: ProgressEvent<FileReader>) => {\r\n        const fileInfo = new FileInfo();\r\n        fileInfo.src = ev.target.result.toString();\r\n        fileInfo.extension = this.extension;\r\n        fileInfo.name = this.files[i].name;\r\n        fileInfo.fileType = this.fileType;\r\n        this.fileData.push(fileInfo);\r\n      }\r\n      reader.readAsDataURL(this.files[i]);\r\n    };\r\n  }\r\n\r\n  sendEmail() {\r\n    if (!this.emailForm.valid) {\r\n      this.emailForm.markAllAsTouched();\r\n      return;\r\n    }\r\n    this.isLoading = true;\r\n    const emailObj = this.emailForm.value;\r\n    emailObj.attechments = this.fileData;\r\n    this.emailSendService.sendEmail(emailObj)\r\n      .subscribe(() => {\r\n        this.toastrService.success(this.translationService.getValue('EMAIL_SENT_SUCCESSFULLY'));\r\n        this.isLoading = false;\r\n        this.clearForm();\r\n      }, () => {\r\n        this.isLoading = false;\r\n      });\r\n  }\r\n\r\n  clearForm() {\r\n    this.parameters.clear();\r\n    this.files = [];\r\n    this.selectedEmailTamplate = {\r\n      name: '',\r\n      id: '',\r\n      body: '',\r\n      subject: '',\r\n    };\r\n    this.emailForm.patchValue({\r\n      id: [''],\r\n      toAddress: [''],\r\n      cCAddress: [''],\r\n      subject: ['']\r\n    });\r\n    this.emailForm.get('body').setValue(\"\");\r\n\r\n  }\r\n\r\n  formatBytes(bytes: number) {\r\n    const sizes = ['Bytes', 'KB', 'MB', 'GB', 'TB']\r\n    if (bytes === 0) return 'n/a'\r\n    const value = Math.floor(Math.log(bytes) / Math.log(1024));\r\n    const i = parseInt(value.toString(), 10)\r\n    if (i === 0) return `${bytes} ${sizes[i]})`\r\n    return `${(bytes / (1024 ** i)).toFixed(1)} ${sizes[i]}`\r\n  }\r\n  onDeleteFile(index: number) {\r\n    this.files.splice(index, 1);\r\n  }\r\n\r\n  onFileDropped($event) {\r\n    for (let file of $event) {\r\n      this.files.push(file);\r\n    }\r\n    this.getFileInfo();\r\n\r\n  }\r\n}\r\n","<div class=\"page-header-main\">\r\n  <div class=\"row align-items-center justify-content-between\">\r\n    <div class=\"col-md-auto col-sm-auto\">\r\n      <div class=\"content-header\">\r\n        <h1>{{'SEND_EMAIL' | translate }}</h1>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</div>\r\n<div class=\"loading-shade\" *ngIf=\"isLoading\">\r\n  <mat-spinner></mat-spinner>\r\n</div>\r\n<div class=\"row\">\r\n  <div class=\"col-md-12 col-sm-12\">\r\n    <div class=\"form-group\">\r\n      <mat-label [dir]=\"langDir\">\r\n        {{'SELECT_EMAIL_TAMPLATE' | translate }}\r\n      </mat-label>\r\n      <mat-select [dir]=\"langDir\" placeholder=\"{{'SELECT_EMAIL_TAMPLATE' | translate}}\" class=\"form-control\"\r\n        name=\"selectedEmailTamplate\" [(ngModel)]=\"selectedEmailTamplate\" (selectionChange)=\"onTempateChange()\">\r\n        <mat-option *ngFor=\"let tamplate of emailTamplates\" [value]=\"tamplate\">\r\n          {{tamplate.name}}\r\n        </mat-option>\r\n      </mat-select>\r\n    </div>\r\n  </div>\r\n</div>\r\n<form [formGroup]=\"emailForm\">\r\n  <div class=\"row\">\r\n    <div class=\"col-md-12 pb-1\">\r\n      <div class=\"input-group\">\r\n        <div class=\"input-group-prepend\">\r\n          <span class=\"input-group-text text-danger\" id=\"toAddress\">\r\n            {{'TO' | translate }}*\r\n          </span>\r\n        </div>\r\n        <input formControlName=\"toAddress\" type=\"text\" class=\"form-control\"\r\n          placeholder=\"{{'COMMA_SEPARATED_EMAILS' | translate}}\" aria-label=\"To\" aria-describedby=\"toAddress\">\r\n      </div>\r\n      <div *ngIf=\"emailForm.get('toAddress').touched && emailForm.get('toAddress').errors\">\r\n        <div class=\"text-danger\" *ngIf=\"emailForm.get('toAddress').errors?.required\">\r\n          {{'TO_ADDRESS_IS_REQUIRED' | translate }}\r\n        </div>\r\n      </div>\r\n    </div>\r\n    <div class=\"col-md-12 pb-1\">\r\n      <div class=\"input-group\">\r\n        <div class=\"input-group-prepend\">\r\n          <span class=\"input-group-text text-danger\" id=\"toAddress\">\r\n            {{'CC' | translate }}* \r\n          </span>\r\n        </div>\r\n        <input formControlName=\"cCAddress\" type=\"text\" class=\"form-control\" placeholder=\"{{'COMMA_SEPARATED_EMAILS' | translate}}\"\r\n          aria-label=\"To\" aria-describedby=\"toAddress\">\r\n      </div>\r\n      <div *ngIf=\"emailForm.get('cCAddress').touched && emailForm.get('cCAddress').errors\">\r\n        <div class=\"text-danger\" *ngIf=\"emailForm.get('cCAddress').errors?.required\">\r\n          {{'CC_ADDRESS_IS_REQUIRED' | translate }}\r\n        </div>\r\n      </div>\r\n    </div>\r\n    <div class=\"col-md-12 pb-1\">\r\n      <div class=\"input-group\">\r\n        <div class=\"input-group-prepend\">\r\n          <span class=\"input-group-text text-danger\" id=\"subject\">\r\n            {{'SUBJECT' | translate }} *\r\n          </span>\r\n        </div>\r\n        <input formControlName=\"subject\" type=\"text\" class=\"form-control\" placeholder=\"{{'SUBJECT' | translate }}\"\r\n          aria-label=\"To\" aria-describedby=\"subject\">\r\n      </div>\r\n      <div *ngIf=\"emailForm.get('subject').touched && emailForm.get('subject').errors\">\r\n        <div class=\"text-danger\" *ngIf=\"emailForm.get('subject').errors?.required\">\r\n          {{'SUBJECT_IS_REQUIRED' | translate }}\r\n        </div>\r\n      </div>\r\n    </div>\r\n    <div class=\"col-md-12\">\r\n      <div class=\"form-group\">\r\n        <label class=\"font-weight-bold text-danger\">\r\n          {{'BODY' | translate }} *\r\n        </label>\r\n        <angular-editor formControlName=\"body\" [config]=\"editorConfig\"></angular-editor>\r\n        <div *ngIf=\"emailForm.get('body').touched && emailForm.get('body').errors\">\r\n          <div class=\"text-danger\" *ngIf=\"emailForm.get('body').errors?.required\">\r\n            {{'BODY_IS_REQUIRED' | translate }}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n    <div class=\"col-md-12\" formArrayName=\"parameters\">\r\n      <div class=\"row\" *ngIf=\"parameters.controls.length>0\">\r\n        <div class=\"col-md-6 font-weight-bold\">\r\n          {{'PARAMETER_NAME' | translate }}\r\n        </div>\r\n        <div class=\"col-md-6 font-weight-bold text-danger\">\r\n          {{'PARAMETER_VALUE' | translate }} *\r\n        </div>\r\n      </div>\r\n      <div *ngFor=\"let param of parameters.controls; let i=index\" class=\"row mt-1\">\r\n        <ng-container [formGroupName]=\"i\">\r\n          <div class=\"col-md-6\">\r\n            <input readonly class=\"form-control\" type=\"text\" formControlName=\"parameter\">\r\n          </div>\r\n          <div class=\"col-md-6\">\r\n            <input (focusout)=\"setParameterValue()\" class=\"form-control\" type=\"text\" formControlName=\"value\">\r\n            <div *ngIf=\"param.get('value').touched && param.get('value').errors\">\r\n              <div class=\"text-danger\" *ngIf=\"param.get('value').errors?.required\">\r\n                {{'PARAMETER_VALUE_IS_REQUIRED' | translate }}\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </ng-container>\r\n      </div>\r\n    </div>\r\n    <div class=\"col-md-12 mt-2\">\r\n      <div class=\"form-group\">\r\n        <label class=\"font-weight-bold\"> {{'ATTACHMENTS' | translate}} </label>\r\n        <div class=\"dropzone\" appDragDrop (onFileDropped)=\"onFileDropped($event)\">\r\n          <input type=\"file\" #fileDropRef id=\"fileDropRef\" multiple (change)=\"fileBrowseHandler($event.target.files)\" />\r\n          <i class=\"text-danger fas fa-download fa-lg\" aria-hidden=\"true\"></i>\r\n          <h3>{{'DRAG_AND_DROP_FILE_HERE' | translate}}</h3>\r\n          <h3>{{'OR' | translate}}</h3>\r\n          <label for=\"fileDropRef\">{{'BROWSE_FOR_FILE' | translate}}</label>\r\n        </div>\r\n      </div>\r\n    </div>\r\n    <div class=\"col-md-12 mt-2\">\r\n      <ul class=\"list-group\">\r\n        <li class=\"list-group-item d-flex justify-content-between align-items-center\"\r\n          *ngFor=\"let file of files; let i = index\">\r\n          <h4 class=\"name\">\r\n            {{ file?.name }} -- {{ formatBytes(file?.size) }}\r\n          </h4>\r\n          <span class=\"badge badge-pill\">\r\n            <button class=\"btn btn-danger\" (click)=\"onDeleteFile(i)\">\r\n              <i class=\"text-light fas fa-trash\"></i>\r\n            </button>\r\n          </span>\r\n          <div class=\"loading-shade\" *ngIf=\"file?.progress\">\r\n            <mat-spinner></mat-spinner>\r\n          </div>\r\n        </li>\r\n      </ul>\r\n    </div>\r\n    <div class=\"col-md-12 mt-1\" *hasClaim=\"'EMAIL_SEND_EMAIL'\">\r\n      <button (click)=\"sendEmail()\" type=\"submit\" class=\"btn btn-success\">\r\n        <i class=\"fas fa-paper-plane\"></i>\r\n        {{'SEND' | translate }}\r\n      </button>\r\n    </div>\r\n  </div>\r\n</form>\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { EmailSendComponent } from './email-send.component';\r\nimport { EmailSendRoutingModule } from './email-send-routing.module';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport { MatSelectModule } from '@angular/material/select';\r\nimport { SharedModule } from '@shared/shared.module';\r\nimport { MatProgressSpinnerModule } from '@angular/material/progress-spinner';\r\nimport { AngularEditorModule } from '@kolkov/angular-editor';\r\n\r\n\r\n\r\n@NgModule({\r\n  declarations: [EmailSendComponent],\r\n  imports: [\r\n    CommonModule,\r\n    FormsModule,\r\n    ReactiveFormsModule,\r\n    MatSelectModule,\r\n    EmailSendRoutingModule,\r\n    AngularEditorModule,\r\n    SharedModule,\r\n    MatProgressSpinnerModule\r\n  ]\r\n})\r\nexport class EmailSendModule { }\r\n","import { HttpClient } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { Email } from '@core/domain-classes/email';\r\nimport { CommonError } from '@core/error-handler/common-error';\r\nimport { CommonHttpErrorService } from '@core/error-handler/common-http-error.service';\r\nimport { Observable } from 'rxjs';\r\nimport { catchError } from 'rxjs/operators';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class EmailSendService {\r\n\r\n  constructor(private httpClient: HttpClient,\r\n    private commonHttpErrorService: CommonHttpErrorService) { }\r\n\r\n  sendEmail(email: Email): Observable<void | CommonError> {\r\n    const url = 'Email';\r\n    return this.httpClient.post<void>(url, email)\r\n      .pipe(catchError(this.commonHttpErrorService.handleError));\r\n  }\r\n}\r\n"],"names":[],"sourceRoot":"webpack:///","x_google_ignoreList":[]}