{"version":3,"file":"src_app_unit-conversation_unit-conversation_module_ts.js","mappings":"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","sources":["./src/app/unit-conversation/manage-unit-conversation/manage-unit-conversation.component.ts","./src/app/unit-conversation/manage-unit-conversation/manage-unit-conversation.component.html","./src/app/unit-conversation/unit-conversation-list-presentation/unit-conversation-list-presentation.component.ts","./src/app/unit-conversation/unit-conversation-list-presentation/unit-conversation-list-presentation.component.html","./src/app/unit-conversation/unit-conversation-list/unit-conversation-list.component.ts","./src/app/unit-conversation/unit-conversation-list/unit-conversation-list.component.html","./src/app/unit-conversation/unit-conversation-routing.module.ts","./src/app/unit-conversation/unit-conversation.module.ts"],"sourcesContent":["import { Component, Inject, OnChanges, OnInit, SimpleChanges } from '@angular/core';\r\nimport { UntypedFormBuilder, UntypedFormGroup, Validators } from '@angular/forms';\r\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\r\nimport { UnitOperator } from '@core/domain-classes/operator';\r\nimport { UnitConversation } from '@core/domain-classes/unit-conversation';\r\nimport { TranslationService } from '@core/services/translation.service';\r\nimport { ToastrService } from 'ngx-toastr';\r\nimport { BaseComponent } from 'src/app/base.component';\r\nimport { UnitConversationService } from '../unit-conversation.service';\r\n\r\n@Component({\r\n  selector: 'app-manage-unit-conversation',\r\n  templateUrl: './manage-unit-conversation.component.html',\r\n  styleUrls: ['./manage-unit-conversation.component.scss']\r\n})\r\nexport class ManageUnitConversationComponent extends BaseComponent implements OnInit {\r\n  isEdit: boolean = false;\r\n  unitOperatorslist: UnitOperator[] = [];\r\n  baseUnits: UnitConversation[] = [];\r\n  unitConversationForm: UntypedFormGroup;\r\n  isOperator: boolean = false;\r\n\r\n  constructor(\r\n    public dialogRef: MatDialogRef<ManageUnitConversationComponent>,\r\n    @Inject(MAT_DIALOG_DATA) public data: { unitdata: UnitConversation, units: UnitConversation[] },\r\n    private unitConversationService: UnitConversationService,\r\n    private fb: UntypedFormBuilder,\r\n    public translationService: TranslationService,\r\n    private toastrService: ToastrService) {\r\n    super(translationService);\r\n    this.getLangDir();\r\n    this.baseUnits = this.data.units.filter(c => !c.parentId);\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.createForm();\r\n    this.unitConversationsList();\r\n    if (this.data.unitdata.id) {\r\n      this.unitConversationForm.patchValue(this.data.unitdata);\r\n       this.baseUnits=this.data.units.filter(c => c.id != this.data.unitdata.id && !c.parentId)\r\n      this.isEdit = true;\r\n    }\r\n  }\r\n\r\n  createForm() {\r\n    this.unitConversationForm = this.fb.group({\r\n      id: [''],\r\n      name: ['', Validators.required],\r\n      code: ['', Validators.required],\r\n      operator: [''],\r\n      value: [''],\r\n      parentId: ['']\r\n    });\r\n  }\r\n\r\n  onCancel(): void {\r\n    this.dialogRef.close();\r\n  }\r\n\r\n  onCountryChange(unit: any) {\r\n    if (unit) {\r\n      this.isOperator = true;\r\n    }\r\n  }\r\n\r\n  unitConversationsList() {\r\n    this.sub$.sink = this.unitConversationService.getUnitOperator()\r\n      .subscribe(f => this.unitOperatorslist = [...f]);\r\n  }\r\n\r\n  saveUnitConversation(): void {\r\n    if (!this.unitConversationForm.valid) {\r\n      this.unitConversationForm.markAllAsTouched();\r\n      return;\r\n    }\r\n    const unitConversation: UnitConversation = this.unitConversationForm.value;\r\n    if (this.data.unitdata.id) {\r\n      this.unitConversationService.updateUnitConversation(this.data.unitdata.id, unitConversation).subscribe(c => {\r\n        this.toastrService.success(this.translationService.getValue('UNIT_CONVERSATION_SAVED_SUCCESSFULLY.'));\r\n        this.dialogRef.close(c);\r\n      });\r\n    } else {\r\n      this.unitConversationService.saveUnitConversation(unitConversation).subscribe(c => {\r\n        this.toastrService.success(this.translationService.getValue('UNIT_CONVERSATION_SAVED_SUCCESSFULLY.'));\r\n        this.dialogRef.close(c);\r\n      });\r\n    }\r\n  }\r\n}\r\n\r\n","<div class=\"modal-content1\">\r\n    <div class=\"modal-header\">\r\n        <div class=\"d-flex w-100 align-items-center justify-content-between\">\r\n            <div class=\"col-md-10 col\">\r\n                <h4 class=\"modal-title\">\r\n                  {{'MANAGE_UNIT' | translate}}\r\n                </h4>\r\n            </div>\r\n            <div class=\"col-sm-auto col-auto ml-auto\">\r\n                <button type=\"button\" class=\"close\" (click)=\"onCancel()\" data-dismiss=\"modal\">\r\n                    <i class=\"fas fa-times\"></i>\r\n                </button>\r\n            </div>\r\n        </div>\r\n    </div>\r\n    <form [formGroup]=\"unitConversationForm\">\r\n        <div class=\"modal-body\">\r\n            <div class=\"row\">\r\n                <div class=\"col-md-12\">\r\n                    <div class=\"form-group\">\r\n                        <label for=\"cityName\" class=\"text-danger\">{{'UNIT_NAME' | translate}} *</label>\r\n                        <input formControlName=\"name\" type=\"text\" class=\"form-control\" id=\"cityName\">\r\n                        <div *ngIf=\"unitConversationForm.get('name').touched && unitConversationForm.get('name').errors\">\r\n                            <div class=\"text-danger\"\r\n                                *ngIf=\"unitConversationForm.get('name').touched && unitConversationForm.get('name').errors?.required\">\r\n                                {{'UNIT_NAME_IS_REQUIRED.' | translate}}\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div class=\"row\">\r\n                <div class=\"col-md-12\">\r\n                    <div class=\"form-group\">\r\n                        <label for=\"cityName\" class=\"text-danger\">{{'UNIT_CODE' | translate}} *</label>\r\n                        <input formControlName=\"code\" type=\"text\" class=\"form-control\" id=\"cityName\">\r\n                        <div *ngIf=\"unitConversationForm.get('code').touched && unitConversationForm.get('code').errors\">\r\n                            <div class=\"text-danger\"\r\n                                *ngIf=\"unitConversationForm.get('code').touched && unitConversationForm.get('code').errors?.required\">\r\n                                {{'UNIT_CODE_IS_REQUIRED.' | translate}}\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div class=\"row\">\r\n                <div class=\"col-md-12\">\r\n                    <div class=\"form-group\">\r\n                        <mat-label> {{'BASE_UNIT' | translate}}</mat-label>\r\n                        <mat-select [dir]=\"langDir\" placeholder=\"{{'SELECT_UNIT' | translate}}\" class=\"form-control\"\r\n                            formControlName=\"parentId\">\r\n                            <mat-option value=\"\">{{'NONE' | translate}}</mat-option>\r\n                            <mat-option *ngFor=\"let unit of baseUnits\" [value]=\"unit.id\">\r\n                                {{unit.name}}\r\n                            </mat-option>\r\n                        </mat-select>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div class=\"row\" *ngIf=\"unitConversationForm.get('parentId').value\">\r\n                <div class=\"col-md-12\">\r\n                    <div class=\"form-group\">\r\n                        <mat-label>{{'OPERATOR' | translate}} </mat-label>\r\n                        <mat-select [dir]=\"langDir\" placeholder=\"{{'SELECT_OPERATOR' | translate}}\" class=\"form-control\"\r\n                            formControlName=\"operator\">\r\n                            <mat-option [dir]=\"langDir\" *ngFor=\"let operator of unitOperatorslist\"\r\n                                [value]=\"operator?.id\">\r\n                                {{operator?.id | unitOperator}}\r\n                            </mat-option>\r\n                        </mat-select>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div class=\"row\" *ngIf=\"unitConversationForm.get('parentId').value\">\r\n                <div class=\"col-md-12\">\r\n                    <div class=\"form-group\">\r\n                        <label for=\"cityName\">{{'OPERATION_VALUE' | translate}}</label>\r\n                        <input formControlName=\"value\" type=\"text\" class=\"form-control\" id=\"cityName\">\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n        <div class=\"modal-footer\">\r\n            <div class=\"form-row w-100\">\r\n                <div class=\"col-md-auto col-auto\">\r\n                    <button class=\"btn btn-success btn-sm m-right-10\" (click)=\"saveUnitConversation()\" cdkFocusInitial>\r\n                        <i class=\"fas fa-save\"></i>\r\n                        {{\"SAVE\" | translate}}\r\n                    </button>\r\n                    <button class=\"btn btn-danger btn-sm\" (click)=\"onCancel()\">\r\n                        <i class=\"fas fa-times-circle\"></i>\r\n                        {{\"CANCEL\" | translate}}\r\n                    </button>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </form>\r\n</div>\r\n","import {  Component, EventEmitter, Input, OnInit, Output } from '@angular/core';\r\nimport { MatDialog } from '@angular/material/dialog';\r\nimport { CommonDialogService } from '@core/common-dialog/common-dialog.service';\r\nimport { UnitConversation } from '@core/domain-classes/unit-conversation';\r\nimport { TranslationService } from '@core/services/translation.service';\r\nimport { BaseComponent } from 'src/app/base.component';\r\nimport { ManageUnitConversationComponent } from '../manage-unit-conversation/manage-unit-conversation.component';\r\n\r\n@Component({\r\n  selector: 'app-unit-conversation-list-presentation',\r\n  templateUrl: './unit-conversation-list-presentation.component.html',\r\n  styleUrls: ['./unit-conversation-list-presentation.component.scss']\r\n})\r\nexport class UnitConversationListPresentationComponent extends BaseComponent implements OnInit {\r\n  @Input() unitConversations: UnitConversation[];\r\n  @Output() addEditUnitConversationHandler: EventEmitter<UnitConversation> = new EventEmitter<UnitConversation>();\r\n  @Output() deleteUnitConversationHandler: EventEmitter<string> = new EventEmitter<string>();\r\n  columnsToDisplay: string[] = ['action',  'name','baseUnitName', 'operator', 'value'];\r\n  expandedElement: UnitConversation | null;\r\n  constructor(\r\n    private dialog: MatDialog,\r\n    private commonDialogService: CommonDialogService,\r\n    public translationService: TranslationService\r\n  ) {\r\n    super(translationService);\r\n    this.getLangDir();\r\n  }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n  deleteUnitConversation(category: UnitConversation): void {\r\n    this.sub$.sink = this.commonDialogService\r\n      .deleteConformationDialog(`${this.translationService.getValue('ARE_YOU_SURE_YOU_WANT_TO_DELETE')} ${category.name}`)\r\n      .subscribe(isTrue => {\r\n        if (isTrue) {\r\n          this.deleteUnitConversationHandler.emit(category.id);\r\n        }\r\n      });\r\n  }\r\n\r\n  manageUnitConversation(unitdata: UnitConversation): void {\r\n    const dialogRef = this.dialog.open(ManageUnitConversationComponent, {\r\n      width: '80vh',\r\n      direction: this.langDir,\r\n      data: {\r\n        unitdata: Object.assign({}, unitdata),\r\n        units: this.unitConversations\r\n      }\r\n    });\r\n\r\n    this.sub$.sink = dialogRef.afterClosed()\r\n      .subscribe((result: UnitConversation) => {\r\n        if (result) {\r\n          this.addEditUnitConversationHandler.emit(result);\r\n        }\r\n      });\r\n  }\r\n}\r\n","<div class=\"page-header-main\">\r\n  <div class=\"row align-items-center justify-content-between\">\r\n    <div class=\"col-md-auto col-sm-auto col\">\r\n      <div class=\"content-header\">\r\n        <h1>{{'UNIT_CONVERSATION' | translate}}</h1>\r\n      </div>\r\n    </div>\r\n    <div class=\"col-md-auto col-sm-auto col-auto\">\r\n      <button class=\"btn blue-btn btn-sm m-right-10\" (click)=\"manageUnitConversation({})\">\r\n        <i class=\"fas fa-plus\"></i>\r\n        {{'ADD_UNIT_CONVERSATION' | translate}}\r\n      </button>\r\n    </div>\r\n  </div>\r\n</div>\r\n\r\n<div class=\"table-responsive\">\r\n  <table [dir]=\"langDir\" mat-table [dataSource]=\"unitConversations\" multiTemplateDataRows\r\n    class=\"table table-bordered table-hover grid-height\">\r\n    <ng-container matColumnDef=\"action\">\r\n      <th mat-header-cell *matHeaderCellDef>{{'ACTION' | translate}} </th>\r\n      <td mat-cell *matCellDef=\"let element\">\r\n        <button (click)=\"manageUnitConversation(element)\" class=\"btn btn-success btn-sm m-right-10\" type=\"button\">\r\n          <i class=\"las la-pen\"></i>\r\n          {{'EDIT' | translate}}\r\n        </button>\r\n        <button (click)=\"deleteUnitConversation(element)\" class=\"btn btn-danger btn-sm\" type=\"button\">\r\n          <i class=\"las la-trash\"></i>\r\n          {{'DELETE' | translate}}\r\n        </button>\r\n      </td>\r\n    </ng-container>\r\n    <ng-container matColumnDef=\"name\">\r\n      <th mat-header-cell *matHeaderCellDef> {{'NAME' | translate}} </th>\r\n      <td mat-cell *matCellDef=\"let element\"> {{element.name}} </td>\r\n    </ng-container>\r\n    <ng-container matColumnDef=\"baseUnitName\">\r\n      <th mat-header-cell *matHeaderCellDef> {{'BASE_UNIT' | translate}}</th>\r\n      <td mat-cell *matCellDef=\"let element\"> {{element.baseUnitName}} </td>\r\n    </ng-container>\r\n    <ng-container matColumnDef=\"operator\">\r\n      <th mat-header-cell *matHeaderCellDef>{{'OPERATOR' | translate}} </th>\r\n      <td mat-cell *matCellDef=\"let element\"> {{element.operator | unitOperator}} </td>\r\n    </ng-container>\r\n    <ng-container matColumnDef=\"value\">\r\n      <th mat-header-cell *matHeaderCellDef>{{'OPERATION_VALUE' | translate}} </th>\r\n      <td mat-cell *matCellDef=\"let element\"> {{element.value}} </td>\r\n    </ng-container>\r\n\r\n    <tr mat-header-row *matHeaderRowDef=\"columnsToDisplay;sticky: true\"></tr>\r\n    <tr mat-row *matRowDef=\"let row; columns: columnsToDisplay;\"></tr>\r\n  </table>\r\n</div>\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { UnitConversation } from '@core/domain-classes/unit-conversation';\r\nimport { TranslationService } from '@core/services/translation.service';\r\nimport { ToastrService } from 'ngx-toastr';\r\nimport { BaseComponent } from 'src/app/base.component';\r\nimport { UnitConversationService } from '../unit-conversation.service';\r\n\r\n@Component({\r\n  selector: 'app-unit-conversation-list',\r\n  templateUrl: './unit-conversation-list.component.html',\r\n  styleUrls: ['./unit-conversation-list.component.scss']\r\n})\r\nexport class UnitConversationListComponent extends BaseComponent implements OnInit {\r\n  unitConversations$: UnitConversation[] = [];\r\n  constructor(\r\n    private unitConversationService: UnitConversationService,\r\n    private toastrService: ToastrService,\r\n    public translationService: TranslationService) {\r\n    super(translationService);\r\n\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.getUnitConversations();\r\n  }\r\n\r\n  getUnitConversations(): void {\r\n    this.unitConversationService.getUnitConversations().subscribe(c => this.unitConversations$ = c);;\r\n  }\r\n\r\n  deleteUnitConversation(id: string): void {\r\n    this.unitConversationService.deleteUnitConversation(id).subscribe(d => {\r\n      this.toastrService.success(this.translationService.getValue('UNIT_CONVERSATION_DELETED_SUCCESSFULLY'));\r\n      this.getUnitConversations();\r\n    });\r\n  }\r\n\r\n  manageUnitConversation(category: UnitConversation): void {\r\n    this.getUnitConversations();\r\n  }\r\n}\r\n","<app-unit-conversation-list-presentation [unitConversations]=\"unitConversations$ \"\r\n  (addEditUnitConversationHandler)=\"manageUnitConversation($event)\" (deleteUnitConversationHandler)=\"deleteUnitConversation($event)\">\r\n</app-unit-conversation-list-presentation>\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { UnitConversationListComponent } from './unit-conversation-list/unit-conversation-list.component';\r\nimport { RouterModule, Routes } from '@angular/router';\r\nimport { AuthGuard } from '@core/security/auth.guard';\r\n\r\n\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: '',\r\n    component: UnitConversationListComponent,\r\n    canActivate: [AuthGuard],\r\n   data: { claimType: 'PRO_MANAGE_UNIT' },\r\n  }\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule]\r\n})\r\n\r\nexport class UnitConversationRoutingModule { }\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { UnitConversationListComponent } from './unit-conversation-list/unit-conversation-list.component';\r\nimport { UnitConversationListPresentationComponent } from './unit-conversation-list-presentation/unit-conversation-list-presentation.component';\r\nimport { ManageUnitConversationComponent } from './manage-unit-conversation/manage-unit-conversation.component';\r\nimport { UnitConversationRoutingModule } from './unit-conversation-routing.module';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport { MatDialogModule } from '@angular/material/dialog';\r\nimport { MatIconModule } from '@angular/material/icon';\r\nimport { MatProgressSpinnerModule } from '@angular/material/progress-spinner';\r\nimport { MatTableModule } from '@angular/material/table';\r\nimport { SharedModule } from '@shared/shared.module';\r\nimport { MatInputModule } from '@angular/material/input';\r\nimport { MatFormFieldModule } from '@angular/material/form-field';\r\nimport { MatSelectModule } from '@angular/material/select';\r\n\r\n\r\n\r\n@NgModule({\r\n  declarations: [\r\n    UnitConversationListComponent,\r\n    UnitConversationListPresentationComponent,\r\n    ManageUnitConversationComponent\r\n  ],\r\n  imports: [\r\n    CommonModule,\r\n    UnitConversationRoutingModule, \r\n    SharedModule,\r\n    FormsModule,\r\n    ReactiveFormsModule,\r\n    MatTableModule,\r\n    MatProgressSpinnerModule,\r\n    MatDialogModule,\r\n    MatIconModule,\r\n    SharedModule,\r\n    MatInputModule,\r\n    MatFormFieldModule,\r\n    MatSelectModule,\r\n  ]\r\n})\r\nexport class UnitConversationModule { }\r\n"],"names":[],"sourceRoot":"webpack:///","x_google_ignoreList":[]}