{"version":3,"file":"src_app_country_country_module_ts.js","mappings":"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","sources":["./src/app/country/country-list-presentation/country-list-presentation.component.ts","./src/app/country/country-list-presentation/country-list-presentation.component.html","./src/app/country/country-list/country-list.component.ts","./src/app/country/country-list/country-list.component.html","./src/app/country/country-routing.module.ts","./src/app/country/country.module.ts","./src/app/country/manage-country/manage-country.component.ts","./src/app/country/manage-country/manage-country.component.html"],"sourcesContent":["import { Component, EventEmitter, Input, Output, ViewChild } from '@angular/core';\r\nimport { MatDialog } from '@angular/material/dialog';\r\nimport { MatPaginator } from '@angular/material/paginator';\r\nimport { MatTableDataSource } from '@angular/material/table';\r\nimport { CommonDialogService } from '@core/common-dialog/common-dialog.service';\r\nimport { Country } from '@core/domain-classes/country';\r\nimport { TranslationService } from '@core/services/translation.service';\r\nimport { BaseComponent } from 'src/app/base.component';\r\nimport { ManageCountryComponent } from '../manage-country/manage-country.component';\r\n\r\n@Component({\r\n  selector: 'app-country-list-presentation',\r\n  templateUrl: './country-list-presentation.component.html',\r\n  styleUrls: ['./country-list-presentation.component.scss']\r\n})\r\nexport class CountryListPresentationComponent extends BaseComponent {\r\n\r\n  @Input() set countries(value: Country[]) {\r\n    this.dataSource = new MatTableDataSource<Country>(value);\r\n    this.dataSource.paginator = this.paginator;\r\n  };\r\n\r\n  @Input() loading: boolean = false;\r\n  @Output() deleteCountryHandler: EventEmitter<string> = new EventEmitter<string>();\r\n  dataSource = new MatTableDataSource<Country>();\r\n  @ViewChild(MatPaginator, { static: true }) paginator: MatPaginator;\r\n\r\n  displayedColumns: string[] = ['action', 'countryName'];\r\n  footerToDisplayed = ['footer'];\r\n\r\n  constructor(\r\n    private dialog: MatDialog,\r\n    private commonDialogService: CommonDialogService,\r\n    public translationService: TranslationService\r\n  ) {\r\n    super(translationService);\r\n    this.getLangDir();\r\n  }\r\n\r\n  deleteCountry(country: Country): void {\r\n    const areU = this.translationService.getValue('ARE_YOU_SURE_YOU_WANT_TO_DELETE');\r\n    this.sub$.sink = this.commonDialogService.deleteConformationDialog(`${areU} :: ${country.countryName}`)\r\n      .subscribe(isTrue => {\r\n        if (isTrue) {\r\n          this.deleteCountryHandler.emit(country.id);\r\n        }\r\n      });\r\n  }\r\n\r\n  manageCountry(country: Country): void {\r\n    this.dialog.open(ManageCountryComponent, {\r\n      width: '350px',\r\n      direction:this.langDir,\r\n      data: Object.assign({}, country)\r\n    });\r\n  }\r\n}\r\n","<div class=\"page-header-main\">\r\n    <div class=\"row align-items-center justify-content-between\">\r\n        <div class=\"col-md-auto col-sm-auto col\">\r\n            <div class=\"content-header\">\r\n                <h1>{{\"COUNTRY\" | translate}}</h1>\r\n            </div>\r\n        </div>\r\n        <div *hasClaim=\"'SETT_MANAGE_COUNTRY'\" class=\"col-md-auto col-sm-auto col-auto\">\r\n            <button class=\"btn blue-btn btn-sm m-right-10\" (click)=\"manageCountry({})\">\r\n                <i class=\"fas fa-plus\"></i>\r\n                {{\"ADD_COUNTRY\" | translate}}\r\n            </button>\r\n        </div>\r\n    </div>\r\n</div>\r\n\r\n<div class=\"loading-shade\" *ngIf=\"!loading\">\r\n    <mat-spinner></mat-spinner>\r\n</div>\r\n<div class=\"table-responsive\">\r\n    <table  mat-table [dataSource]=\"dataSource\" [dir]=\"langDir\" class=\"table table-bordered table-hover\">\r\n        <ng-container matColumnDef=\"action\">\r\n            <th class=\"table-column-200\" mat-header-cell *matHeaderCellDef> {{\"ACTION\" | translate}} </th>\r\n            <td class=\"table-column-200\" mat-cell *matCellDef=\"let element\">\r\n                <button *hasClaim=\"'SETT_MANAGE_COUNTRY'\" (click)=\"manageCountry(element)\" class=\"btn btn-success btn-sm m-right-10\" type=\"button\">\r\n                    <i class=\"fas fa-pencil-alt\"></i>\r\n                    <span class=\"d-none d-sm-inline\"> {{\"EDIT\" | translate}}</span>\r\n                </button>\r\n                <button *hasClaim=\"'SETT_MANAGE_COUNTRY'\" (click)=\"deleteCountry(element)\" class=\"btn btn-danger btn-sm\" type=\"button\">\r\n                    <i class=\"fas fa-trash-alt\"></i>\r\n                    <span class=\"d-none d-sm-inline\"> {{\"DELETE\" | translate}}</span>\r\n                </button>\r\n            </td>\r\n        </ng-container>\r\n        <!-- Name Column -->\r\n        <ng-container matColumnDef=\"countryName\">\r\n            <th mat-header-cell *matHeaderCellDef>{{\"COUNTRY_NAME\" | translate}} </th>\r\n            <td mat-cell *matCellDef=\"let element\"> {{element.countryName}} </td>\r\n        </ng-container>\r\n\r\n        <tr mat-header-row *matHeaderRowDef=\"displayedColumns;sticky: true\"></tr>\r\n        <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\"></tr>\r\n    </table>\r\n    <mat-paginator [pageSizeOptions]=\"[15, 20, 25]\" showFirstLastButtons>\r\n    </mat-paginator>\r\n</div>","import { Component, OnInit } from '@angular/core';\r\nimport { Country } from '@core/domain-classes/country';\r\nimport { CountryService } from '@core/services/country.service';\r\nimport { TranslationService } from '@core/services/translation.service';\r\nimport { ToastrService } from 'ngx-toastr';\r\nimport { Observable } from 'rxjs';\r\nimport { tap } from 'rxjs/operators';\r\nimport { BaseComponent } from 'src/app/base.component';\r\n\r\n@Component({\r\n  selector: 'app-country-list',\r\n  templateUrl: './country-list.component.html',\r\n  styleUrls: ['./country-list.component.scss']\r\n})\r\nexport class CountryListComponent extends BaseComponent implements OnInit {\r\n  countries$: Observable<Country[]>;\r\n  loading$: Observable<boolean>;\r\n  constructor(\r\n    private countryService: CountryService,\r\n    private toastrService: ToastrService,\r\n    public translationService: TranslationService) {\r\n   super(translationService);\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.loading$ = this.countryService.loaded$\r\n    .pipe(\r\n      tap(loaded => {\r\n        if (!loaded) {\r\n          this.getCountries();\r\n        }\r\n      })\r\n    )\r\n  this.countries$ = this.countryService.entities$\r\n  }\r\n\r\n  getCountries(){\r\n    this.countryService.getAll();\r\n  }\r\n\r\n  deleteCountry(id: string): void {\r\n    this.sub$.sink = this.countryService.delete(id).subscribe(() => {\r\n      this.toastrService.success(this.translationService.getValue('COUNTRY_DELETED_SUCCESSFULLY'));\r\n    });\r\n  }\r\n}\r\n","<app-country-list-presentation [countries]=\"countries$ | async\" [loading]=\"loading$ | async\"\r\n  (deleteCountryHandler)=\"deleteCountry($event)\">\r\n</app-country-list-presentation>\r\n ","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { CountryListComponent } from './country-list/country-list.component';\r\nimport { RouterModule, Routes } from '@angular/router';\r\nimport { AuthGuard } from '@core/security/auth.guard';\r\n\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: '',\r\n    component: CountryListComponent,\r\n    data: { claimType: 'SETT_MANAGE_COUNTRY' },\r\n    canActivate: [AuthGuard]\r\n  }\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class CountryRoutingModule { }\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { CountryListComponent } from './country-list/country-list.component';\r\nimport { CountryListPresentationComponent } from './country-list-presentation/country-list-presentation.component';\r\nimport { ManageCountryComponent } from './manage-country/manage-country.component';\r\nimport { ReactiveFormsModule } from '@angular/forms';\r\nimport { MatTableModule } from '@angular/material/table';\r\nimport { MatProgressSpinnerModule } from '@angular/material/progress-spinner';\r\nimport { MatDialogModule } from '@angular/material/dialog';\r\nimport { SharedModule } from '@shared/shared.module';\r\nimport { MatCardModule } from '@angular/material/card';\r\nimport { MatPaginatorModule } from '@angular/material/paginator';\r\nimport { CountryRoutingModule } from './country-routing.module';\r\n\r\n\r\n\r\n@NgModule({\r\n  declarations: [\r\n    CountryListComponent,\r\n    CountryListPresentationComponent,\r\n    ManageCountryComponent\r\n  ],\r\n  imports: [\r\n    CommonModule,\r\n    CountryRoutingModule,\r\n    ReactiveFormsModule,\r\n    MatTableModule,\r\n    MatProgressSpinnerModule,\r\n    MatDialogModule,\r\n    SharedModule,\r\n    MatCardModule,\r\n    MatPaginatorModule,\r\n  ]\r\n})\r\nexport class CountryModule { }\r\n","import { Component, Inject, OnInit } from '@angular/core';\r\nimport { UntypedFormBuilder, UntypedFormGroup, Validators } from '@angular/forms';\r\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\r\nimport { Country } from '@core/domain-classes/country';\r\nimport { CountryService } from '@core/services/country.service';\r\nimport { TranslationService } from '@core/services/translation.service';\r\nimport { ToastrService } from 'ngx-toastr';\r\nimport { BaseComponent } from 'src/app/base.component';\r\n\r\n@Component({\r\n  selector: 'app-manage-country',\r\n  templateUrl: './manage-country.component.html',\r\n  styleUrls: ['./manage-country.component.scss']\r\n})\r\nexport class ManageCountryComponent extends BaseComponent implements OnInit {\r\n\r\n  isEdit: boolean = false;\r\n  countryForm: UntypedFormGroup;\r\n  constructor(\r\n    public dialogRef: MatDialogRef<ManageCountryComponent>,\r\n    @Inject(MAT_DIALOG_DATA) public data: Country,\r\n    private countryService: CountryService,\r\n    private toastrService: ToastrService,\r\n    private fb: UntypedFormBuilder,\r\n    public translationService: TranslationService) {\r\n    super(translationService);\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.createForm();\r\n    if (this.data.id) {\r\n      this.countryForm.patchValue(this.data);\r\n      this.isEdit = true;\r\n    }\r\n\r\n  }\r\n\r\n  createForm() {\r\n    this.countryForm = this.fb.group({\r\n      id: [''],\r\n      countryName: ['', Validators.required]\r\n    });\r\n  }\r\n\r\n  onCancel(): void {\r\n    this.dialogRef.close();\r\n  }\r\n\r\n  saveCountry(): void {\r\n    if (!this.countryForm.valid) {\r\n      this.countryForm.markAllAsTouched();\r\n      return;\r\n    }\r\n    const country: Country = this.countryForm.value;\r\n    if (this.data.id) {\r\n      this.countryService.update(country).subscribe(() => {\r\n        this.toastrService.success(this.translationService.getValue('COUNTRY_SAVED_SUCCESSFULLY'));\r\n        this.dialogRef.close();\r\n      });\r\n    } else {\r\n      this.countryService.add(country).subscribe(() => {\r\n        this.toastrService.success(this.translationService.getValue('COUNTRY_SAVED_SUCCESSFULLY'));\r\n        this.dialogRef.close();\r\n      });\r\n    }\r\n  }\r\n}\r\n","<div class=\"modal-content1\">\r\n    <div class=\"modal-header\">\r\n        <div class=\"d-flex w-100 align-items-center justify-content-between\">\r\n            <div class=\"col-md-9 col\">\r\n                <h4 class=\"modal-title\">\r\n                    {{\"MANAGE_COUNTRY\" | translate}}\r\n                </h4>\r\n            </div>\r\n            <div class=\"col-sm-auto col-auto ml-auto\">\r\n                <button type=\"button\" class=\"close\" (click)=\"onCancel()\" data-dismiss=\"modal\">\r\n                    <i class=\"fas fa-times\"></i>\r\n                </button>\r\n            </div>\r\n        </div>\r\n    </div>\r\n    <form [formGroup]=\"countryForm\">\r\n        <div class=\"modal-body\">\r\n            <div class=\"row\">\r\n                <div class=\"col-md-12\">\r\n                    <div class=\"form-group\">\r\n                        <label class=\"text-danger\" for=\"countryName\"> {{\"COUNTRY_NAME\" | translate}} *</label>\r\n                        <input formControlName=\"countryName\" type=\"text\" class=\"form-control\" id=\"countryName\">\r\n                        <div *ngIf=\"countryForm.get('countryName').touched && countryForm.get('countryName').errors\">\r\n                            <div class=\"text-danger\"\r\n                                *ngIf=\"countryForm.get('countryName').touched && countryForm.get('countryName').errors?.required\">\r\n                                {{'COUNTRY_NAME_IS_REQUIRED.' | translate}}\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n        <div class=\"modal-footer\">\r\n            <div class=\"form-row w-100\">\r\n                <div class=\"col-md-auto col-auto\">\r\n                    <button *hasClaim=\"'SETT_MANAGE_COUNTRY'\" class=\"btn btn-success btn-sm m-right-10\"\r\n                        (click)=\"saveCountry()\" cdkFocusInitial><i class=\"fas fa-save\"></i>\r\n                        {{\"SAVE\" | translate}}\r\n                    </button>\r\n                    <button class=\"btn btn-danger btn-sm\" (click)=\"onCancel()\">\r\n                        <i class=\"fas fa-times-circle\"></i>\r\n                        {{\"CANCEL\" | translate}}\r\n                    </button>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </form>\r\n</div>"],"names":[],"sourceRoot":"webpack:///","x_google_ignoreList":[]}