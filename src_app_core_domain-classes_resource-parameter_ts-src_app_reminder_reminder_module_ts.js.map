{"version":3,"file":"src_app_core_domain-classes_resource-parameter_ts-src_app_reminder_reminder_module_ts.js","mappings":"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","sources":["./src/app/core/domain-classes/dayOfWeek.enum.ts","./src/app/core/domain-classes/frequency.enum.ts","./src/app/core/domain-classes/quarter.enum.ts","./src/app/core/domain-classes/resource-parameter.ts","./src/app/reminder/add-reminder/add-reminder.component.ts","./src/app/reminder/add-reminder/add-reminder.component.html","./src/app/reminder/add-reminder/reminder-detail.resolver.ts","./src/app/reminder/reminder-list/reminder-datasource.ts","./src/app/reminder/reminder-list/reminder-frequency.pipe.ts","./src/app/reminder/reminder-list/reminder-list.component.ts","./src/app/reminder/reminder-list/reminder-list.component.html","./src/app/reminder/reminder-routing.module.ts","./src/app/reminder/reminder.module.ts","./src/app/reminder/reminder.service.ts","./node_modules/@angular/material/fesm2015/button-toggle.mjs"],"sourcesContent":["export enum DayOfWeek {\r\n    Sunday = 0,\r\n    Monday = 1,\r\n    Tuesday = 2,\r\n    Wednesday = 3,\r\n    Thursday = 4,\r\n    Friday = 5,\r\n    Saturday = 6\r\n}","export enum Frequency {\r\n    Daily = 0,\r\n    Weekly = 1,\r\n    Monthly = 2,\r\n    Quarterly = 3,\r\n    HalfYearly = 4,\r\n    Yearly = 5\r\n}","export enum Quarter {\r\n    Quarter1 = 0,\r\n    Quarter2 = 1,\r\n    Quarter3 = 2,\r\n    Quarter4 = 3,\r\n}","export abstract class ResourceParameter {\r\n  fields = '';\r\n  orderBy = '';\r\n  searchQuery = '';\r\n  pageSize = 30;\r\n  skip = 0;\r\n  name = '';\r\n  totalCount = 0;\r\n}\r\n","import { Component, Inject, OnInit } from '@angular/core';\r\nimport { UntypedFormArray, UntypedFormBuilder, UntypedFormGroup, Validators } from '@angular/forms';\r\nimport { ReminderFrequency } from '@core/domain-classes/reminder-frequency';\r\nimport { User } from '@core/domain-classes/user';\r\nimport { ReminderService } from '../reminder.service';\r\nimport { CommonService } from '@core/services/common.service';\r\nimport { BaseComponent } from 'src/app/base.component';\r\nimport { ToastrService } from 'ngx-toastr';\r\nimport { Reminder } from '@core/domain-classes/reminder';\r\nimport { Frequency } from '@core/domain-classes/frequency.enum';\r\nimport { DayOfWeek } from '@core/domain-classes/dayOfWeek.enum';\r\nimport { Quarter } from '@core/domain-classes/quarter.enum';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { MatCheckboxChange } from '@angular/material/checkbox';\r\nimport { TranslationService } from '@core/services/translation.service';\r\n\r\n@Component({\r\n  selector: 'app-add-reminder',\r\n  templateUrl: './add-reminder.component.html',\r\n  styleUrls: ['./add-reminder.component.scss']\r\n})\r\nexport class AddReminderComponent extends BaseComponent implements OnInit {\r\n  reminderFrequencies: ReminderFrequency[] = [];\r\n  reminderForm: UntypedFormGroup;\r\n  minDate = new Date();\r\n  users: User[] = [];\r\n  selectedUsers: User[] = [];\r\n  reminder: Reminder;\r\n  isLoading = false;\r\n\r\n  dayOfWeek = [{\r\n    id: 0,\r\n    name: 'Sunday'\r\n  }, {\r\n    id: 1,\r\n    name: 'Monday'\r\n  }, {\r\n    id: 2,\r\n    name: 'Tuesday'\r\n  }, {\r\n    id: 3,\r\n    name: 'Wednesday'\r\n  }, {\r\n    id: 4,\r\n    name: 'Thursday'\r\n  }, {\r\n    id: 5,\r\n    name: 'Friday'\r\n  }, {\r\n    id: 6,\r\n    name: 'Saturday'\r\n  }];\r\n\r\n  months = [\r\n    {\r\n      id: 1,\r\n      name: 'January'\r\n    }, {\r\n      id: 2,\r\n      name: 'February'\r\n    }, {\r\n      id: 3,\r\n      name: 'March'\r\n    }, {\r\n      id: 4,\r\n      name: 'April'\r\n    }, {\r\n      id: 5,\r\n      name: 'May'\r\n    }, {\r\n      id: 6,\r\n      name: 'June'\r\n    }, {\r\n      id: 7,\r\n      name: 'July'\r\n    }, {\r\n      id: 8,\r\n      name: 'August'\r\n    }, {\r\n      id: 9,\r\n      name: 'September'\r\n    }, {\r\n      id: 10,\r\n      name: 'October'\r\n    }, {\r\n      id: 11,\r\n      name: 'November'\r\n    }, {\r\n      id: 12,\r\n      name: 'December'\r\n    }\r\n  ];\r\n  days: number[] = [];\r\n\r\n  get dailyRemindersArray(): UntypedFormArray {\r\n    return <UntypedFormArray>this.reminderForm.get('dailyReminders');\r\n  }\r\n\r\n  get quarterlyRemindersArray(): UntypedFormArray {\r\n    return <UntypedFormArray>this.reminderForm.get('quarterlyReminders');\r\n  }\r\n\r\n  get halfYearlyRemindersArray(): UntypedFormArray {\r\n    return <UntypedFormArray>this.reminderForm.get('halfYearlyReminders');\r\n  }\r\n\r\n  constructor(\r\n    private fb: UntypedFormBuilder,\r\n    private reminderService: ReminderService,\r\n    private commonService: CommonService,\r\n    private toastrService: ToastrService,\r\n    private route: Router,\r\n    private activatedRoute: ActivatedRoute,\r\n    public translationService:TranslationService) {\r\n    super(translationService);\r\n    this.getLangDir();\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    for (let i = 1; i <= 31; i++) {\r\n      this.days.push(i);\r\n    }\r\n    this.getReminderFrequency();\r\n    this.createReminderForm();\r\n    this.sub$.sink = this.activatedRoute.data.subscribe(\r\n      (data: { reminder: Reminder }) => {\r\n        if (data.reminder) {\r\n          this.reminder = { ...data.reminder };\r\n          this.reminderForm.patchValue(this.reminder);\r\n          this.onFrequencyChange();\r\n          this.reminderForm.patchValue(this.reminder);\r\n          if (this.reminderForm.get('isRepeated').value) {\r\n            this.reminderForm.get('frequency').setValidators([Validators.required]);\r\n          }\r\n        }\r\n      }\r\n    );\r\n    this.getUsers();\r\n  }\r\n\r\n  getReminderFrequency() {\r\n    this.sub$.sink = this.commonService.getReminderFrequency()\r\n      .subscribe(f => this.reminderFrequencies = [...f]);\r\n  }\r\n\r\n  createReminderForm() {\r\n    var currentDate = new Date();\r\n    this.reminderForm = this.fb.group({\r\n      id: [''],\r\n      subject: ['', [Validators.required]],\r\n      message: ['', [Validators.required]],\r\n      frequency: [''],\r\n      isRepeated: [false],\r\n      isEmailNotification: [false],\r\n      startDate: [currentDate, [Validators.required]],\r\n      endDate: [null],\r\n      dayOfWeek: [2]\r\n    });\r\n  }\r\n\r\n  checkData(event: MatCheckboxChange) {\r\n    if (event.checked) {\r\n      this.reminderForm.get('frequency').setValidators([Validators.required]);\r\n    } else {\r\n      this.reminderForm.get('frequency').setValidators([]);\r\n    }\r\n  }\r\n\r\n  createReminder() {\r\n    if (!this.reminderForm.valid) {\r\n      this.reminderForm.markAllAsTouched();\r\n      return;\r\n    }\r\n    let reminder: Reminder = this.reminderForm.value;\r\n    reminder.reminderUsers = this.selectedUsers.map(u => {\r\n      return {\r\n        reminderId: reminder.id,\r\n        userId: u.id\r\n      }\r\n    });\r\n    if (reminder.isRepeated) {\r\n      reminder.frequencyId = \"6\";\r\n    }\r\n\r\n\r\n\r\n    if (!this.reminder) {\r\n      this.isLoading = true;\r\n      this.sub$.sink = this.reminderService.addReminder(reminder).subscribe(d => {\r\n        this.toastrService.success(this.translationService.getValue('REMINDER_CREATED_SUCCESSFULLY'));\r\n        this.route.navigate(['/reminders']);\r\n        this.isLoading = false;\r\n      }, () => this.isLoading = false);\r\n\r\n    } else {\r\n      if (reminder.dailyReminders) {\r\n        reminder.dailyReminders = reminder.dailyReminders.map(c => {\r\n          c.reminderId = this.reminder.id;\r\n          return c;\r\n        });\r\n      }\r\n      if (reminder.quarterlyReminders) {\r\n        reminder.quarterlyReminders = reminder.quarterlyReminders.map(c => {\r\n          c.reminderId = this.reminder.id;\r\n          return c;\r\n        });\r\n      }\r\n      if (reminder.halfYearlyReminders) {\r\n        reminder.halfYearlyReminders = reminder.halfYearlyReminders.map(c => {\r\n          c.reminderId = this.reminder.id;\r\n          return c;\r\n        });\r\n      }\r\n      this.isLoading = true;\r\n      this.sub$.sink = this.reminderService.updateReminder(reminder).subscribe(d => {\r\n        this.toastrService.success(this.translationService.getValue('REMINDER_UPDATED_SUCCESSFULLY'));\r\n        this.route.navigate(['/reminders']);\r\n        this.isLoading = false;\r\n      }, () => this.isLoading = false);\r\n    }\r\n  }\r\n\r\n  getUsers() {\r\n    this.sub$.sink = this.commonService.getAllUsers().subscribe((u: User[]) => {\r\n      this.users = u;\r\n      if (this.reminder) {\r\n        const reminderUsers = this.reminder.reminderUsers.map(c => c.userId);\r\n        this.selectedUsers = this.users.filter(c => reminderUsers.indexOf(c.id) >= 0);\r\n      }\r\n    });\r\n  }\r\n\r\n  onFrequencyChange() {\r\n    let frequency = this.reminderForm.get('frequency').value;\r\n    frequency = frequency == 0 ? '0' : frequency;\r\n    if (frequency == Frequency.Daily.toString()) {\r\n      this.removeQuarterlyReminders();\r\n      this.removeHalfYearlyReminders();\r\n      this.addDailReminders();\r\n      this.reminderForm.get('dayOfWeek').setValue('');\r\n    } else if (frequency == Frequency.Weekly.toString()) {\r\n      this.removeDailReminders();\r\n      this.removeQuarterlyReminders();\r\n      this.removeHalfYearlyReminders();\r\n      this.reminderForm.get('dayOfWeek').setValue(2);\r\n    }\r\n    else if (frequency == Frequency.Quarterly.toString()) {\r\n      this.removeDailReminders();\r\n      this.removeHalfYearlyReminders();\r\n      this.addQuarterlyReminders();\r\n      this.reminderForm.get('dayOfWeek').setValue('');\r\n    } else if (frequency == Frequency.HalfYearly.toString()) {\r\n      this.removeDailReminders();\r\n      this.removeQuarterlyReminders();\r\n      this.addHalfYearlyReminders();\r\n      this.reminderForm.get('dayOfWeek').setValue('');\r\n    } else {\r\n      this.removeDailReminders();\r\n      this.removeQuarterlyReminders();\r\n      this.removeHalfYearlyReminders();\r\n      this.reminderForm.get('dayOfWeek').setValue('');\r\n    }\r\n  }\r\n\r\n  addDailReminders() {\r\n    if (!this.reminderForm.contains('dailyReminders')) {\r\n      var formArray = this.fb.array([]);\r\n      formArray.push(this.createDailyReminderFormGroup(DayOfWeek.Sunday));\r\n      formArray.push(this.createDailyReminderFormGroup(DayOfWeek.Monday));\r\n      formArray.push(this.createDailyReminderFormGroup(DayOfWeek.Tuesday));\r\n      formArray.push(this.createDailyReminderFormGroup(DayOfWeek.Wednesday));\r\n      formArray.push(this.createDailyReminderFormGroup(DayOfWeek.Thursday));\r\n      formArray.push(this.createDailyReminderFormGroup(DayOfWeek.Friday));\r\n      formArray.push(this.createDailyReminderFormGroup(DayOfWeek.Saturday));\r\n      this.reminderForm.addControl('dailyReminders', formArray);\r\n    }\r\n  }\r\n\r\n  addQuarterlyReminders() {\r\n    if (!this.reminderForm.contains('quarterlyReminders')) {\r\n      var formArray = this.fb.array([]);\r\n      var firstQuaterMonths = this.months.filter(c => [1, 2, 3].indexOf(c.id) >= 0);\r\n      var secondQuaterMonths = this.months.filter(c => [4, 5, 6].indexOf(c.id) >= 0);\r\n      var thirdQuaterMonths = this.months.filter(c => [7, 8, 9].indexOf(c.id) >= 0);\r\n      var forthQuaterMonths = this.months.filter(c => [10, 11, 12].indexOf(c.id) >= 0);\r\n      formArray.push(this.createQuarterlyReminderFormGroup(Quarter.Quarter1, \"Jan - Mar\", firstQuaterMonths));\r\n      formArray.push(this.createQuarterlyReminderFormGroup(Quarter.Quarter2, \"Apr - Jun\", secondQuaterMonths));\r\n      formArray.push(this.createQuarterlyReminderFormGroup(Quarter.Quarter3, \"Jul - Sept\", thirdQuaterMonths));\r\n      formArray.push(this.createQuarterlyReminderFormGroup(Quarter.Quarter4, \"Oct - Dec\", forthQuaterMonths));\r\n      this.reminderForm.addControl('quarterlyReminders', formArray);\r\n    }\r\n  }\r\n\r\n  addHalfYearlyReminders() {\r\n    if (!this.reminderForm.contains('halfYearlyReminders')) {\r\n      var formArray = this.fb.array([]);\r\n      var firstQuaterMonths = this.months.filter(c => [1, 2, 3, 4, 5, 6].indexOf(c.id) >= 0);\r\n      var secondQuaterMonths = this.months.filter(c => [7, 8, 9, 10, 11, 13].indexOf(c.id) >= 0);\r\n      formArray.push(this.createHalfYearlyReminderFormGroup(Quarter.Quarter1, \"Jan - Jun\", firstQuaterMonths));\r\n      formArray.push(this.createHalfYearlyReminderFormGroup(Quarter.Quarter2, \"Jul - Dec\", secondQuaterMonths));\r\n      this.reminderForm.addControl('halfYearlyReminders', formArray);\r\n    }\r\n  }\r\n\r\n  removeDailReminders() {\r\n    if (this.reminderForm.contains('dailyReminders')) {\r\n      this.reminderForm.removeControl('dailyReminders');\r\n    }\r\n  }\r\n\r\n  removeQuarterlyReminders() {\r\n    if (this.reminderForm.contains('quarterlyReminders')) {\r\n      this.reminderForm.removeControl('quarterlyReminders');\r\n    }\r\n  }\r\n\r\n  removeHalfYearlyReminders() {\r\n    if (this.reminderForm.contains('halfYearlyReminders')) {\r\n      this.reminderForm.removeControl('halfYearlyReminders');\r\n    }\r\n  }\r\n\r\n  createDailyReminderFormGroup(dayOfWeek: DayOfWeek) {\r\n    return this.fb.group({\r\n      id: [''],\r\n      reminderId: [''],\r\n      dayOfWeek: [dayOfWeek],\r\n      isActive: [true],\r\n      name: [DayOfWeek[dayOfWeek]]\r\n    });\r\n  }\r\n\r\n  createQuarterlyReminderFormGroup(quater: Quarter, name: string, monthValues: any[]) {\r\n    return this.fb.group({\r\n      id: [''],\r\n      reminderId: [''],\r\n      quarter: [quater],\r\n      day: [this.getCurrentDay()],\r\n      month: [monthValues[0]],\r\n      name: [name],\r\n      monthValues: [monthValues]\r\n    });\r\n  }\r\n\r\n  createHalfYearlyReminderFormGroup(quater: Quarter, name: string, monthValues: any[]) {\r\n    return this.fb.group({\r\n      id: [''],\r\n      reminderId: [''],\r\n      quarter: [quater],\r\n      day: [this.getCurrentDay()],\r\n      month: [monthValues[0]],\r\n      name: [name],\r\n      monthValues: [monthValues]\r\n    });\r\n  }\r\n\r\n  getCurrentDay(): number {\r\n    return new Date().getDate();\r\n  }\r\n\r\n  onDateChange(formGrouup: UntypedFormGroup) {\r\n    const day = formGrouup.get('day').value;\r\n    const month = formGrouup.get('month').value;\r\n    var daysInMonth = new Date(new Date().getFullYear(), Number.parseInt(month), 0).getDate();\r\n    if (day > daysInMonth) {\r\n      formGrouup.setErrors({\r\n        'invalidDate': 'Invalid Date'\r\n      });\r\n      formGrouup.markAllAsTouched();\r\n    }\r\n  }\r\n}\r\n","<div class=\"page-header-main\">\r\n  <div class=\"row align-items-center justify-content-between\">\r\n    <div class=\"col-md-auto col-sm-auto\">\r\n      <div class=\"content-header\">\r\n        <h1>{{'MANAGE_REMINDER' | translate}}</h1>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</div>\r\n<div class=\"row\">\r\n  <div class=\"col-sm-12\">\r\n    <form [formGroup]=\"reminderForm\">\r\n      <div class=\"row\">\r\n        <div class=\"form-group col-md-12\">\r\n          <label class=\"text-danger\" for=\"subject\"> {{'SUBJECT' | translate}} *</label>\r\n          <input formControlName=\"subject\" type=\"text\" class=\"form-control\" id=\"subject\">\r\n          <div *ngIf=\"reminderForm.get('subject').touched && reminderForm.get('subject').errors\">\r\n            <div class=\"text-danger\" *ngIf=\"reminderForm.get('subject').errors?.required\">\r\n              {{'SUBJECT_IS_REQUIRED' | translate}}\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div class=\"row\">\r\n        <div class=\"form-group col-md-12\">\r\n          <label class=\"text-danger\" for=\"message\"> {{'MESSAGE' | translate}} *</label>\r\n          <textarea class=\"form-control\" formControlName=\"message\" id=\"message\" cols=\"30\"></textarea>\r\n          <div *ngIf=\"reminderForm.get('message').touched && reminderForm.get('message').errors\">\r\n            <div class=\"text-danger\" *ngIf=\"reminderForm.get('message').errors?.required\">\r\n              {{'MESSAGE_IS_REQUIRED' | translate}}\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div class=\"row\">\r\n        <div class=\"col-md-2\">\r\n          <mat-checkbox  [dir]=\"langDir\" color=\"primary\" (change)=\"checkData($event)\" formControlName=\"isRepeated\">\r\n            {{'REPEATE_REMINDER' | translate}}\r\n          </mat-checkbox>\r\n        </div>\r\n        <div class=\"col-md-2\">\r\n          <mat-checkbox  [dir]=\"langDir\" color=\"primary\" formControlName=\"isEmailNotification\">{{'SEND_EMAIL' | translate}}\r\n          </mat-checkbox>\r\n        </div>\r\n        <div class=\"col-md-4\">\r\n          <mat-select  [dir]=\"langDir\" placeholder=\"{{'SELECT_USERS' | translate}}\" class=\"form-control\" [(value)]=\"selectedUsers\"\r\n            multiple>\r\n            <mat-select-trigger  [dir]=\"langDir\">\r\n              <span *ngIf=\"selectedUsers.length > 0\">\r\n                {{selectedUsers[0].firstName}} {{selectedUsers[0].lastName}}\r\n              </span>\r\n              <span *ngIf=\"selectedUsers.length > 1\" class=\"example-additional-selection\">\r\n                (+{{selectedUsers.length - 1}} {{selectedUsers.length === 2 ? 'other' :\r\n                'others'}})\r\n              </span>\r\n            </mat-select-trigger>\r\n            <mat-option  [dir]=\"langDir\" *ngFor=\"let user of users\" [value]=\"user\">{{user.firstName}}\r\n              {{user.lastName}}</mat-option>\r\n          </mat-select>\r\n        </div>\r\n      </div>\r\n      <div class=\"row\" *ngIf=\"reminderForm.get('isRepeated').value\">\r\n        <div class=\"form-group col-md-6\">\r\n          <label class=\"text-danger\" for=\"frequency\"> {{'FREQUENCY' | translate}} *</label>\r\n          <select class=\"form-control\" (change)=\"onFrequencyChange()\" formControlName=\"frequency\" id=\"frequency\">\r\n            <option value=\"\">--{{'NONE' | translate}}--</option>\r\n            <option [value]=\"frequencyItem?.id\" *ngFor=\"let frequencyItem of reminderFrequencies\">\r\n              {{frequencyItem?.name}}\r\n            </option>\r\n          </select>\r\n          <div *ngIf=\"reminderForm.get('frequency').errors?.required\">\r\n            <div class=\"text-danger\">\r\n              {{'FREQUENCY_IS_REQUIRED' | translate}}\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div class=\"row\" *ngIf=\"reminderForm.get('isRepeated').value\">\r\n        <div class=\"col-md-12\">\r\n          <div class=\"form-group\" *ngIf=\"reminderForm.get('frequency').value == '0'\">\r\n            <label for=\"weekDays\">{{'WEEK_DAYS' | translate}}</label>\r\n            <div id=\"weekDays\" class=\"row\">\r\n              <div class=\"col-sm-auto mr-1\" formArrayName=\"dailyReminders\"\r\n                *ngFor=\"let dailyReminder of dailyRemindersArray.controls; let i=index\">\r\n                <ng-container [formGroupName]=\"i\">\r\n                  <mat-checkbox color=\"primary\" class=\"mr-1\" formControlName=\"isActive\">\r\n                    {{dailyReminder.controls['name'].value}}\r\n                  </mat-checkbox>\r\n                </ng-container>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div class=\"form-group\" *ngIf=\"reminderForm.get('frequency').value == '1'\">\r\n            <label for=\"weekDay\">{{'WEEK_DAY' | translate}}</label>\r\n            <div id=\"weekDay\">\r\n              <mat-radio-group formControlName=\"dayOfWeek\">\r\n                <mat-radio-button class=\"mr-2\" color=\"primary\" [value]=\"day.id\"\r\n                  *ngFor=\"let day of dayOfWeek; let i=index\">{{day.name}}</mat-radio-button>\r\n              </mat-radio-group>\r\n            </div>\r\n          </div>\r\n          <div class=\"form-group\" *ngIf=\"reminderForm.get('frequency').value == '3'\">\r\n            <label for=\"Quarterly\">{{'SELECT_QUARTER_DATE' | translate}}</label>\r\n            <div id=\"Quarterly\" class=\"row\">\r\n              <table class=\"table\">\r\n                <thead>\r\n                  <tr>\r\n                    <th></th>\r\n                    <th>{{'MONTH' | translate}}</th>\r\n                    <th>{{'DAY' | translate}}</th>\r\n                  </tr>\r\n                </thead>\r\n                <tbody formArrayName=\"quarterlyReminders\">\r\n                  <tr *ngFor=\"let quarterlyReminder of quarterlyRemindersArray.controls; let i=index\">\r\n                    <ng-container [formGroupName]=\"i\">\r\n                      <td>{{quarterlyReminder.controls['name'].value}}</td>\r\n                      <td>\r\n                        <select (change)=\"onDateChange(quarterlyReminder)\" class=\"form-control\" formControlName=\"month\">\r\n                          <option [value]=\"mon.id\" *ngFor=\"let mon of quarterlyReminder.controls['monthValues'].value\">\r\n                            {{mon.name}}\r\n                          </option>\r\n                        </select>\r\n                      </td>\r\n                      <td>\r\n                        <select (change)=\"onDateChange(quarterlyReminder)\" class=\"form-control\" formControlName=\"day\">\r\n                          <option [value]=\"day\" *ngFor=\"let day of days\">\r\n                            {{day}}\r\n                          </option>\r\n                        </select>\r\n                        <div *ngIf=\"quarterlyReminder.get('day').touched && quarterlyReminder.hasError('invalidDate')\">\r\n                          <div class=\"text-danger\">\r\n                            {{'PLEASE_SELECT_VALID_DAY' | translate}}\r\n                          </div>\r\n                        </div>\r\n                      </td>\r\n                    </ng-container>\r\n                  </tr>\r\n                </tbody>\r\n              </table>\r\n            </div>\r\n          </div>\r\n          <div class=\"form-group\" *ngIf=\"reminderForm.get('frequency').value == '4'\">\r\n            <label for=\"HalfYearly\">{{'SELECT_DATE' | translate}}</label>\r\n            <div id=\"HalfYearly\" class=\"row\">\r\n              <table class=\"table\">\r\n                <thead>\r\n                  <tr>\r\n                    <th></th>\r\n                    <th>{{'MONTH' | translate}}</th>\r\n                    <th>{{'DAY' | translate}}</th>\r\n                  </tr>\r\n                </thead>\r\n                <tbody formArrayName=\"halfYearlyReminders\">\r\n                  <tr *ngFor=\"let halfYearlyReminder of halfYearlyRemindersArray.controls; let i=index\">\r\n                    <ng-container [formGroupName]=\"i\">\r\n                      <td>{{halfYearlyReminder.controls['name'].value}}</td>\r\n                      <td>\r\n                        <select (change)=\"onDateChange(halfYearlyReminder)\" class=\"form-control\"\r\n                          formControlName=\"month\">\r\n                          <option [value]=\"mon.id\" *ngFor=\"let mon of halfYearlyReminder.controls['monthValues'].value\">\r\n                            {{mon.name}}\r\n                          </option>\r\n                        </select>\r\n                      </td>\r\n                      <td>\r\n                        <select (change)=\"onDateChange(halfYearlyReminder)\" class=\"form-control\" formControlName=\"day\">\r\n                          <option [value]=\"day\" *ngFor=\"let day of days\">\r\n                            {{day}}\r\n                          </option>\r\n                        </select>\r\n                        <div\r\n                          *ngIf=\"halfYearlyReminder.get('day').touched && halfYearlyReminder.hasError('invalidDate')\">\r\n                          <div class=\"text-danger\">\r\n                            {{'PLEASE_SELECT_VALID_DAY' | translate}}\r\n                          </div>\r\n                        </div>\r\n                      </td>\r\n                    </ng-container>\r\n                  </tr>\r\n                </tbody>\r\n              </table>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div class=\"row\">\r\n        <div class=\"form-group col-md-6\" *ngIf=\"!reminderForm.get('isRepeated').value\">\r\n          <label class=\"text-danger\" for=\"frequency\"> {{'REMINDER_DATE' | translate}} *</label>\r\n          <input class=\"form-control\" [owlDateTimeTrigger]=\"dt2\" [min]=\"minDate\" formControlName=\"startDate\"\r\n            [owlDateTime]=\"dt2\" placeholder=\"Date\">\r\n          <div *ngIf=\"reminderForm.get('startDate').touched && reminderForm.get('startDate').errors\">\r\n            <div class=\"text-danger\" *ngIf=\"reminderForm.get('startDate').errors?.required\">\r\n              {{'DATE_IS_REQUIRED' | translate}}\r\n            </div>\r\n          </div>\r\n          <div *ngIf=\"reminderForm.get('startDate').touched && reminderForm.get('startDate').errors\">\r\n            <div class=\"text-danger\" *ngIf=\"reminderForm.get('startDate').errors?.owlDateTimeMin\">\r\n              {{'START_DATE_SHOULD_BE_GREATER_THEN_CURRENT_DATE_TIME' | translate}}\r\n            </div>\r\n          </div>\r\n          <owl-date-time #dt2></owl-date-time>\r\n        </div>\r\n        <div class=\"form-group col-md-6\" *ngIf=\"reminderForm.get('isRepeated').value\">\r\n          <label class=\"text-danger\" for=\"frequency\"> {{'REMINDER_START_DATE' | translate}} *</label>\r\n          <input class=\"form-control\" [owlDateTimeTrigger]=\"dt3\" [min]=\"minDate\" formControlName=\"startDate\"\r\n            [owlDateTime]=\"dt3\" placeholder=\"Start Date\">\r\n          <div *ngIf=\"reminderForm.get('startDate').touched && reminderForm.get('startDate').errors\">\r\n            <div class=\"text-danger\" *ngIf=\"reminderForm.get('startDate').errors?.required\">\r\n              {{'START_DATE_IS_REQUIRED' | translate}}\r\n            </div>\r\n          </div>\r\n          <div *ngIf=\"reminderForm.get('startDate').touched && reminderForm.get('startDate').errors\">\r\n            <div class=\"text-danger\" *ngIf=\"reminderForm.get('startDate').errors?.owlDateTimeMin\">\r\n              {{'START_DATE_SHOULD_BE_GREATER_THEN_CURRENT_DATE_TIME' | translate}}\r\n            </div>\r\n          </div>\r\n          <owl-date-time #dt3></owl-date-time>\r\n        </div>\r\n        <div class=\"form-group col-md-6\" *ngIf=\"reminderForm.get('isRepeated').value\">\r\n          <label for=\"frequency\">{{'REMINDER_END_DATE' | translate}} </label>\r\n          <input class=\"form-control\" [owlDateTimeTrigger]=\"dt4\" formControlName=\"endDate\" [owlDateTime]=\"dt4\"\r\n            placeholder=\"End Date\">\r\n          <owl-date-time #dt4></owl-date-time>\r\n        </div>\r\n        <div class=\"mt-2 col-md-12\">\r\n          <button *hasClaim=\"['REM_ADD_REMINDER','REM_UPDATE_REMINDER']\" (click)=\"createReminder()\" type=\"submit\"\r\n            class=\"btn btn-success btn-sm m-right-10\"><i class=\"fas fa-save\"></i>\r\n            {{'SAVE' | translate}}</button>\r\n          <button type=\"button\" class=\"btn btn-danger btn-sm\" [routerLink]=\"['/reminders']\"><i\r\n              class=\"fas fa-times-circle\"></i>\r\n            {{'CANCEL' | translate}}</button>\r\n        </div>\r\n      </div>\r\n    </form>\r\n  </div>\r\n</div>\r\n<div class=\"loading-shade\" *ngIf=\"isLoading\">\r\n  <mat-spinner></mat-spinner>\r\n</div>","import { Injectable } from '@angular/core';\r\nimport {\r\n    Resolve,\r\n    Router,\r\n    ActivatedRouteSnapshot,\r\n    RouterStateSnapshot\r\n} from '@angular/router';\r\nimport { Observable, of } from 'rxjs';\r\nimport { take, mergeMap } from 'rxjs/operators';\r\nimport { Reminder } from '@core/domain-classes/reminder';\r\nimport { ReminderService } from '../reminder.service';\r\n\r\n\r\n@Injectable()\r\nexport class ReminderDetailResolverService implements Resolve<Reminder> {\r\n    constructor(private cs: ReminderService, private router: Router) { }\r\n    resolve(\r\n        route: ActivatedRouteSnapshot,\r\n        state: RouterStateSnapshot\r\n    ): Observable<Reminder> | null {\r\n        const id = route.paramMap.get('id');\r\n        if (id === 'add') {\r\n            return null;\r\n        }\r\n        return this.cs.getReminder(id).pipe(\r\n            take(1),\r\n            mergeMap((reminder: Reminder) => {\r\n                if (reminder) {\r\n                    return of(reminder);\r\n                } else {\r\n                    this.router.navigate(['/reminders']);\r\n                    return null;\r\n                }\r\n            })\r\n        );\r\n    }\r\n}\r\n","import { DataSource } from '@angular/cdk/table';\r\nimport { HttpResponse } from '@angular/common/http';\r\nimport { Reminder } from '@core/domain-classes/reminder';\r\nimport { ReminderResourceParameter } from '@core/domain-classes/reminder-resource-parameter';\r\nimport { ResponseHeader } from '@core/domain-classes/response-header';\r\nimport { BehaviorSubject, Observable, of, Subscription } from 'rxjs';\r\nimport { catchError, finalize } from 'rxjs/operators';\r\nimport { ReminderService } from '../reminder.service';\r\n\r\nexport class ReminderDataSource implements DataSource<Reminder> {\r\n  private _reminderSubject$ = new BehaviorSubject<Reminder[]>([]);\r\n  private _responseHeaderSubject$ = new BehaviorSubject<ResponseHeader>(null);\r\n  private loadingSubject = new BehaviorSubject<boolean>(false);\r\n\r\n  public loading$ = this.loadingSubject.asObservable();\r\n  private _count: number = 0;\r\n  sub$: Subscription;\r\n\r\n  public get count(): number {\r\n    return this._count;\r\n  }\r\n  public responseHeaderSubject$ = this._responseHeaderSubject$.asObservable();\r\n\r\n  constructor(private reminderService: ReminderService) {\r\n  }\r\n\r\n  connect(): Observable<Reminder[]> {\r\n    this.sub$ = new Subscription();\r\n    return this._reminderSubject$.asObservable();\r\n  }\r\n\r\n  disconnect(): void {\r\n    this._reminderSubject$.complete();\r\n    this.loadingSubject.complete();\r\n    this.sub$.unsubscribe();\r\n  }\r\n\r\n  loadData(reminderResource: ReminderResourceParameter) {\r\n    this.loadingSubject.next(true);\r\n    this.sub$ = this.reminderService.getReminders(reminderResource)\r\n      .pipe(\r\n        catchError(() => of([])),\r\n        finalize(() => this.loadingSubject.next(false)))\r\n      .subscribe((resp: HttpResponse<Reminder[]>) => {\r\n        if (resp && resp.headers.get('X-Pagination')) {\r\n          const paginationParam = JSON.parse(\r\n            resp.headers.get('X-Pagination')\r\n          ) as ResponseHeader;\r\n          this._responseHeaderSubject$.next(paginationParam);\r\n        }\r\n        if (resp) {\r\n          const inquiries = [...resp.body];\r\n          this._count = inquiries.length;\r\n          this._reminderSubject$.next(inquiries);\r\n        }\r\n      });\r\n  }\r\n}\r\n","import { Pipe, PipeTransform } from '@angular/core';\r\nimport { reminderFrequencies } from '@core/domain-classes/reminder-frequency';\r\n\r\n@Pipe({\r\n  name: 'frequency'\r\n})\r\n\r\nexport class ReminderFrequencyPipe implements PipeTransform {\r\n  transform(value: any, ...args: any[]): any {\r\n    const reminderFrequency = reminderFrequencies.find(c => c.id == value);\r\n    if (reminderFrequency) {\r\n      return reminderFrequency.name;\r\n    }\r\n    return '';\r\n  }\r\n}\r\n","import { Component, OnInit, ViewChild } from '@angular/core';\r\nimport { MatDialog } from '@angular/material/dialog';\r\nimport { MatPaginator } from '@angular/material/paginator';\r\nimport { MatSort } from '@angular/material/sort';\r\nimport { CommonDialogService } from '@core/common-dialog/common-dialog.service';\r\nimport { Frequency } from '@core/domain-classes/frequency.enum';\r\nimport { Reminder } from '@core/domain-classes/reminder';\r\nimport { ReminderFrequency } from '@core/domain-classes/reminder-frequency';\r\nimport { ReminderResourceParameter } from '@core/domain-classes/reminder-resource-parameter';\r\nimport { ResponseHeader } from '@core/domain-classes/response-header';\r\nimport { CommonService } from '@core/services/common.service';\r\nimport { TranslationService } from '@core/services/translation.service';\r\nimport { ToastrService } from 'ngx-toastr';\r\nimport { merge, Observable, Subject } from 'rxjs';\r\nimport { debounceTime, distinctUntilChanged, tap } from 'rxjs/operators';\r\nimport { BaseComponent } from 'src/app/base.component';\r\nimport { AddReminderComponent } from '../add-reminder/add-reminder.component';\r\nimport { ReminderService } from '../reminder.service';\r\nimport { ReminderDataSource } from './reminder-datasource';\r\n\r\n@Component({\r\n  selector: 'app-reminder-list',\r\n  templateUrl: './reminder-list.component.html',\r\n  styleUrls: ['./reminder-list.component.scss']\r\n})\r\nexport class ReminderListComponent extends BaseComponent implements OnInit {\r\n  dataSource: ReminderDataSource;\r\n  reminders: Reminder[] = [];\r\n  reminderFrequencies: ReminderFrequency[] = [];\r\n  displayedColumns: string[] = ['action', 'startDate', 'endDate', 'subject', 'message', 'frequency'];\r\n  footerToDisplayed = ['footer'];\r\n  isLoadingResults = true;\r\n  reminderResource: ReminderResourceParameter;\r\n  loading$: Observable<boolean>;\r\n  @ViewChild(MatPaginator) paginator: MatPaginator;\r\n  @ViewChild(MatSort) sort: MatSort;\r\n  _subjectFilter: string;\r\n  _messageFilter: string;\r\n  _frequencyFilter: string;\r\n\r\n  public filterObservable$: Subject<string> = new Subject<string>();\r\n\r\n  public get SubjectFilter(): string {\r\n    return this._subjectFilter;\r\n  }\r\n\r\n  public set SubjectFilter(v: string) {\r\n    this._subjectFilter = v;\r\n    const subjectFilter = `subject:${v}`;\r\n    this.filterObservable$.next(subjectFilter);\r\n  }\r\n\r\n  public set FrequencyFilter(v: string) {\r\n    if (v == '0') {\r\n      this._frequencyFilter = '0';\r\n    } else {\r\n      this._frequencyFilter = v ? v.toString() : '';\r\n    }\r\n    const frequencyFilter = `frequency:${this._frequencyFilter}`;\r\n    this.filterObservable$.next(frequencyFilter);\r\n  }\r\n\r\n  public get FrequencyFilter(): string {\r\n    return this._frequencyFilter;\r\n  }\r\n\r\n  public get MessageFilter(): string {\r\n    return this._messageFilter;\r\n  }\r\n  public set MessageFilter(v: string) {\r\n    this._messageFilter = v;\r\n    const messageFilter = `message:${v}`;\r\n    this.filterObservable$.next(messageFilter);\r\n  }\r\n\r\n  constructor(\r\n    private reminderService: ReminderService,\r\n    private dialog: MatDialog,\r\n    private commonService: CommonService,\r\n    private commonDialogService: CommonDialogService,\r\n    private toastrService: ToastrService,\r\n    public translationService: TranslationService) {\r\n    super(translationService);\r\n    this.getLangDir();\r\n    this.reminderResource = new ReminderResourceParameter();\r\n    this.reminderResource.pageSize = 15;\r\n    this.reminderResource.orderBy = 'startDate desc';\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.getReminderFrequency();\r\n    this.dataSource = new ReminderDataSource(this.reminderService);\r\n    this.dataSource.loadData(this.reminderResource);\r\n    this.getResourceParameter();\r\n    this.sub$.sink = this.filterObservable$\r\n      .pipe(\r\n        debounceTime(1000),\r\n        distinctUntilChanged())\r\n      .subscribe((c) => {\r\n        this.reminderResource.skip = 0;\r\n        this.paginator.pageIndex = 0;\r\n        const strArray: Array<string> = c.split(':');\r\n        if (strArray[0] === 'subject') {\r\n          this.reminderResource.subject = escape(strArray[1]);\r\n        } else if (strArray[0] === 'message') {\r\n          this.reminderResource.message = strArray[1];\r\n        } else if (strArray[0] === 'frequency') {\r\n          this.reminderResource.frequency = strArray[1];\r\n        }\r\n        this.dataSource.loadData(this.reminderResource);\r\n      });\r\n  }\r\n\r\n  getResourceParameter() {\r\n    this.sub$.sink = this.dataSource.responseHeaderSubject$\r\n      .subscribe((c: ResponseHeader) => {\r\n        if (c) {\r\n          this.reminderResource.pageSize = c.pageSize;\r\n          this.reminderResource.skip = c.skip;\r\n          this.reminderResource.totalCount = c.totalCount;\r\n        }\r\n      });\r\n  }\r\n\r\n  ngAfterViewInit() {\r\n    this.sub$.sink = this.sort.sortChange.subscribe(() => this.paginator.pageIndex = 0);\r\n    this.sub$.sink = merge(this.sort.sortChange, this.paginator.page)\r\n      .pipe(\r\n        tap((c: any) => {\r\n          this.reminderResource.skip = this.paginator.pageIndex * this.paginator.pageSize;\r\n          this.reminderResource.pageSize = this.paginator.pageSize;\r\n          this.reminderResource.orderBy = this.sort.active + ' ' + this.sort.direction;\r\n          this.dataSource.loadData(this.reminderResource);\r\n        })\r\n      )\r\n      .subscribe();\r\n  }\r\n\r\n  getReminderFrequency() {\r\n    this.sub$.sink = this.commonService.getReminderFrequency().subscribe(f =>\r\n      this.reminderFrequencies = [...f]\r\n    );\r\n  }\r\n\r\n  editReminder(reminder: Reminder) {\r\n    this.isLoadingResults = true;\r\n    this.sub$.sink = this.reminderService.getReminder(reminder.id).subscribe((reminder: Reminder) => {\r\n      this.isLoadingResults = false;\r\n      let dialog = this.dialog.open(AddReminderComponent, {\r\n        width: '60vw',\r\n        direction:this.langDir,\r\n        data: Object.assign({}, {\r\n          frequencies: this.reminderFrequencies,\r\n          reminder\r\n        })\r\n      });\r\n      this.sub$.sink = dialog.afterClosed().subscribe((isUpdated: boolean) => {\r\n        if (isUpdated) {\r\n          this.dataSource.loadData(this.reminderResource);\r\n        }\r\n      });\r\n    }, () => this.isLoadingResults = false);\r\n  }\r\n\r\n  deleteReminder(reminder: Reminder) {\r\n    this.sub$.sink = this.commonDialogService.deleteConformationDialog(`${this.translationService.getValue('ARE_YOU_SURE_YOU_WANT_TO_DELETE')}?`).subscribe(isTrue => {\r\n      if (isTrue) {\r\n        this.isLoadingResults = true;\r\n        this.reminderService.deleteReminder(reminder.id).subscribe(() => {\r\n          this.isLoadingResults = false;\r\n          this.toastrService.success(this.translationService.getValue('REMINDER_DELETED_SUCCESSFULLY'));\r\n          this.dataSource.loadData(this.reminderResource);\r\n        }, () => this.isLoadingResults = false);\r\n      }\r\n    });\r\n  }\r\n}\r\n","<div class=\"page-header-main\">\r\n    <div class=\"row align-items-center justify-content-between\">\r\n        <div class=\"col-md-auto col-sm-auto col\">\r\n            <div class=\"content-header\">\r\n                <h1>{{'REMINDERS' | translate}}</h1>\r\n            </div>\r\n        </div>\r\n        <div class=\"col-md-auto col-sm-auto col-auto\">\r\n            <button *hasClaim=\"'REM_ADD_REMINDER'\" class=\"btn blue-btn btn-sm m-right-10\"\r\n                [routerLink]=\"['/reminders/add']\">\r\n                <i class=\"fas fa-plus\"></i> {{'ADD_REMINDER' | translate}}\r\n            </button>\r\n        </div>\r\n    </div>\r\n</div>\r\n<div class=\"table-responsive\">\r\n    <div class=\"table table-bordered table-hover grid-height\">\r\n        <table  [dir]=\"langDir\" mat-table [dataSource]=\"dataSource\" matSort matSortActive=\"createdDate\" matSortDirection=\"desc\">\r\n            <ng-container matColumnDef=\"action\">\r\n                <th mat-header-cell *matHeaderCellDef>\r\n                </th>\r\n                <td mat-cell *matCellDef=\"let reminder\">\r\n                    <!-- <button class=\"btn btn-primary btn-sm mr-3\" [matMenuTriggerFor]=\"menu\" aria-label=\"Action\">\r\n              <i class=\"fas fa-ellipsis-v\"></i>\r\n            </button> -->\r\n                    <button *hasClaim=\"['REM_UPDATE_REMINDER','REM_DELETE_REMINDER']\" mat-icon-button\r\n                        [matMenuTriggerFor]=\"menu\" aria-label=\"Action\">\r\n                        <mat-icon>more_vert</mat-icon>\r\n                    </button>\r\n                    <mat-menu #menu=\"matMenu\">\r\n                        <button *hasClaim=\"'REM_UPDATE_REMINDER'\" [routerLink]=\"['/reminders/manage',reminder.id]\"\r\n                            mat-menu-item>\r\n                            <mat-icon>edit</mat-icon>\r\n                            <span>{{'EDIT' | translate}}</span>\r\n                        </button>\r\n                        <button *hasClaim=\"'REM_DELETE_REMINDER'\" mat-menu-item (click)=\"deleteReminder(reminder)\">\r\n                            <mat-icon>delete</mat-icon>\r\n                            <span>{{'DELETE' | translate}}</span>\r\n                        </button>\r\n                    </mat-menu>\r\n                </td>\r\n            </ng-container>\r\n            <ng-container matColumnDef=\"startDate\">\r\n                <th mat-header-cell *matHeaderCellDef mat-sort-header> {{'START_DATE' | translate}} </th>\r\n                <td mat-cell *matCellDef=\"let reminder\"> {{reminder.startDate | utcToLocalTime:'short'}} </td>\r\n            </ng-container>\r\n            <ng-container matColumnDef=\"endDate\">\r\n                <th mat-header-cell *matHeaderCellDef mat-sort-header> {{'END_DATE' | translate}} </th>\r\n                <td mat-cell *matCellDef=\"let reminder\"> {{reminder.endDate | utcToLocalTime:'short'}} </td>\r\n            </ng-container>\r\n            <ng-container matColumnDef=\"subject\">\r\n                <th mat-header-cell *matHeaderCellDef mat-sort-header> {{'SUBJECT' | translate}} </th>\r\n                <td mat-cell *matCellDef=\"let reminder\"> {{reminder.subject | limitTo: 100}} </td>\r\n            </ng-container>\r\n            <ng-container matColumnDef=\"message\">\r\n                <th mat-header-cell *matHeaderCellDef mat-sort-header> {{'MESSAGE' | translate}} </th>\r\n                <td mat-cell *matCellDef=\"let reminder\"> {{reminder.message | limitTo: 150}} </td>\r\n            </ng-container>\r\n            <ng-container matColumnDef=\"frequency\">\r\n                <th mat-header-cell *matHeaderCellDef mat-sort-header> {{'FREQUENCY' | translate}} </th>\r\n                <td mat-cell *matCellDef=\"let reminder\"> {{reminder.frequency | frequency }} </td>\r\n            </ng-container>\r\n            <ng-container matColumnDef=\"action-search\">\r\n                <th mat-header-cell *matHeaderCellDef> </th>\r\n            </ng-container>\r\n            <ng-container matColumnDef=\"date-search\">\r\n                <th mat-header-cell *matHeaderCellDef> </th>\r\n            </ng-container>\r\n            <ng-container matColumnDef=\"enddate-search\">\r\n                <th mat-header-cell *matHeaderCellDef> </th>\r\n            </ng-container>\r\n            <ng-container matColumnDef=\"subject-search\">\r\n                <th mat-header-cell *matHeaderCellDef>\r\n                    <input placeholder=\"{{'SUBJECT' | translate}}\" type=\"text\" class=\"form-control w-90\"\r\n                        [(ngModel)]=\"SubjectFilter\">\r\n                </th>\r\n            </ng-container>\r\n            <ng-container matColumnDef=\"message-search\">\r\n                <th mat-header-cell *matHeaderCellDef>\r\n                    <input placeholder=\"{{'MESSAGE' | translate}}\" type=\"text\" class=\"form-control w-90\"\r\n                        [(ngModel)]=\"MessageFilter\">\r\n                </th>\r\n            </ng-container>\r\n            <ng-container matColumnDef=\"frequency-search\">\r\n                <th mat-header-cell *matHeaderCellDef>\r\n                    <mat-select  [dir]=\"langDir\" placeholder=\"{{'FREQUENCY' | translate}}\" [(ngModel)]=\"FrequencyFilter\"\r\n                        class=\"form-control\">\r\n                        <mat-option [value]=\"\">None</mat-option>\r\n                        <mat-option *ngFor=\"let frequency of reminderFrequencies\" [value]=\"frequency?.id\">\r\n                            {{frequency?.name}}\r\n                        </mat-option>\r\n                    </mat-select>\r\n                </th>\r\n            </ng-container>\r\n            <ng-container matColumnDef=\"footer\">\r\n                <td mat-footer-cell colspan=\"6\" *matFooterCellDef>\r\n                    <mat-paginator  [dir]=\"langDir\" [length]=\"reminderResource.totalCount\" [pageSize]=\"reminderResource.pageSize\"\r\n                        [pageSizeOptions]=\"[15, 20, 30]\">\r\n                    </mat-paginator>\r\n                </td>\r\n            </ng-container>\r\n            <tr *matNoDataRow>\r\n              <td colspan=\"9\">\r\n                  <span class=\"p-4 mt-4\">\r\n                      <b> {{'NO_DATA_FOUND' | translate}}</b>\r\n                  </span>\r\n              </td>\r\n          </tr>\r\n            <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\r\n            <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\"></tr>\r\n            <tr mat-header-row\r\n                *matHeaderRowDef=\"['action-search','date-search','enddate-search','subject-search', 'message-search','frequency-search']\">\r\n            </tr>\r\n\r\n            <tr mat-footer-row *matFooterRowDef=\"footerToDisplayed\"></tr>\r\n        </table>\r\n    </div>\r\n</div>\r\n<div class=\"loading-shade\" *ngIf=\"dataSource.loading$ | async\">\r\n    <mat-spinner></mat-spinner>\r\n</div>\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { RouterModule, Routes } from '@angular/router';\r\nimport { ReminderListComponent } from './reminder-list/reminder-list.component';\r\nimport { AddReminderComponent } from './add-reminder/add-reminder.component';\r\nimport { ReminderDetailResolverService } from './add-reminder/reminder-detail.resolver';\r\nimport { AuthGuard } from '@core/security/auth.guard';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: '',\r\n    component: ReminderListComponent,\r\n    data: { claimType: 'REM_VIEW_REMINDERS' },\r\n    canActivate: [AuthGuard],\r\n  }, {\r\n    path: 'add',\r\n    component: AddReminderComponent,\r\n    data: { claimType: 'REM_ADD_REMINDER' },\r\n    canActivate: [AuthGuard],\r\n  }, {\r\n    path: 'manage/:id',\r\n    resolve: { reminder: ReminderDetailResolverService },\r\n    component: AddReminderComponent,\r\n    data: { claimType: 'REM_UPDATE_REMINDER' },\r\n    canActivate: [AuthGuard],\r\n  }\r\n];\r\n\r\n@NgModule({\r\n  declarations: [],\r\n  imports: [\r\n    CommonModule,\r\n    RouterModule.forChild(routes)\r\n  ], exports: [RouterModule]\r\n})\r\nexport class ReminderRoutingModule { }\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { ReminderListComponent } from './reminder-list/reminder-list.component';\r\nimport { ReminderRoutingModule } from './reminder-routing.module';\r\nimport { AddReminderComponent } from './add-reminder/add-reminder.component';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport { OwlDateTimeModule, OwlNativeDateTimeModule } from 'ng-pick-datetime-ex';\r\nimport { MatCheckboxModule } from '@angular/material/checkbox';\r\nimport { MatSelectModule } from '@angular/material/select';\r\nimport { MatInputModule } from '@angular/material/input';\r\nimport { SharedModule } from '@shared/shared.module';\r\nimport { MatProgressSpinnerModule } from '@angular/material/progress-spinner';\r\nimport { MatDialogModule } from '@angular/material/dialog';\r\nimport { MatSlideToggleModule } from '@angular/material/slide-toggle';\r\nimport { MatMenuModule } from '@angular/material/menu';\r\nimport { MatButtonModule } from '@angular/material/button';\r\nimport { MatCardModule } from '@angular/material/card';\r\nimport { MatPaginatorModule } from '@angular/material/paginator';\r\nimport { MatSortModule } from '@angular/material/sort';\r\nimport { MatTableModule } from '@angular/material/table';\r\nimport { MatButtonToggleModule } from '@angular/material/button-toggle';\r\nimport { MatRadioModule } from '@angular/material/radio';\r\nimport { ReminderDetailResolverService } from './add-reminder/reminder-detail.resolver';\r\nimport { ReminderFrequencyPipe } from './reminder-list/reminder-frequency.pipe';\r\nimport { MatIconModule } from '@angular/material/icon';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    ReminderListComponent,\r\n    AddReminderComponent,\r\n    ReminderFrequencyPipe\r\n  ],\r\n  imports: [\r\n    CommonModule,\r\n    FormsModule,\r\n    ReminderRoutingModule,\r\n    ReactiveFormsModule,\r\n    OwlDateTimeModule,\r\n    OwlNativeDateTimeModule,\r\n    MatProgressSpinnerModule,\r\n    MatCheckboxModule,\r\n    MatDialogModule,\r\n    MatSelectModule,\r\n    MatSlideToggleModule,\r\n    SharedModule,\r\n    MatMenuModule,\r\n    MatButtonModule,\r\n    MatCardModule,\r\n    MatPaginatorModule,\r\n    MatSortModule,\r\n    MatInputModule,\r\n    MatTableModule,\r\n    MatButtonToggleModule,\r\n    MatRadioModule,\r\n    MatIconModule\r\n  ],\r\n  providers: [\r\n    ReminderDetailResolverService\r\n  ]\r\n})\r\nexport class ReminderModule { }\r\n","import { HttpClient, HttpParams, HttpResponse } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { Reminder } from '@core/domain-classes/reminder';\r\nimport { ReminderResourceParameter } from '@core/domain-classes/reminder-resource-parameter';\r\nimport { CommonError } from '@core/error-handler/common-error';\r\nimport { CommonHttpErrorService } from '@core/error-handler/common-http-error.service';\r\nimport { Observable } from 'rxjs';\r\nimport { catchError } from 'rxjs/operators';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class ReminderService {\r\n\r\n  constructor(private httpClient: HttpClient,\r\n    private commonHttpErrorService: CommonHttpErrorService) { }\r\n\r\n\r\n  getReminders(\r\n    resourceParams: ReminderResourceParameter\r\n  ): Observable<HttpResponse<Reminder[]>> {\r\n    const url = 'reminder/GetReminders';\r\n    const customParams = new HttpParams()\r\n      .set('Fields', resourceParams.fields ? resourceParams.fields : '')\r\n      .set('OrderBy', resourceParams.orderBy ? resourceParams.orderBy : '')\r\n      .set('PageSize', resourceParams.pageSize.toString())\r\n      .set('Skip', resourceParams.skip.toString())\r\n      .set('SearchQuery', resourceParams.searchQuery ? resourceParams.searchQuery : '')\r\n      .set('subject', resourceParams.subject ? resourceParams.subject : '')\r\n      .set('message', resourceParams.message ? resourceParams.message : '')\r\n      .set('frequency', resourceParams.frequency ? resourceParams.frequency : '');\r\n\r\n    return this.httpClient.get<Reminder[]>(url, {\r\n      params: customParams,\r\n      observe: 'response',\r\n    });\r\n  }\r\n\r\n  addReminder(reminder: Reminder): Observable<Reminder | CommonError> {\r\n    const url = `reminder`;\r\n    return this.httpClient.post<Reminder>(url, reminder)\r\n      .pipe(catchError(this.commonHttpErrorService.handleError));\r\n  }\r\n\r\n  updateReminder(reminder: Reminder): Observable<Reminder | CommonError> {\r\n    const url = `reminder/${reminder.id}`;\r\n    return this.httpClient.post<Reminder>(url, reminder)\r\n      .pipe(catchError(this.commonHttpErrorService.handleError));\r\n  }\r\n\r\n  getReminder(id: string): Observable<Reminder | CommonError> {\r\n    const url = `reminder/${id}`;\r\n    return this.httpClient.get<Reminder>(url)\r\n      .pipe(catchError(this.commonHttpErrorService.handleError));\r\n  }\r\n\r\n  deleteReminder(id: string): Observable<Reminder | CommonError> {\r\n    const url = `reminder/${id}`;\r\n    return this.httpClient.delete<Reminder>(url)\r\n      .pipe(catchError(this.commonHttpErrorService.handleError));\r\n  }\r\n}\r\n","import { coerceBooleanProperty } from '@angular/cdk/coercion';\nimport { SelectionModel } from '@angular/cdk/collections';\nimport * as i0 from '@angular/core';\nimport { InjectionToken, forwardRef, EventEmitter, Directive, Optional, Inject, ContentChildren, Input, Output, Component, ViewEncapsulation, ChangeDetectionStrategy, Attribute, ViewChild, NgModule } from '@angular/core';\nimport { NG_VALUE_ACCESSOR } from '@angular/forms';\nimport * as i2 from '@angular/material/core';\nimport { mixinDisableRipple, MatCommonModule, MatRippleModule } from '@angular/material/core';\nimport * as i1 from '@angular/cdk/a11y';\n\n/**\n * Injection token that can be used to configure the\n * default options for all button toggles within an app.\n */\nconst MAT_BUTTON_TOGGLE_DEFAULT_OPTIONS = new InjectionToken('MAT_BUTTON_TOGGLE_DEFAULT_OPTIONS');\n/**\n * Injection token that can be used to reference instances of `MatButtonToggleGroup`.\n * It serves as alternative token to the actual `MatButtonToggleGroup` class which\n * could cause unnecessary retention of the class and its component metadata.\n */\nconst MAT_BUTTON_TOGGLE_GROUP = new InjectionToken('MatButtonToggleGroup');\n/**\n * Provider Expression that allows mat-button-toggle-group to register as a ControlValueAccessor.\n * This allows it to support [(ngModel)].\n * @docs-private\n */\nconst MAT_BUTTON_TOGGLE_GROUP_VALUE_ACCESSOR = {\n    provide: NG_VALUE_ACCESSOR,\n    useExisting: forwardRef(() => MatButtonToggleGroup),\n    multi: true,\n};\n// Counter used to generate unique IDs.\nlet uniqueIdCounter = 0;\n/** Change event object emitted by MatButtonToggle. */\nclass MatButtonToggleChange {\n    constructor(\n    /** The MatButtonToggle that emits the event. */\n    source, \n    /** The value assigned to the MatButtonToggle. */\n    value) {\n        this.source = source;\n        this.value = value;\n    }\n}\n/** Exclusive selection button toggle group that behaves like a radio-button group. */\nclass MatButtonToggleGroup {\n    constructor(_changeDetector, defaultOptions) {\n        this._changeDetector = _changeDetector;\n        this._vertical = false;\n        this._multiple = false;\n        this._disabled = false;\n        /**\n         * The method to be called in order to update ngModel.\n         * Now `ngModel` binding is not supported in multiple selection mode.\n         */\n        this._controlValueAccessorChangeFn = () => { };\n        /** onTouch function registered via registerOnTouch (ControlValueAccessor). */\n        this._onTouched = () => { };\n        this._name = `mat-button-toggle-group-${uniqueIdCounter++}`;\n        /**\n         * Event that emits whenever the value of the group changes.\n         * Used to facilitate two-way data binding.\n         * @docs-private\n         */\n        this.valueChange = new EventEmitter();\n        /** Event emitted when the group's value changes. */\n        this.change = new EventEmitter();\n        this.appearance =\n            defaultOptions && defaultOptions.appearance ? defaultOptions.appearance : 'standard';\n    }\n    /** `name` attribute for the underlying `input` element. */\n    get name() {\n        return this._name;\n    }\n    set name(value) {\n        this._name = value;\n        this._markButtonsForCheck();\n    }\n    /** Whether the toggle group is vertical. */\n    get vertical() {\n        return this._vertical;\n    }\n    set vertical(value) {\n        this._vertical = coerceBooleanProperty(value);\n    }\n    /** Value of the toggle group. */\n    get value() {\n        const selected = this._selectionModel ? this._selectionModel.selected : [];\n        if (this.multiple) {\n            return selected.map(toggle => toggle.value);\n        }\n        return selected[0] ? selected[0].value : undefined;\n    }\n    set value(newValue) {\n        this._setSelectionByValue(newValue);\n        this.valueChange.emit(this.value);\n    }\n    /** Selected button toggles in the group. */\n    get selected() {\n        const selected = this._selectionModel ? this._selectionModel.selected : [];\n        return this.multiple ? selected : selected[0] || null;\n    }\n    /** Whether multiple button toggles can be selected. */\n    get multiple() {\n        return this._multiple;\n    }\n    set multiple(value) {\n        this._multiple = coerceBooleanProperty(value);\n        this._markButtonsForCheck();\n    }\n    /** Whether multiple button toggle group is disabled. */\n    get disabled() {\n        return this._disabled;\n    }\n    set disabled(value) {\n        this._disabled = coerceBooleanProperty(value);\n        this._markButtonsForCheck();\n    }\n    ngOnInit() {\n        this._selectionModel = new SelectionModel(this.multiple, undefined, false);\n    }\n    ngAfterContentInit() {\n        this._selectionModel.select(...this._buttonToggles.filter(toggle => toggle.checked));\n    }\n    /**\n     * Sets the model value. Implemented as part of ControlValueAccessor.\n     * @param value Value to be set to the model.\n     */\n    writeValue(value) {\n        this.value = value;\n        this._changeDetector.markForCheck();\n    }\n    // Implemented as part of ControlValueAccessor.\n    registerOnChange(fn) {\n        this._controlValueAccessorChangeFn = fn;\n    }\n    // Implemented as part of ControlValueAccessor.\n    registerOnTouched(fn) {\n        this._onTouched = fn;\n    }\n    // Implemented as part of ControlValueAccessor.\n    setDisabledState(isDisabled) {\n        this.disabled = isDisabled;\n    }\n    /** Dispatch change event with current selection and group value. */\n    _emitChangeEvent(toggle) {\n        const event = new MatButtonToggleChange(toggle, this.value);\n        this._controlValueAccessorChangeFn(event.value);\n        this.change.emit(event);\n    }\n    /**\n     * Syncs a button toggle's selected state with the model value.\n     * @param toggle Toggle to be synced.\n     * @param select Whether the toggle should be selected.\n     * @param isUserInput Whether the change was a result of a user interaction.\n     * @param deferEvents Whether to defer emitting the change events.\n     */\n    _syncButtonToggle(toggle, select, isUserInput = false, deferEvents = false) {\n        // Deselect the currently-selected toggle, if we're in single-selection\n        // mode and the button being toggled isn't selected at the moment.\n        if (!this.multiple && this.selected && !toggle.checked) {\n            this.selected.checked = false;\n        }\n        if (this._selectionModel) {\n            if (select) {\n                this._selectionModel.select(toggle);\n            }\n            else {\n                this._selectionModel.deselect(toggle);\n            }\n        }\n        else {\n            deferEvents = true;\n        }\n        // We need to defer in some cases in order to avoid \"changed after checked errors\", however\n        // the side-effect is that we may end up updating the model value out of sequence in others\n        // The `deferEvents` flag allows us to decide whether to do it on a case-by-case basis.\n        if (deferEvents) {\n            Promise.resolve().then(() => this._updateModelValue(toggle, isUserInput));\n        }\n        else {\n            this._updateModelValue(toggle, isUserInput);\n        }\n    }\n    /** Checks whether a button toggle is selected. */\n    _isSelected(toggle) {\n        return this._selectionModel && this._selectionModel.isSelected(toggle);\n    }\n    /** Determines whether a button toggle should be checked on init. */\n    _isPrechecked(toggle) {\n        if (typeof this._rawValue === 'undefined') {\n            return false;\n        }\n        if (this.multiple && Array.isArray(this._rawValue)) {\n            return this._rawValue.some(value => toggle.value != null && value === toggle.value);\n        }\n        return toggle.value === this._rawValue;\n    }\n    /** Updates the selection state of the toggles in the group based on a value. */\n    _setSelectionByValue(value) {\n        this._rawValue = value;\n        if (!this._buttonToggles) {\n            return;\n        }\n        if (this.multiple && value) {\n            if (!Array.isArray(value) && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n                throw Error('Value must be an array in multiple-selection mode.');\n            }\n            this._clearSelection();\n            value.forEach((currentValue) => this._selectValue(currentValue));\n        }\n        else {\n            this._clearSelection();\n            this._selectValue(value);\n        }\n    }\n    /** Clears the selected toggles. */\n    _clearSelection() {\n        this._selectionModel.clear();\n        this._buttonToggles.forEach(toggle => (toggle.checked = false));\n    }\n    /** Selects a value if there's a toggle that corresponds to it. */\n    _selectValue(value) {\n        const correspondingOption = this._buttonToggles.find(toggle => {\n            return toggle.value != null && toggle.value === value;\n        });\n        if (correspondingOption) {\n            correspondingOption.checked = true;\n            this._selectionModel.select(correspondingOption);\n        }\n    }\n    /** Syncs up the group's value with the model and emits the change event. */\n    _updateModelValue(toggle, isUserInput) {\n        // Only emit the change event for user input.\n        if (isUserInput) {\n            this._emitChangeEvent(toggle);\n        }\n        // Note: we emit this one no matter whether it was a user interaction, because\n        // it is used by Angular to sync up the two-way data binding.\n        this.valueChange.emit(this.value);\n    }\n    /** Marks all of the child button toggles to be checked. */\n    _markButtonsForCheck() {\n        var _a;\n        (_a = this._buttonToggles) === null || _a === void 0 ? void 0 : _a.forEach(toggle => toggle._markForCheck());\n    }\n}\nMatButtonToggleGroup.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"14.2.0\", ngImport: i0, type: MatButtonToggleGroup, deps: [{ token: i0.ChangeDetectorRef }, { token: MAT_BUTTON_TOGGLE_DEFAULT_OPTIONS, optional: true }], target: i0.ɵɵFactoryTarget.Directive });\nMatButtonToggleGroup.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"14.2.0\", type: MatButtonToggleGroup, selector: \"mat-button-toggle-group\", inputs: { appearance: \"appearance\", name: \"name\", vertical: \"vertical\", value: \"value\", multiple: \"multiple\", disabled: \"disabled\" }, outputs: { valueChange: \"valueChange\", change: \"change\" }, host: { attributes: { \"role\": \"group\" }, properties: { \"attr.aria-disabled\": \"disabled\", \"class.mat-button-toggle-vertical\": \"vertical\", \"class.mat-button-toggle-group-appearance-standard\": \"appearance === \\\"standard\\\"\" }, classAttribute: \"mat-button-toggle-group\" }, providers: [\n        MAT_BUTTON_TOGGLE_GROUP_VALUE_ACCESSOR,\n        { provide: MAT_BUTTON_TOGGLE_GROUP, useExisting: MatButtonToggleGroup },\n    ], queries: [{ propertyName: \"_buttonToggles\", predicate: i0.forwardRef(function () { return MatButtonToggle; }), descendants: true }], exportAs: [\"matButtonToggleGroup\"], ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"14.2.0\", ngImport: i0, type: MatButtonToggleGroup, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: 'mat-button-toggle-group',\n                    providers: [\n                        MAT_BUTTON_TOGGLE_GROUP_VALUE_ACCESSOR,\n                        { provide: MAT_BUTTON_TOGGLE_GROUP, useExisting: MatButtonToggleGroup },\n                    ],\n                    host: {\n                        'role': 'group',\n                        'class': 'mat-button-toggle-group',\n                        '[attr.aria-disabled]': 'disabled',\n                        '[class.mat-button-toggle-vertical]': 'vertical',\n                        '[class.mat-button-toggle-group-appearance-standard]': 'appearance === \"standard\"',\n                    },\n                    exportAs: 'matButtonToggleGroup',\n                }]\n        }], ctorParameters: function () {\n        return [{ type: i0.ChangeDetectorRef }, { type: undefined, decorators: [{\n                        type: Optional\n                    }, {\n                        type: Inject,\n                        args: [MAT_BUTTON_TOGGLE_DEFAULT_OPTIONS]\n                    }] }];\n    }, propDecorators: { _buttonToggles: [{\n                type: ContentChildren,\n                args: [forwardRef(() => MatButtonToggle), {\n                        // Note that this would technically pick up toggles\n                        // from nested groups, but that's not a case that we support.\n                        descendants: true,\n                    }]\n            }], appearance: [{\n                type: Input\n            }], name: [{\n                type: Input\n            }], vertical: [{\n                type: Input\n            }], value: [{\n                type: Input\n            }], valueChange: [{\n                type: Output\n            }], multiple: [{\n                type: Input\n            }], disabled: [{\n                type: Input\n            }], change: [{\n                type: Output\n            }] } });\n// Boilerplate for applying mixins to the MatButtonToggle class.\n/** @docs-private */\nconst _MatButtonToggleBase = mixinDisableRipple(class {\n});\n/** Single button inside of a toggle group. */\nclass MatButtonToggle extends _MatButtonToggleBase {\n    constructor(toggleGroup, _changeDetectorRef, _elementRef, _focusMonitor, defaultTabIndex, defaultOptions) {\n        super();\n        this._changeDetectorRef = _changeDetectorRef;\n        this._elementRef = _elementRef;\n        this._focusMonitor = _focusMonitor;\n        this._checked = false;\n        /**\n         * Users can specify the `aria-labelledby` attribute which will be forwarded to the input element\n         */\n        this.ariaLabelledby = null;\n        this._disabled = false;\n        /** Event emitted when the group value changes. */\n        this.change = new EventEmitter();\n        const parsedTabIndex = Number(defaultTabIndex);\n        this.tabIndex = parsedTabIndex || parsedTabIndex === 0 ? parsedTabIndex : null;\n        this.buttonToggleGroup = toggleGroup;\n        this.appearance =\n            defaultOptions && defaultOptions.appearance ? defaultOptions.appearance : 'standard';\n    }\n    /** Unique ID for the underlying `button` element. */\n    get buttonId() {\n        return `${this.id}-button`;\n    }\n    /** The appearance style of the button. */\n    get appearance() {\n        return this.buttonToggleGroup ? this.buttonToggleGroup.appearance : this._appearance;\n    }\n    set appearance(value) {\n        this._appearance = value;\n    }\n    /** Whether the button is checked. */\n    get checked() {\n        return this.buttonToggleGroup ? this.buttonToggleGroup._isSelected(this) : this._checked;\n    }\n    set checked(value) {\n        const newValue = coerceBooleanProperty(value);\n        if (newValue !== this._checked) {\n            this._checked = newValue;\n            if (this.buttonToggleGroup) {\n                this.buttonToggleGroup._syncButtonToggle(this, this._checked);\n            }\n            this._changeDetectorRef.markForCheck();\n        }\n    }\n    /** Whether the button is disabled. */\n    get disabled() {\n        return this._disabled || (this.buttonToggleGroup && this.buttonToggleGroup.disabled);\n    }\n    set disabled(value) {\n        this._disabled = coerceBooleanProperty(value);\n    }\n    ngOnInit() {\n        const group = this.buttonToggleGroup;\n        this.id = this.id || `mat-button-toggle-${uniqueIdCounter++}`;\n        if (group) {\n            if (group._isPrechecked(this)) {\n                this.checked = true;\n            }\n            else if (group._isSelected(this) !== this._checked) {\n                // As as side effect of the circular dependency between the toggle group and the button,\n                // we may end up in a state where the button is supposed to be checked on init, but it\n                // isn't, because the checked value was assigned too early. This can happen when Ivy\n                // assigns the static input value before the `ngOnInit` has run.\n                group._syncButtonToggle(this, this._checked);\n            }\n        }\n    }\n    ngAfterViewInit() {\n        this._focusMonitor.monitor(this._elementRef, true);\n    }\n    ngOnDestroy() {\n        const group = this.buttonToggleGroup;\n        this._focusMonitor.stopMonitoring(this._elementRef);\n        // Remove the toggle from the selection once it's destroyed. Needs to happen\n        // on the next tick in order to avoid \"changed after checked\" errors.\n        if (group && group._isSelected(this)) {\n            group._syncButtonToggle(this, false, false, true);\n        }\n    }\n    /** Focuses the button. */\n    focus(options) {\n        this._buttonElement.nativeElement.focus(options);\n    }\n    /** Checks the button toggle due to an interaction with the underlying native button. */\n    _onButtonClick() {\n        const newChecked = this._isSingleSelector() ? true : !this._checked;\n        if (newChecked !== this._checked) {\n            this._checked = newChecked;\n            if (this.buttonToggleGroup) {\n                this.buttonToggleGroup._syncButtonToggle(this, this._checked, true);\n                this.buttonToggleGroup._onTouched();\n            }\n        }\n        // Emit a change event when it's the single selector\n        this.change.emit(new MatButtonToggleChange(this, this.value));\n    }\n    /**\n     * Marks the button toggle as needing checking for change detection.\n     * This method is exposed because the parent button toggle group will directly\n     * update bound properties of the radio button.\n     */\n    _markForCheck() {\n        // When the group value changes, the button will not be notified.\n        // Use `markForCheck` to explicit update button toggle's status.\n        this._changeDetectorRef.markForCheck();\n    }\n    /** Gets the name that should be assigned to the inner DOM node. */\n    _getButtonName() {\n        if (this._isSingleSelector()) {\n            return this.buttonToggleGroup.name;\n        }\n        return this.name || null;\n    }\n    /** Whether the toggle is in single selection mode. */\n    _isSingleSelector() {\n        return this.buttonToggleGroup && !this.buttonToggleGroup.multiple;\n    }\n}\nMatButtonToggle.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"14.2.0\", ngImport: i0, type: MatButtonToggle, deps: [{ token: MAT_BUTTON_TOGGLE_GROUP, optional: true }, { token: i0.ChangeDetectorRef }, { token: i0.ElementRef }, { token: i1.FocusMonitor }, { token: 'tabindex', attribute: true }, { token: MAT_BUTTON_TOGGLE_DEFAULT_OPTIONS, optional: true }], target: i0.ɵɵFactoryTarget.Component });\nMatButtonToggle.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"14.2.0\", type: MatButtonToggle, selector: \"mat-button-toggle\", inputs: { disableRipple: \"disableRipple\", ariaLabel: [\"aria-label\", \"ariaLabel\"], ariaLabelledby: [\"aria-labelledby\", \"ariaLabelledby\"], id: \"id\", name: \"name\", value: \"value\", tabIndex: \"tabIndex\", appearance: \"appearance\", checked: \"checked\", disabled: \"disabled\" }, outputs: { change: \"change\" }, host: { attributes: { \"role\": \"presentation\" }, listeners: { \"focus\": \"focus()\" }, properties: { \"class.mat-button-toggle-standalone\": \"!buttonToggleGroup\", \"class.mat-button-toggle-checked\": \"checked\", \"class.mat-button-toggle-disabled\": \"disabled\", \"class.mat-button-toggle-appearance-standard\": \"appearance === \\\"standard\\\"\", \"attr.aria-label\": \"null\", \"attr.aria-labelledby\": \"null\", \"attr.id\": \"id\", \"attr.name\": \"null\" }, classAttribute: \"mat-button-toggle\" }, viewQueries: [{ propertyName: \"_buttonElement\", first: true, predicate: [\"button\"], descendants: true }], exportAs: [\"matButtonToggle\"], usesInheritance: true, ngImport: i0, template: \"<button #button class=\\\"mat-button-toggle-button mat-focus-indicator\\\"\\n        type=\\\"button\\\"\\n        [id]=\\\"buttonId\\\"\\n        [attr.tabindex]=\\\"disabled ? -1 : tabIndex\\\"\\n        [attr.aria-pressed]=\\\"checked\\\"\\n        [disabled]=\\\"disabled || null\\\"\\n        [attr.name]=\\\"_getButtonName()\\\"\\n        [attr.aria-label]=\\\"ariaLabel\\\"\\n        [attr.aria-labelledby]=\\\"ariaLabelledby\\\"\\n        (click)=\\\"_onButtonClick()\\\">\\n  <span class=\\\"mat-button-toggle-label-content\\\">\\n    <ng-content></ng-content>\\n  </span>\\n</button>\\n\\n<span class=\\\"mat-button-toggle-focus-overlay\\\"></span>\\n<span class=\\\"mat-button-toggle-ripple\\\" matRipple\\n     [matRippleTrigger]=\\\"button\\\"\\n     [matRippleDisabled]=\\\"this.disableRipple || this.disabled\\\">\\n</span>\\n\", styles: [\".mat-button-toggle-standalone,.mat-button-toggle-group{position:relative;display:inline-flex;flex-direction:row;white-space:nowrap;overflow:hidden;border-radius:2px;-webkit-tap-highlight-color:rgba(0,0,0,0);transform:translateZ(0)}.cdk-high-contrast-active .mat-button-toggle-standalone,.cdk-high-contrast-active .mat-button-toggle-group{outline:solid 1px}.mat-button-toggle-standalone.mat-button-toggle-appearance-standard,.mat-button-toggle-group-appearance-standard{border-radius:4px}.cdk-high-contrast-active .mat-button-toggle-standalone.mat-button-toggle-appearance-standard,.cdk-high-contrast-active .mat-button-toggle-group-appearance-standard{outline:0}.mat-button-toggle-vertical{flex-direction:column}.mat-button-toggle-vertical .mat-button-toggle-label-content{display:block}.mat-button-toggle{white-space:nowrap;position:relative}.mat-button-toggle .mat-icon svg{vertical-align:top}.mat-button-toggle.cdk-keyboard-focused .mat-button-toggle-focus-overlay{opacity:1}.mat-button-toggle-appearance-standard:not(.mat-button-toggle-disabled):hover .mat-button-toggle-focus-overlay{opacity:.04}.mat-button-toggle-appearance-standard.cdk-keyboard-focused:not(.mat-button-toggle-disabled) .mat-button-toggle-focus-overlay{opacity:.12}@media(hover: none){.mat-button-toggle-appearance-standard:not(.mat-button-toggle-disabled):hover .mat-button-toggle-focus-overlay{display:none}}.mat-button-toggle-label-content{-webkit-user-select:none;user-select:none;display:inline-block;line-height:36px;padding:0 16px;position:relative}.mat-button-toggle-appearance-standard .mat-button-toggle-label-content{padding:0 12px}.mat-button-toggle-label-content>*{vertical-align:middle}.mat-button-toggle-focus-overlay{top:0;left:0;right:0;bottom:0;position:absolute;border-radius:inherit;pointer-events:none;opacity:0}.cdk-high-contrast-active .mat-button-toggle-checked .mat-button-toggle-focus-overlay{border-bottom:solid 36px;opacity:.5;height:0}.cdk-high-contrast-active .mat-button-toggle-checked:hover .mat-button-toggle-focus-overlay{opacity:.6}.cdk-high-contrast-active .mat-button-toggle-checked.mat-button-toggle-appearance-standard .mat-button-toggle-focus-overlay{border-bottom:solid 500px}.mat-button-toggle .mat-button-toggle-ripple{top:0;left:0;right:0;bottom:0;position:absolute;pointer-events:none}.mat-button-toggle-button{border:0;background:none;color:inherit;padding:0;margin:0;font:inherit;outline:none;width:100%;cursor:pointer}.mat-button-toggle-disabled .mat-button-toggle-button{cursor:default}.mat-button-toggle-button::-moz-focus-inner{border:0}\"], dependencies: [{ kind: \"directive\", type: i2.MatRipple, selector: \"[mat-ripple], [matRipple]\", inputs: [\"matRippleColor\", \"matRippleUnbounded\", \"matRippleCentered\", \"matRippleRadius\", \"matRippleAnimation\", \"matRippleDisabled\", \"matRippleTrigger\"], exportAs: [\"matRipple\"] }], changeDetection: i0.ChangeDetectionStrategy.OnPush, encapsulation: i0.ViewEncapsulation.None });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"14.2.0\", ngImport: i0, type: MatButtonToggle, decorators: [{\n            type: Component,\n            args: [{ selector: 'mat-button-toggle', encapsulation: ViewEncapsulation.None, exportAs: 'matButtonToggle', changeDetection: ChangeDetectionStrategy.OnPush, inputs: ['disableRipple'], host: {\n                        '[class.mat-button-toggle-standalone]': '!buttonToggleGroup',\n                        '[class.mat-button-toggle-checked]': 'checked',\n                        '[class.mat-button-toggle-disabled]': 'disabled',\n                        '[class.mat-button-toggle-appearance-standard]': 'appearance === \"standard\"',\n                        'class': 'mat-button-toggle',\n                        '[attr.aria-label]': 'null',\n                        '[attr.aria-labelledby]': 'null',\n                        '[attr.id]': 'id',\n                        '[attr.name]': 'null',\n                        '(focus)': 'focus()',\n                        'role': 'presentation',\n                    }, template: \"<button #button class=\\\"mat-button-toggle-button mat-focus-indicator\\\"\\n        type=\\\"button\\\"\\n        [id]=\\\"buttonId\\\"\\n        [attr.tabindex]=\\\"disabled ? -1 : tabIndex\\\"\\n        [attr.aria-pressed]=\\\"checked\\\"\\n        [disabled]=\\\"disabled || null\\\"\\n        [attr.name]=\\\"_getButtonName()\\\"\\n        [attr.aria-label]=\\\"ariaLabel\\\"\\n        [attr.aria-labelledby]=\\\"ariaLabelledby\\\"\\n        (click)=\\\"_onButtonClick()\\\">\\n  <span class=\\\"mat-button-toggle-label-content\\\">\\n    <ng-content></ng-content>\\n  </span>\\n</button>\\n\\n<span class=\\\"mat-button-toggle-focus-overlay\\\"></span>\\n<span class=\\\"mat-button-toggle-ripple\\\" matRipple\\n     [matRippleTrigger]=\\\"button\\\"\\n     [matRippleDisabled]=\\\"this.disableRipple || this.disabled\\\">\\n</span>\\n\", styles: [\".mat-button-toggle-standalone,.mat-button-toggle-group{position:relative;display:inline-flex;flex-direction:row;white-space:nowrap;overflow:hidden;border-radius:2px;-webkit-tap-highlight-color:rgba(0,0,0,0);transform:translateZ(0)}.cdk-high-contrast-active .mat-button-toggle-standalone,.cdk-high-contrast-active .mat-button-toggle-group{outline:solid 1px}.mat-button-toggle-standalone.mat-button-toggle-appearance-standard,.mat-button-toggle-group-appearance-standard{border-radius:4px}.cdk-high-contrast-active .mat-button-toggle-standalone.mat-button-toggle-appearance-standard,.cdk-high-contrast-active .mat-button-toggle-group-appearance-standard{outline:0}.mat-button-toggle-vertical{flex-direction:column}.mat-button-toggle-vertical .mat-button-toggle-label-content{display:block}.mat-button-toggle{white-space:nowrap;position:relative}.mat-button-toggle .mat-icon svg{vertical-align:top}.mat-button-toggle.cdk-keyboard-focused .mat-button-toggle-focus-overlay{opacity:1}.mat-button-toggle-appearance-standard:not(.mat-button-toggle-disabled):hover .mat-button-toggle-focus-overlay{opacity:.04}.mat-button-toggle-appearance-standard.cdk-keyboard-focused:not(.mat-button-toggle-disabled) .mat-button-toggle-focus-overlay{opacity:.12}@media(hover: none){.mat-button-toggle-appearance-standard:not(.mat-button-toggle-disabled):hover .mat-button-toggle-focus-overlay{display:none}}.mat-button-toggle-label-content{-webkit-user-select:none;user-select:none;display:inline-block;line-height:36px;padding:0 16px;position:relative}.mat-button-toggle-appearance-standard .mat-button-toggle-label-content{padding:0 12px}.mat-button-toggle-label-content>*{vertical-align:middle}.mat-button-toggle-focus-overlay{top:0;left:0;right:0;bottom:0;position:absolute;border-radius:inherit;pointer-events:none;opacity:0}.cdk-high-contrast-active .mat-button-toggle-checked .mat-button-toggle-focus-overlay{border-bottom:solid 36px;opacity:.5;height:0}.cdk-high-contrast-active .mat-button-toggle-checked:hover .mat-button-toggle-focus-overlay{opacity:.6}.cdk-high-contrast-active .mat-button-toggle-checked.mat-button-toggle-appearance-standard .mat-button-toggle-focus-overlay{border-bottom:solid 500px}.mat-button-toggle .mat-button-toggle-ripple{top:0;left:0;right:0;bottom:0;position:absolute;pointer-events:none}.mat-button-toggle-button{border:0;background:none;color:inherit;padding:0;margin:0;font:inherit;outline:none;width:100%;cursor:pointer}.mat-button-toggle-disabled .mat-button-toggle-button{cursor:default}.mat-button-toggle-button::-moz-focus-inner{border:0}\"] }]\n        }], ctorParameters: function () {\n        return [{ type: MatButtonToggleGroup, decorators: [{\n                        type: Optional\n                    }, {\n                        type: Inject,\n                        args: [MAT_BUTTON_TOGGLE_GROUP]\n                    }] }, { type: i0.ChangeDetectorRef }, { type: i0.ElementRef }, { type: i1.FocusMonitor }, { type: undefined, decorators: [{\n                        type: Attribute,\n                        args: ['tabindex']\n                    }] }, { type: undefined, decorators: [{\n                        type: Optional\n                    }, {\n                        type: Inject,\n                        args: [MAT_BUTTON_TOGGLE_DEFAULT_OPTIONS]\n                    }] }];\n    }, propDecorators: { ariaLabel: [{\n                type: Input,\n                args: ['aria-label']\n            }], ariaLabelledby: [{\n                type: Input,\n                args: ['aria-labelledby']\n            }], _buttonElement: [{\n                type: ViewChild,\n                args: ['button']\n            }], id: [{\n                type: Input\n            }], name: [{\n                type: Input\n            }], value: [{\n                type: Input\n            }], tabIndex: [{\n                type: Input\n            }], appearance: [{\n                type: Input\n            }], checked: [{\n                type: Input\n            }], disabled: [{\n                type: Input\n            }], change: [{\n                type: Output\n            }] } });\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nclass MatButtonToggleModule {\n}\nMatButtonToggleModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"14.2.0\", ngImport: i0, type: MatButtonToggleModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });\nMatButtonToggleModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"14.0.0\", version: \"14.2.0\", ngImport: i0, type: MatButtonToggleModule, declarations: [MatButtonToggleGroup, MatButtonToggle], imports: [MatCommonModule, MatRippleModule], exports: [MatCommonModule, MatButtonToggleGroup, MatButtonToggle] });\nMatButtonToggleModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"14.2.0\", ngImport: i0, type: MatButtonToggleModule, imports: [MatCommonModule, MatRippleModule, MatCommonModule] });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"14.2.0\", ngImport: i0, type: MatButtonToggleModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    imports: [MatCommonModule, MatRippleModule],\n                    exports: [MatCommonModule, MatButtonToggleGroup, MatButtonToggle],\n                    declarations: [MatButtonToggleGroup, MatButtonToggle],\n                }]\n        }] });\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { MAT_BUTTON_TOGGLE_DEFAULT_OPTIONS, MAT_BUTTON_TOGGLE_GROUP, MAT_BUTTON_TOGGLE_GROUP_VALUE_ACCESSOR, MatButtonToggle, MatButtonToggleChange, MatButtonToggleGroup, MatButtonToggleModule };\n"],"names":["coerceBooleanProperty","SelectionModel","i0","InjectionToken","forwardRef","EventEmitter","Directive","Optional","Inject","ContentChildren","Input","Output","Component","ViewEncapsulation","ChangeDetectionStrategy","Attribute","ViewChild","NgModule","NG_VALUE_ACCESSOR","i2","mixinDisableRipple","MatCommonModule","MatRippleModule","i1","MAT_BUTTON_TOGGLE_DEFAULT_OPTIONS","MAT_BUTTON_TOGGLE_GROUP","MAT_BUTTON_TOGGLE_GROUP_VALUE_ACCESSOR","provide","useExisting","MatButtonToggleGroup","multi","uniqueIdCounter","MatButtonToggleChange","constructor","source","value","_changeDetector","defaultOptions","_vertical","_multiple","_disabled","_controlValueAccessorChangeFn","_onTouched","_name","valueChange","change","appearance","name","_markButtonsForCheck","vertical","selected","_selectionModel","multiple","map","toggle","undefined","newValue","_setSelectionByValue","emit","disabled","ngOnInit","ngAfterContentInit","select","_buttonToggles","filter","checked","writeValue","markForCheck","registerOnChange","fn","registerOnTouched","setDisabledState","isDisabled","_emitChangeEvent","event","_syncButtonToggle","isUserInput","deferEvents","deselect","Promise","resolve","then","_updateModelValue","_isSelected","isSelected","_isPrechecked","_rawValue","Array","isArray","some","ngDevMode","Error","_clearSelection","forEach","currentValue","_selectValue","clear","correspondingOption","find","_a","_markForCheck","ɵfac","ChangeDetectorRef","ɵdir","MatButtonToggle","type","args","selector","providers","host","exportAs","decorators","descendants","_MatButtonToggleBase","toggleGroup","_changeDetectorRef","_elementRef","_focusMonitor","defaultTabIndex","_checked","ariaLabelledby","parsedTabIndex","Number","tabIndex","buttonToggleGroup","buttonId","id","_appearance","group","ngAfterViewInit","monitor","ngOnDestroy","stopMonitoring","focus","options","_buttonElement","nativeElement","_onButtonClick","newChecked","_isSingleSelector","_getButtonName","ElementRef","FocusMonitor","ɵcmp","MatRipple","encapsulation","None","changeDetection","OnPush","inputs","template","styles","ariaLabel","MatButtonToggleModule","ɵmod","ɵinj","imports","exports","declarations"],"sourceRoot":"webpack:///","x_google_ignoreList":[14]}