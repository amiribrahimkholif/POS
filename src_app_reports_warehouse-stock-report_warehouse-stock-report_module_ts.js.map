{"version":3,"file":"src_app_reports_warehouse-stock-report_warehouse-stock-report_module_ts.js","mappings":"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","sources":["./src/app/reports/warehouse-stock-report/warehouse-product-items/warehouse-product-items.component.ts","./src/app/reports/warehouse-stock-report/warehouse-product-items/warehouse-product-items.component.html","./src/app/reports/warehouse-stock-report/warehouse-stock-report-routing.module.ts","./src/app/reports/warehouse-stock-report/warehouse-stock-report.component.ts","./src/app/reports/warehouse-stock-report/warehouse-stock-report.component.html","./src/app/reports/warehouse-stock-report/warehouse-stock-report.module.ts","./src/app/reports/warehouse-stock-report/warehouse-stock-report.service.ts"],"sourcesContent":["import { Component, Input, OnChanges, OnInit, SimpleChanges } from '@angular/core';\r\nimport { Warehouse } from '@core/domain-classes/warehouse';\r\nimport { WarehouseInventory } from '@core/domain-classes/warehouseInventory';\r\nimport { TranslationService } from '@core/services/translation.service';\r\nimport { BaseComponent } from 'src/app/base.component';\r\nimport { WarehouseStockReportService } from '../warehouse-stock-report.service';\r\n\r\n@Component({\r\n  selector: 'app-warehouse-product-items',\r\n  templateUrl: './warehouse-product-items.component.html',\r\n  styleUrls: ['./warehouse-product-items.component.scss']\r\n})\r\nexport class WarehouseProductItemsComponent  extends BaseComponent implements  OnInit, OnChanges {\r\n  @Input() warehouse: Warehouse;\r\n  warehouseInventory: WarehouseInventory[] = [];\r\n  isLoading = false;\r\n  displayedColumns: string[] = ['productName','stock'];\r\n\r\n  constructor(private warehouseStockReportService: WarehouseStockReportService,public translationService:TranslationService) {\r\n    super(translationService);\r\n    this.getLangDir();\r\n   }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n  ngOnChanges(changes: SimpleChanges): void {\r\n    if (changes['warehouse']) {\r\n      this.getWarehouseProduct();\r\n    }\r\n  }\r\n\r\n  getWarehouseProduct() {\r\n    this.isLoading = true;\r\n    this.warehouseStockReportService.getWarehouseProduct(this.warehouse.id)\r\n      .subscribe((data: WarehouseInventory[]) => {\r\n        this.isLoading = false;\r\n        this.warehouseInventory = data;\r\n      }, () => this.isLoading = false)\r\n  }\r\n\r\n}\r\n","<div class=\"page-header-main\">\r\n  <div class=\"row align-items-center\">\r\n      <div class=\"col-md-auto col-sm-auto\">\r\n          <div class=\"content-header\">\r\n              <h1>{{\"PRODUCT_ITEMS\" | translate}}</h1>\r\n          </div>\r\n      </div>\r\n  </div>\r\n</div>\r\n<div class=\"loading-shade\" *ngIf=\"isLoading\">\r\n  <mat-spinner></mat-spinner>\r\n</div>\r\n\r\n<div class=\"table-responsive\">\r\n  <table [dir]=\"langDir\" mat-table [dataSource]=\"warehouseInventory\" class=\"table table-bordered table-hover\">\r\n      <ng-container matColumnDef=\"productName\">\r\n          <th mat-header-cell *matHeaderCellDef>{{\"PRODUCT_NAME\" | translate}}</th>\r\n          <td mat-cell *matCellDef=\"let element\">\r\n              {{element.productName}}\r\n          </td>\r\n      </ng-container>\r\n      <ng-container matColumnDef=\"stock\">\r\n          <th mat-header-cell *matHeaderCellDef>  {{\"STOCK\" | translate}} </th>\r\n          <td mat-cell *matCellDef=\"let element\">\r\n              {{element.stock}}({{(element.unitCode)}})\r\n          </td>\r\n      </ng-container>\r\n      <tr mat-header-row *matHeaderRowDef=\"displayedColumns;sticky: true\"></tr>\r\n      <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\" [class.bg-warning1]=\"row.status===1\"></tr>\r\n  </table>\r\n</div>\r\n","import { NgModule } from '@angular/core';\r\nimport { RouterModule, Routes } from '@angular/router';\r\nimport { AuthGuard } from '@core/security/auth.guard';\r\nimport { WarehouseStockReportComponent } from './warehouse-stock-report.component';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: '',\r\n    component: WarehouseStockReportComponent,\r\n    data: { claimType: 'REP_VIEW_WAR_REP' },\r\n    canActivate: [AuthGuard],\r\n  },\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule],\r\n})\r\nexport class WarehouseStockReportRoutingModule {}\r\n","import {animate,state,style, transition, trigger} from '@angular/animations';\r\nimport { ChangeDetectorRef, Component, OnInit } from '@angular/core';\r\nimport { SalesOrder } from '@core/domain-classes/sales-order';\r\nimport { TranslationService } from '@core/services/translation.service';\r\nimport { BaseComponent } from 'src/app/base.component';\r\nimport { PaymentStatusPipe } from '@shared/pipes/purchase-order-paymentStatus.pipe';\r\nimport { UTCToLocalTime } from '@shared/pipes/utc-to-localtime.pipe';\r\nimport { CustomCurrencyPipe } from '@shared/pipes/custome-currency.pipe';\r\nimport { WarehouseStockReportService } from './warehouse-stock-report.service';\r\nimport { Warehouse } from '@core/domain-classes/warehouse';\r\n\r\n@Component({\r\n  selector: 'app-warehouse-stock-report',\r\n  templateUrl: './warehouse-stock-report.component.html',\r\n  styleUrls: ['./warehouse-stock-report.component.scss'],\r\n  animations: [\r\n    trigger('detailExpand', [\r\n      state('collapsed', style({ height: '0px', minHeight: '0' })),\r\n      state('expanded', style({ height: '*' })),\r\n      transition(\r\n        'expanded <=> collapsed',\r\n        animate('225ms cubic-bezier(0.4, 0.0, 0.2, 1)')\r\n      ),\r\n    ]),\r\n  ],\r\n  providers: [UTCToLocalTime, CustomCurrencyPipe, PaymentStatusPipe],\r\n})\r\nexport class WarehouseStockReportComponent extends BaseComponent implements OnInit{\r\n  displayedColumns: string[] = ['action', 'name', 'contactPerson','mobileNumber','email'];\r\n  expandedElement: SalesOrder | null;\r\n  waehouseList: Warehouse[] = [];\r\n\r\n  constructor(\r\n    private cd: ChangeDetectorRef,\r\n    public translationService: TranslationService,\r\n    private warehouseStockReportService: WarehouseStockReportService,\r\n  ) {\r\n    super(translationService);\r\n    this.getLangDir();\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.getWarehouse();\r\n  }\r\n\r\n  getWarehouse() {\r\n    return this.warehouseStockReportService.getWarehouses().subscribe(\r\n      (resp) => {\r\n        if (resp) {\r\n          this.waehouseList = resp;\r\n        }\r\n      },\r\n      (err) => {}\r\n    );\r\n  }\r\n\r\n  toggleRow(element: SalesOrder) {\r\n    this.expandedElement = this.expandedElement === element ? null : element;\r\n    this.cd.detectChanges();\r\n  }\r\n}\r\n","<div class=\"page-header-main\">\r\n  <div class=\"row align-items-center justify-content-between\">\r\n    <div class=\"col-md-auto col-sm-auto\">\r\n      <div class=\"content-header\">\r\n        <h1>{{'WAREHOUSE_REPORT' | translate}}</h1>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</div>\r\n<!-- <div class=\"loading-shade\" *ngIf=\"waehouseList.length < 0\">\r\n  <mat-spinner></mat-spinner>\r\n</div> -->\r\n<div class=\"row\">\r\n  <div class=\"col-sm-12\">\r\n    <div class=\"table-responsive\">\r\n      <table [dir]=\"langDir\" mat-table [dataSource]=\"waehouseList\" multiTemplateDataRows\r\n        class=\"table table-bordered table-hover grid-height\" matSort matSortActive=\"soCreatedDate\">\r\n        <ng-container matColumnDef=\"action\">\r\n          <th class=\"table-column-100\" mat-header-cell *matHeaderCellDef>\r\n          </th>\r\n          <td class=\"table-column-100\" mat-cell *matCellDef=\"let so\">\r\n            <button mat-icon-button (click)=\"toggleRow(so)\">\r\n              <mat-icon *ngIf=\"so != expandedElement\">chevron_right</mat-icon>\r\n              <mat-icon *ngIf=\"so == expandedElement\">expand_more</mat-icon>\r\n            </button>\r\n          </td>\r\n        </ng-container>\r\n\r\n        <ng-container matColumnDef=\"name\">\r\n          <th class=\"table-column-300\" mat-header-cell  *matHeaderCellDef> {{'NAME' | translate}} </th>\r\n          <td class=\"table-column-300\" mat-cell *matCellDef=\"let so\">{{so.name}}</td>\r\n        </ng-container>\r\n        <ng-container matColumnDef=\"contactPerson\">\r\n          <th class=\"table-column-200\" mat-header-cell  *matHeaderCellDef> {{'CONTACT_PERSON' |\r\n            translate}} </th>\r\n          <td class=\"table-column-200\" mat-cell *matCellDef=\"let so\">{{so.contactPerson}}</td>\r\n        </ng-container>\r\n        <ng-container matColumnDef=\"mobileNumber\">\r\n          <th mat-header-cell *matHeaderCellDef> {{\"MOBILE_NUMBER\" | translate}} </th>\r\n          <td mat-cell *matCellDef=\"let element\"> {{element.mobileNumber}} </td>\r\n        </ng-container>\r\n        <ng-container matColumnDef=\"email\">\r\n          <th mat-header-cell *matHeaderCellDef> {{\"EMAIL\" | translate}} </th>\r\n          <td mat-cell *matCellDef=\"let element\"> {{element.email}} </td>\r\n        </ng-container>\r\n        <ng-container matColumnDef=\"expandedDetail\">\r\n          <td mat-cell *matCellDef=\"let soObject\" [attr.colspan]=\"displayedColumns.length\">\r\n            <ng-container *ngIf=\"soObject == expandedElement\">\r\n              <div class=\"example-element-detail\"\r\n                [@detailExpand]=\"soObject == expandedElement ? 'expanded' : 'collapsed'\">\r\n                <div class=\"inner-table mat-elevation-z8\">\r\n                  <app-warehouse-product-items [warehouse]=\"soObject\">\r\n                  </app-warehouse-product-items>\r\n                </div>\r\n              </div>\r\n            </ng-container>\r\n          </td>\r\n        </ng-container>\r\n        <tr *matNoDataRow>\r\n          <td colspan=\"9\">\r\n            <span class=\"p-4 mt-4\">\r\n              <b> {{'NO_DATA_FOUND' | translate}}</b>\r\n            </span>\r\n          </td>\r\n        </tr>\r\n        <tr mat-header-row *matHeaderRowDef=\"displayedColumns;sticky: true\"></tr>\r\n        <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\" [class.bg-warning1]=\"row.status===1\"></tr>\r\n        <tr mat-row *matRowDef=\"let row; columns: ['expandedDetail']\" class=\"example-detail-row\"></tr>\r\n      </table>\r\n    </div>\r\n  </div>\r\n</div>\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { WarehouseStockReportComponent } from './warehouse-stock-report.component';\r\nimport { WarehouseStockReportRoutingModule } from './warehouse-stock-report-routing.module';\r\nimport { WarehouseProductItemsComponent } from './warehouse-product-items/warehouse-product-items.component';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { MatButtonModule } from '@angular/material/button';\r\nimport { MatIconModule } from '@angular/material/icon';\r\nimport { MatProgressSpinnerModule } from '@angular/material/progress-spinner';\r\nimport { MatSortModule } from '@angular/material/sort';\r\nimport { MatTableModule } from '@angular/material/table';\r\nimport { SharedModule } from '@shared/shared.module';\r\n\r\n\r\n\r\n@NgModule({\r\n  declarations: [\r\n    WarehouseStockReportComponent,\r\n    WarehouseProductItemsComponent\r\n  ],\r\n  imports: [\r\n    CommonModule,\r\n    WarehouseStockReportRoutingModule,\r\n    FormsModule,\r\n    SharedModule,\r\n    MatTableModule,\r\n    MatSortModule,\r\n    MatIconModule,\r\n    MatButtonModule,\r\n    MatProgressSpinnerModule,\r\n  ]\r\n})\r\nexport class WarehouseStockReportModule { }\r\n","import { HttpClient, HttpResponse } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { Warehouse } from '@core/domain-classes/warehouse';\r\nimport { WarehouseInventory } from '@core/domain-classes/warehouseInventory';\r\nimport { Observable } from 'rxjs';\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class WarehouseStockReportService {\r\n  constructor(private http: HttpClient) {}\r\n\r\n  getWarehouses(): Observable<Warehouse[]> {\r\n    const url = 'warehouses';\r\n    return this.http.get<Warehouse[]>(url);\r\n  }\r\n\r\n  getWarehouseProduct(warehouseId: string): Observable<WarehouseInventory[]> {\r\n    const url = `warehouse/${warehouseId}/items`;\r\n    return this.http.get<WarehouseInventory[]>(url);\r\n  }\r\n\r\n}\r\n"],"names":[],"sourceRoot":"webpack:///","x_google_ignoreList":[]}