{"version":3,"file":"src_app_city_city_module_ts.js","mappings":"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","sources":["./src/app/city/city-list/city-datasource.ts","./src/app/city/city-list/city-list.component.ts","./src/app/city/city-list/city-list.component.html","./src/app/city/city-routing.module.ts","./src/app/city/city.module.ts","./src/app/city/city.service.ts","./src/app/city/manage-city/manage-city.component.ts","./src/app/city/manage-city/manage-city.component.html","./src/app/core/domain-classes/city-resource-parameter.ts"],"sourcesContent":["import { DataSource } from '@angular/cdk/table';\r\nimport { HttpResponse } from '@angular/common/http';\r\nimport { City } from '@core/domain-classes/city';\r\nimport { CityResourceParameter } from '@core/domain-classes/city-resource-parameter';\r\nimport { ResponseHeader } from '@core/domain-classes/response-header';\r\nimport { BehaviorSubject, Observable, of, Subscription } from 'rxjs';\r\nimport { catchError, finalize } from 'rxjs/operators';\r\nimport { CityService } from '../city.service';\r\n\r\nexport class CityDataSource implements DataSource<City> {\r\n  private _entities$ = new BehaviorSubject<City[]>([]);\r\n  private _responseHeaderSubject$ = new BehaviorSubject<ResponseHeader>(null);\r\n  private loadingSubject$ = new BehaviorSubject<boolean>(false);\r\n\r\n  public loading$ = this.loadingSubject$.asObservable();\r\n  private _count: number = 0;\r\n  sub$: Subscription;\r\n\r\n  public get count(): number {\r\n    return this._count;\r\n  }\r\n  public responseHeaderSubject$ = this._responseHeaderSubject$.asObservable();\r\n\r\n  constructor(private cityService: CityService) {\r\n    this.sub$ = new Subscription();\r\n  }\r\n\r\n  connect(): Observable<City[]> {\r\n    return this._entities$.asObservable();\r\n  }\r\n\r\n  disconnect(): void {\r\n    this._entities$.complete();\r\n    this.loadingSubject$.complete();\r\n    this.sub$.unsubscribe();\r\n  }\r\n\r\n  loadData(cityResource: CityResourceParameter) {\r\n    this.loadingSubject$.next(true);\r\n    this.sub$ = this.cityService.getCities(cityResource)\r\n      .pipe(\r\n        catchError(() => of([])),\r\n        finalize(() => this.loadingSubject$.next(false)))\r\n      .subscribe((resp: HttpResponse<City[]>) => {\r\n        let paginationParam = new ResponseHeader();\r\n        if (resp && resp.headers.get('X-Pagination')) {\r\n          paginationParam = JSON.parse(\r\n            resp.headers.get('X-Pagination')\r\n          ) as ResponseHeader;\r\n        }\r\n        this._responseHeaderSubject$.next(paginationParam);\r\n        const entities = [...resp.body];\r\n        this._count = entities.length;\r\n        this._entities$.next(entities);\r\n      });\r\n  }\r\n}\r\n","import { Component, OnInit, ViewChild } from '@angular/core';\r\nimport { UntypedFormControl } from '@angular/forms';\r\nimport { MatDialog } from '@angular/material/dialog';\r\nimport { MatPaginator } from '@angular/material/paginator';\r\nimport { MatSort } from '@angular/material/sort';\r\nimport { Router } from '@angular/router';\r\nimport { CommonDialogService } from '@core/common-dialog/common-dialog.service';\r\nimport { City } from '@core/domain-classes/city';\r\nimport { CityResourceParameter } from '@core/domain-classes/city-resource-parameter';\r\nimport { Country } from '@core/domain-classes/country';\r\nimport { ResponseHeader } from '@core/domain-classes/response-header';\r\nimport { CommonService } from '@core/services/common.service';\r\nimport { TranslationService } from '@core/services/translation.service';\r\nimport { ToastrService } from 'ngx-toastr';\r\nimport { merge, Observable, Subject } from 'rxjs';\r\nimport { debounceTime, distinctUntilChanged, map, startWith, tap } from 'rxjs/operators';\r\nimport { BaseComponent } from 'src/app/base.component';\r\nimport { CityService } from '../city.service';\r\nimport { ManageCityComponent } from '../manage-city/manage-city.component';\r\nimport { CityDataSource } from './city-datasource';\r\n\r\n@Component({\r\n  selector: 'app-city-list',\r\n  templateUrl: './city-list.component.html',\r\n  styleUrls: ['./city-list.component.scss'],\r\n})\r\n\r\nexport class CityListComponent extends BaseComponent implements OnInit {\r\n  dataSource: CityDataSource;\r\n  cities: City[] = [];\r\n  displayedColumns: string[] = ['action', 'cityName', 'countryName'];\r\n  columnsToDisplay: string[] = [\"footer\"];\r\n  countryList: Country[] = [];\r\n  filteredCountryList: Observable<Country[]>;\r\n  countryControl = new UntypedFormControl();\r\n  cityResource: CityResourceParameter;\r\n  loading$: Observable<boolean>;\r\n  @ViewChild(MatPaginator) paginator: MatPaginator;\r\n  @ViewChild(MatSort) sort: MatSort;\r\n  _nameFilter: string;\r\n  _countrynameFilter: string;\r\n  _countryFilter: string;\r\n  public filterObservable$: Subject<string> = new Subject<string>();\r\n\r\n  public get NameFilter(): string {\r\n    return this._nameFilter;\r\n  }\r\n\r\n  public set NameFilter(v: string) {\r\n    this._nameFilter = v;\r\n    const nameFilter = `cityName##${v}`;\r\n    this.filterObservable$.next(nameFilter);\r\n  }\r\n\r\n  public get CountryNameFilter(): string {\r\n    return this._countrynameFilter;\r\n  }\r\n\r\n  public set CountryNameFilter(v: string) {\r\n    this._countrynameFilter = v;\r\n    const countrynameFilter = `countryName##${v}`;\r\n    this.filterObservable$.next(countrynameFilter);\r\n  }\r\n  public get CountryFilter(): string {\r\n    return this._countryFilter;\r\n  }\r\n\r\n  public set CountryFilter(v: string) {\r\n    this._countryFilter = v;\r\n    const countryFilter = `country##${v}`;\r\n    this.filterObservable$.next(countryFilter);\r\n  }\r\n\r\n  constructor(private cityService: CityService,\r\n    private toastrService: ToastrService,\r\n    private commonDialogService: CommonDialogService,\r\n    private router: Router,\r\n    public translationService: TranslationService,\r\n    private dialog: MatDialog,\r\n    private commonService: CommonService\r\n  ) {\r\n    super(translationService);\r\n    this.getLangDir();\r\n    this.cityResource = new CityResourceParameter();\r\n    this.cityResource.pageSize = 10;\r\n    this.cityResource.orderBy = 'cityName asc'\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.dataSource = new CityDataSource(this.cityService);\r\n    this.dataSource.loadData(this.cityResource);\r\n    this.getResourceParameter();\r\n    this.getCountries();\r\n    this.sub$.sink = this.filterObservable$\r\n      .pipe(\r\n        debounceTime(1000),\r\n        distinctUntilChanged())\r\n      .subscribe((c) => {\r\n        this.cityResource.skip = 0;\r\n        this.paginator.pageIndex = 0;\r\n        const strArray: Array<string> = c.split('##');\r\n        if (strArray[0] === 'cityName') {\r\n          this.cityResource.cityName = strArray[1];\r\n\r\n        } else if (strArray[0] === 'country') {\r\n          this.cityResource.countryName = strArray[1];\r\n        }\r\n        this.dataSource.loadData(this.cityResource);\r\n      });\r\n    this.filteredCountryList = this.countryControl.valueChanges.pipe(\r\n      startWith(''),\r\n      map(value => this._filterCountry(value)),\r\n    );\r\n  }\r\n\r\n  private _filterCountry(value: string): Country[] {\r\n    const filterValue = value.toLowerCase();\r\n    return this.countryList.filter(option => option.countryName.toLowerCase().includes(filterValue));\r\n  }\r\n\r\n  ngAfterViewInit() {\r\n    this.sort.sortChange.subscribe(() => this.paginator.pageIndex = 0);\r\n    this.sub$.sink = merge(this.sort.sortChange, this.paginator.page)\r\n      .pipe(\r\n        tap(() => {\r\n          this.cityResource.skip = this.paginator.pageIndex * this.paginator.pageSize;\r\n          this.cityResource.pageSize = this.paginator.pageSize;\r\n          this.cityResource.orderBy = this.sort.active + ' ' + this.sort.direction;\r\n          this.dataSource.loadData(this.cityResource);\r\n        })\r\n      )\r\n      .subscribe();\r\n  }\r\n\r\n  getCountries() {\r\n    this.sub$.sink = this.commonService.getCountry().subscribe(c => this.countryList = c);\r\n  }\r\n\r\n  deleteCity(city: City) {\r\n    this.sub$.sink = this.commonDialogService\r\n      .deleteConformationDialog(`${this.translationService.getValue('ARE_YOU_SURE_YOU_WANT_TO_DELETE')} ${city.cityName}`)\r\n      .subscribe((isTrue: boolean) => {\r\n        if (isTrue) {\r\n          this.sub$.sink = this.cityService.deleteCity(city.id)\r\n            .subscribe(() => {\r\n              this.toastrService.success(this.translationService.getValue('CITY_IS_DELETED.'));\r\n              this.paginator.pageIndex = 0;\r\n              this.dataSource.loadData(this.cityResource);\r\n            });\r\n        }\r\n      });\r\n  }\r\n\r\n  getResourceParameter() {\r\n    this.sub$.sink = this.dataSource.responseHeaderSubject$\r\n      .subscribe((c: ResponseHeader) => {\r\n        if (c) {\r\n          this.cityResource.pageSize = c.pageSize;\r\n          this.cityResource.skip = c.skip;\r\n          this.cityResource.totalCount = c.totalCount;\r\n        }\r\n      });\r\n  }\r\n\r\n  manageCity(city: City): void {\r\n    let dialogRef = this.dialog.open(ManageCityComponent, {\r\n      width: '350px',\r\n      direction:this.langDir,\r\n      data: Object.assign({}, city)\r\n    });\r\n    dialogRef.afterClosed().subscribe(data => {\r\n      if (data) {\r\n        this.dataSource.loadData(this.cityResource);\r\n      }\r\n    })\r\n  }\r\n}\r\n","<div class=\"page-header-main\">\r\n    <div class=\"row align-items-center justify-content-between\">\r\n        <div class=\"col-md-auto col-sm-auto col\">\r\n            <div class=\"content-header\">\r\n            <h1> {{\"CITIES\" | translate}} </h1>\r\n            </div>\r\n        </div>\r\n        <div *hasClaim=\"'SETT_MANAGE_CITY'\" class=\"col-md-auto col-sm-auto col-auto\">\r\n            <button class=\"btn blue-btn btn-sm m-right-10\"  (click)=\"manageCity({})\">\r\n                <i class=\"fas fa-plus\"></i> {{\"ADD_CITY\" | translate}}\r\n            </button>\r\n        </div>\r\n    </div>\r\n</div>\r\n<div class=\"table-responsive\">\r\n    <table class=\"table table-bordered table-hover\" [dir]=\"langDir\" mat-table [dataSource]=\"dataSource\" multiTemplateDataRows matSort\r\n        matSortActive=\"cityName\">\r\n        <ng-container matColumnDef=\"action\" sticky>\r\n            <th class=\"table-column-200\" mat-header-cell *matHeaderCellDef> {{\"ACTION\" | translate}} </th>\r\n            <td class=\"table-column-200\" mat-cell *matCellDef=\"let element\">\r\n                <button *hasClaim=\"'SETT_MANAGE_CITY'\" (click)=\"manageCity(element)\" class=\"btn btn-success btn-sm m-right-10\" type=\"button\">\r\n                    <i class=\"fas fa-pencil-alt\"></i>\r\n                    <span class=\"d-none d-sm-inline\"> {{\"EDIT\" | translate}}</span>\r\n                </button>\r\n                <button *hasClaim=\"'SETT_MANAGE_CITY'\" (click)=\"deleteCity(element)\" class=\"btn btn-danger btn-sm\" type=\"button\">\r\n                    <i class=\"fas fa-trash-alt\"></i>\r\n                    <span class=\"d-none d-sm-inline\"> {{\"DELETE\" | translate}}</span>\r\n                </button>\r\n            </td>\r\n        </ng-container>\r\n        <ng-container matColumnDef=\"cityName\" sticky>\r\n            <th class=\"table-column-300\" mat-header-cell *matHeaderCellDef mat-sort-header> {{'CITY' | translate}} </th>\r\n            <td class=\"table-column-300\" mat-cell *matCellDef=\"let city\"> {{city.cityName}} </td>\r\n        </ng-container>\r\n        <ng-container matColumnDef=\"countryName\">\r\n            <th class=\"table-column-150\" mat-header-cell mat-sort-header *matHeaderCellDef> {{'COUNTRY' | translate}}\r\n            </th>\r\n            <td class=\"table-column-150\" mat-cell *matCellDef=\"let city\"> {{city.countryName}} </td>\r\n        </ng-container>\r\n\r\n        <ng-container matColumnDef=\"action-search\" sticky>\r\n            <th class=\"pr-5\" mat-header-cell *matHeaderCellDef> </th>\r\n        </ng-container>\r\n        <ng-container matColumnDef=\"cityName-search\" sticky>\r\n            <th mat-header-cell *matHeaderCellDef>\r\n                <input placeholder=\"{{'CITY' | translate}}\" type=\"text\" class=\"form-control\" [(ngModel)]=\"NameFilter\">\r\n            </th>\r\n        </ng-container>\r\n        <ng-container matColumnDef=\"country-search\">\r\n            <th mat-header-cell *matHeaderCellDef>\r\n                <input type=\"text\" placeholder=\"{{'COUNTRY' | translate}}\" class=\"form-control\" [formControl]=\"countryControl\" [matAutocomplete]=\"auto\">\r\n                <mat-autocomplete [dir]=\"langDir\"  [autoActiveFirstOption]=\"true\" (optionSelected)='CountryFilter = $event.option.value'\r\n                    #auto=\"matAutocomplete\">\r\n                    <mat-option value=\"\">{{'NONE' | translate}}</mat-option>\r\n                    <mat-option *ngFor=\"let cont of filteredCountryList | async\" [value]=\"cont.countryName\">\r\n                        {{cont.countryName}}\r\n                    </mat-option>\r\n                </mat-autocomplete>\r\n            </th>\r\n        </ng-container>\r\n        <ng-container matColumnDef=\"footer\">\r\n            <td mat-footer-cell colspan=\"8\" *matFooterCellDef >\r\n                <mat-paginator [length]=\"cityResource.totalCount\" [pageSize]=\"cityResource.pageSize\"\r\n                    [pageSizeOptions]=\"[10, 20, 30]\">\r\n                </mat-paginator>\r\n            </td>\r\n        </ng-container>\r\n        <tr *matNoDataRow>\r\n          <td colspan=\"9\">\r\n              <span class=\"p-4 mt-4\">\r\n                  <b> {{'NO_DATA_FOUND' | translate}}</b>\r\n              </span>\r\n          </td>\r\n      </tr>\r\n        <tr mat-header-row *matHeaderRowDef=\"displayedColumns;sticky: true\"></tr>\r\n        <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\"></tr>\r\n        <tr mat-header-row *matHeaderRowDef=\"['action-search','cityName-search','country-search'];sticky: true\"\r\n            class=\"example-second-header-row\">\r\n        </tr>\r\n        <tr mat-footer-row *matFooterRowDef=\"columnsToDisplay;sticky: true\"></tr>\r\n    </table>\r\n</div>\r\n<div class=\"loading-shade\" *ngIf=\"dataSource.loading$ | async\">\r\n    <mat-spinner></mat-spinner>\r\n</div>\r\n","import { NgModule } from '@angular/core';\r\nimport { RouterModule, Routes } from '@angular/router';\r\nimport { CityListComponent } from './city-list/city-list.component';\r\nimport { AuthGuard } from '@core/security/auth.guard';\r\n\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: '',\r\n    component: CityListComponent,\r\n    data: { claimType: 'SETT_MANAGE_CITY' },\r\n    canActivate: [AuthGuard]\r\n  }\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class CityRoutingModule { }\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { CityListComponent } from './city-list/city-list.component';\r\nimport { CityRoutingModule } from './city-routing.module';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport { MatTableModule } from '@angular/material/table';\r\nimport { MatProgressSpinnerModule } from '@angular/material/progress-spinner';\r\nimport { MatDialogModule } from '@angular/material/dialog';\r\nimport { SharedModule } from '@shared/shared.module';\r\nimport { MatSelectModule } from '@angular/material/select';\r\nimport { MatAutocompleteModule } from '@angular/material/autocomplete';\r\nimport { MatPaginatorModule } from '@angular/material/paginator';\r\nimport { MatSortModule } from '@angular/material/sort';\r\nimport { MatInputModule } from '@angular/material/input';\r\nimport { MatMenuModule } from '@angular/material/menu';\r\nimport { TranslateModule } from '@ngx-translate/core';\r\nimport { ManageCityComponent } from './manage-city/manage-city.component';\r\n\r\n\r\n\r\n@NgModule({\r\n  declarations: [\r\n    CityListComponent,\r\n    ManageCityComponent\r\n  ],\r\n  imports: [\r\n    CommonModule,\r\n    CityRoutingModule,\r\n    CommonModule,\r\n    FormsModule,\r\n    SharedModule,\r\n    ReactiveFormsModule,\r\n    MatSelectModule,\r\n    MatAutocompleteModule,\r\n    MatPaginatorModule,\r\n    MatSortModule,\r\n    MatProgressSpinnerModule,\r\n    MatTableModule,\r\n    MatInputModule,\r\n    MatMenuModule,\r\n    MatDialogModule,\r\n    TranslateModule\r\n  ]\r\n})\r\nexport class CityModule { }\r\n","import { Injectable } from '@angular/core';\r\nimport { Observable, of } from 'rxjs';\r\nimport { HttpResponse, HttpClient, HttpParams } from '@angular/common/http';\r\nimport { CityResourceParameter } from '@core/domain-classes/city-resource-parameter';\r\nimport { City } from '@core/domain-classes/city';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class CityService {\r\n\r\n  constructor(private http: HttpClient) { }\r\n\r\n  getCities(\r\n    resourceParams: CityResourceParameter\r\n  ): Observable<HttpResponse<City[]>> {\r\n    const url = 'city';\r\n    const customParams = new HttpParams()\r\n      .set('Fields', resourceParams.fields)\r\n      .set('OrderBy', resourceParams.orderBy)\r\n      .set('PageSize', resourceParams.pageSize.toString())\r\n      .set('Skip', resourceParams.skip.toString())\r\n      .set('SearchQuery', resourceParams.searchQuery)\r\n      .set('cityName', resourceParams.cityName)\r\n      .set('countryName', resourceParams.countryName ? resourceParams.countryName : '')\r\n\r\n    return this.http.get<City[]>(url, {\r\n      params: customParams,\r\n      observe: 'response',\r\n    });\r\n  }\r\n\r\n  getCity(id: string): Observable<City> {\r\n    const url = 'city/' + id;\r\n    return this.http.get<City>(url);\r\n  }\r\n  deleteCity(id: string): Observable<void> {\r\n    const url = `city/${id}`;\r\n    return this.http.delete<void>(url);\r\n  }\r\n  updateCity(id: string, city: City): Observable<City> {\r\n    const url = 'city/' + id;\r\n    return this.http.put<City>(url, city);\r\n  }\r\n  saveCity(city: City): Observable<City> {\r\n    const url = 'city';\r\n    return this.http.post<City>(url, city);\r\n  }\r\n\r\n}\r\n","import { Component, Inject, OnInit } from '@angular/core';\r\nimport { UntypedFormBuilder, UntypedFormGroup, Validators } from '@angular/forms';\r\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\r\nimport { City } from '@core/domain-classes/city';\r\nimport { Country } from '@core/domain-classes/country';\r\nimport { CommonService } from '@core/services/common.service';\r\nimport { TranslationService } from '@core/services/translation.service';\r\nimport { ToastrService } from 'ngx-toastr';\r\nimport { BaseComponent } from 'src/app/base.component';\r\nimport { CityService } from '../city.service';\r\n\r\n@Component({\r\n  selector: 'app-manage-city',\r\n  templateUrl: './manage-city.component.html',\r\n  styleUrls: ['./manage-city.component.scss']\r\n})\r\nexport class ManageCityComponent extends BaseComponent implements OnInit {\r\n\r\n  isEdit: boolean = false;\r\n  cityForm: UntypedFormGroup;\r\n  countryList: Country[] = [];\r\n  constructor(\r\n    public dialogRef: MatDialogRef<ManageCityComponent>,\r\n    @Inject(MAT_DIALOG_DATA) public data: City,\r\n    private cityService: CityService,\r\n    private toastrService: ToastrService,\r\n    private fb: UntypedFormBuilder,\r\n    private commonService: CommonService,\r\n    public translationService: TranslationService) {\r\n    super(translationService);\r\n    this.getLangDir();\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.createForm();\r\n    this.getCountries()\r\n    if (this.data.id) {\r\n      this.cityForm.patchValue(this.data);\r\n      this.isEdit = true;\r\n    }\r\n  }\r\n\r\n  createForm() {\r\n    this.cityForm = this.fb.group({\r\n      id: [''],\r\n      cityName: ['',Validators.required],\r\n      countryId: ['',Validators.required]\r\n    });\r\n  }\r\n\r\n  getCountries() {\r\n    this.sub$.sink = this.commonService.getCountry().subscribe(c => this.countryList = c);\r\n  }\r\n\r\n  onCancel(): void {\r\n    this.dialogRef.close();\r\n  }\r\n\r\n  saveCity(): void {\r\n    if (!this.cityForm.valid) {\r\n      this.cityForm.markAllAsTouched();\r\n      return;\r\n    }\r\n    const city: City = this.cityForm.value;\r\n    if (this.data.id) {\r\n      this.cityService.updateCity(city.id, city).subscribe(() => {\r\n        this.toastrService.success(this.translationService.getValue('CITY_SAVED_SUCCESSFULLY'));\r\n        this.dialogRef.close(city);\r\n      });\r\n    } else {\r\n      this.cityService.saveCity(city).subscribe((c) => {\r\n        this.toastrService.success(this.translationService.getValue('CITY_SAVED_SUCCESSFULLY'));\r\n        this.dialogRef.close(city);\r\n      });\r\n    }\r\n  }\r\n}\r\n","<div class=\"modal-content1\">\r\n    <div class=\"modal-header\">\r\n        <div class=\"d-flex w-100 align-items-center justify-content-between\">\r\n            <div class=\"col-md-9 col\">\r\n                <h4 class=\"modal-title\">\r\n                    {{\"MANAGE_CITY\" | translate}}\r\n                </h4>\r\n            </div>\r\n            <div class=\"col-sm-auto col-auto ml-auto\">\r\n                <button type=\"button\" class=\"close\" (click)=\"onCancel()\" data-dismiss=\"modal\">\r\n                    <i class=\"fas fa-times\"></i>\r\n                </button>\r\n            </div>\r\n        </div>\r\n    </div>\r\n    <form [formGroup]=\"cityForm\">\r\n        <div class=\"modal-body\">\r\n            <div class=\"row\">\r\n                <div class=\"col-md-12\">\r\n                    <div class=\"form-group\">\r\n                        <mat-label class=\"text-danger\"> {{'COUNTRY' | translate}} *</mat-label>\r\n                        <mat-select [dir]=\"langDir\" placeholder=\"{{'COUNTRY' | translate}}\" class=\"form-control\"\r\n                            formControlName=\"countryId\">\r\n                            <mat-option *ngFor=\"let country of countryList\" [value]=\"country.id\">\r\n                                {{country.countryName}}\r\n                            </mat-option>\r\n                        </mat-select>\r\n                        <mat-error [dir]=\"langDir\"\r\n                            *ngIf=\"cityForm.get('countryId').touched && cityForm.get('countryId').errors?.required\"\r\n                            class=\"text-danger\">\r\n                            {{'PLEASE_SELECT_COUNTRY' | translate}}\r\n                        </mat-error>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div class=\"row\">\r\n                <div class=\"col-md-12\">\r\n                    <div class=\"form-group\">\r\n                        <label for=\"cityName\" class=\"text-danger\">{{'CITY_NAME' | translate}} *</label>\r\n                        <input formControlName=\"cityName\" type=\"text\" class=\"form-control\" id=\"cityName\">\r\n                        <div *ngIf=\"cityForm.get('cityName').touched && cityForm.get('cityName').errors\">\r\n                            <div class=\"text-danger\"\r\n                                *ngIf=\"cityForm.get('cityName').touched && cityForm.get('cityName').errors?.required\">\r\n                                {{'CITY_NAME_IS_REQUIRED.' | translate}}\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n        <div class=\"modal-footer\">\r\n            <div class=\"form-row w-100\">\r\n                <div class=\"col-md-auto col-auto\">\r\n                    <button *hasClaim=\"'SETT_MANAGE_CITY'\" class=\"btn btn-success btn-sm m-right-10\" (click)=\"saveCity()\" cdkFocusInitial>\r\n                        <i class=\"fas fa-save\"></i>\r\n                        {{\"SAVE\" | translate}}\r\n                    </button>\r\n                    <button class=\"btn btn-danger btn-sm\" (click)=\"onCancel()\">\r\n                        <i class=\"fas fa-times-circle\"></i>\r\n                        {{\"CANCEL\" | translate}}\r\n                    </button>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </form>\r\n</div>","import { ResourceParameter } from \"./resource-parameter\";\r\n\r\nexport class CityResourceParameter extends ResourceParameter {\r\n  cityId: string = '';\r\n  cityName: string = '';\r\n  countryId?: string = '';\r\n  countryName: string = '';\r\n}\r\n"],"names":[],"sourceRoot":"webpack:///","x_google_ignoreList":[]}