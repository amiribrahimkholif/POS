{"version":3,"file":"src_app_company-profile_company-profile_module_ts.js","mappings":"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","sources":["./src/app/company-profile/company-profile-routing.module.ts","./src/app/company-profile/company-profile.component.ts","./src/app/company-profile/company-profile.component.html","./src/app/company-profile/company-profile.module.ts"],"sourcesContent":["import { NgModule } from '@angular/core';\r\nimport { CompanyProfileComponent } from './company-profile.component';\r\nimport { RouterModule, Routes } from '@angular/router';\r\nimport { AuthGuard } from '@core/security/auth.guard';\r\nimport { CompanyProfileResolver } from './company-profile.resolver';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: '',\r\n    component: CompanyProfileComponent,\r\n    data: { claimType: 'SETT_UPDATE_COM_PROFILE' },\r\n    canActivate: [AuthGuard],\r\n    resolve: {\r\n      profile: CompanyProfileResolver\r\n    },\r\n  }\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class CompanyProfileRoutingModule { }\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { UntypedFormBuilder, UntypedFormGroup, Validators } from '@angular/forms';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { CompanyProfile } from '@core/domain-classes/company-profile';\r\nimport { Currency } from '@core/domain-classes/currency';\r\nimport { SecurityService } from '@core/security/security.service';\r\nimport { CommonService } from '@core/services/common.service';\r\nimport { TranslationService } from '@core/services/translation.service';\r\nimport { environment } from '@environments/environment';\r\nimport { ToastrService } from 'ngx-toastr';\r\nimport { BaseComponent } from '../base.component';\r\nimport { CompanyProfileService } from './company-profile.service';\r\n\r\n@Component({\r\n  selector: 'app-company-profile',\r\n  templateUrl: './company-profile.component.html',\r\n  styleUrls: ['./company-profile.component.css']\r\n})\r\nexport class CompanyProfileComponent extends BaseComponent implements OnInit {\r\n  companyProfileForm: UntypedFormGroup;\r\n  imgSrc: string | ArrayBuffer = '';\r\n  isLoading = false;\r\n  currencies: Currency[] = [];\r\n  constructor(private route: ActivatedRoute,\r\n    private fb: UntypedFormBuilder,\r\n    private companyProfileService: CompanyProfileService,\r\n    private router: Router,\r\n    private toastrService: ToastrService,\r\n    private securityService: SecurityService,\r\n    public translationService: TranslationService,\r\n    private commonService: CommonService) {\r\n      super(translationService);\r\n      this.getLangDir();\r\n     }\r\n\r\n  ngOnInit(): void {\r\n    this.createform();\r\n    this.getCurrencies();\r\n    this.route.data.subscribe((data: { profile: CompanyProfile }) => {\r\n      this.companyProfileForm.patchValue(data.profile);\r\n      if (data.profile.logoUrl) {\r\n        this.imgSrc = environment.apiUrl + data.profile.logoUrl;\r\n      }\r\n    });\r\n  }\r\n\r\n  createform() {\r\n    this.companyProfileForm = this.fb.group({\r\n      id: [''],\r\n      title: ['', [Validators.required]],\r\n      address: ['', [Validators.required]],\r\n      logoUrl: [''],\r\n      imageData: [],\r\n      phone: [''],\r\n      email: ['', [Validators.email]],\r\n      currencyCode: ['', [Validators.required]]\r\n    });\r\n  }\r\n\r\n  getCurrencies() {\r\n    this.commonService.getCurrencies().subscribe(data => this.currencies = data);\r\n  }\r\n\r\n  saveCompanyProfile() {\r\n    if (this.companyProfileForm.invalid) {\r\n      this.companyProfileForm.markAllAsTouched();\r\n      return\r\n    }\r\n    const companyProfile: CompanyProfile = this.companyProfileForm.getRawValue();\r\n    this.isLoading = true;\r\n    this.companyProfileService.updateCompanyProfile(companyProfile)\r\n      .subscribe((companyProfile: CompanyProfile) => {\r\n        this.isLoading = false;\r\n        this.securityService.updateProfile(companyProfile);\r\n        this.toastrService.success(this.translationService.getValue('COMPANY_PROFILE_UPDATED_SUCCESSFULLY'));\r\n        this.router.navigate(['dashboard']);\r\n      }, () => this.isLoading = false);\r\n  }\r\n\r\n  onFileSelect($event) {\r\n    const fileSelected: File = $event.target.files[0];\r\n    if (!fileSelected) {\r\n      return;\r\n    }\r\n    const mimeType = fileSelected.type;\r\n    if (mimeType.match(/image\\/*/) == null) {\r\n      return;\r\n    }\r\n    const reader = new FileReader();\r\n    reader.readAsDataURL(fileSelected);\r\n    reader.onload = (_event) => {\r\n      this.imgSrc = reader.result;\r\n      this.companyProfileForm.patchValue({\r\n        imageData: reader.result.toString(),\r\n        logoUrl: fileSelected.name\r\n      })\r\n      $event.target.value = '';\r\n    }\r\n  }\r\n}\r\n","<div class=\"page-header-main mt-2\">\r\n    <div class=\"row align-items-center justify-content-between\">\r\n        <div class=\"col-md-auto col-sm-auto\">\r\n            <div class=\"content-header\">\r\n                <h1>{{'COMPANY_PROFILE' | translate}}</h1>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>\r\n<form [formGroup]=\"companyProfileForm\" (ngSubmit)=\"saveCompanyProfile()\">\r\n    <div class=\"row\">\r\n        <div class=\"col-md-6\">\r\n            <div class=\"form-row\">\r\n                <div class=\"col-md-6\">\r\n                    <div class=\"form-group\">\r\n                        <label>{{'TITLE' | translate}}</label>\r\n                        <input formControlName=\"title\" class=\"form-control w-100\" type=\"text\">\r\n                    </div>\r\n                </div>\r\n                <div class=\"col-md-6\">\r\n                    <label class=\"text-danger\">{{'CURRENCY' | translate}} *</label>\r\n                    <mat-select [dir]=\"langDir\" placeholder=\"{{'CURRENCY' | translate}}\" class=\"form-control\" formControlName=\"currencyCode\">\r\n                        <mat-option *ngFor=\"let currency of currencies\" [value]=\"currency.symbol\">\r\n                            {{currency.name}} ({{currency.symbol}})\r\n                        </mat-option>\r\n                    </mat-select>\r\n                </div>\r\n                <div class=\"col-md-12\">\r\n                    <div class=\"form-group\">\r\n                        <label>{{'ADDRESS' | translate}}</label>\r\n                        <textarea cols=\"30\" rows=\"3\" class=\"form-control w-100\" formControlName=\"address\"></textarea>\r\n                    </div>\r\n                </div>\r\n                <div class=\"col-md-12\">\r\n                    <div class=\"row\">\r\n                        <div class=\"col-md-6\">\r\n                            <div class=\"form-group\">\r\n                                <label>{{'PHONE_NUMBER' | translate}}</label>\r\n                                <input formControlName=\"phone\" class=\"form-control w-100\" type=\"text\">\r\n                            </div>\r\n                        </div>\r\n                        <div class=\"col-md-6\">\r\n                            <div class=\"form-group\">\r\n                                <label>{{'EMAIL' | translate}}</label>\r\n                                <input formControlName=\"email\" class=\"form-control w-100\" type=\"text\">\r\n                                <div\r\n                                    *ngIf=\"companyProfileForm.get('email').touched && companyProfileForm.get('email').errors\">\r\n                                    <div class=\"text-danger\" *ngIf=\"companyProfileForm.get('email').errors?.email\">\r\n                                        {{'PLEASE_ENTER_VALID_EMAIL' | translate}}\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n        <div class=\"col-md-6\">\r\n            <div class=\"row text-center\">\r\n                <div class=\"col-md-9 mt-2 ml-5\">\r\n                    <mat-card class=\"cus-mat-card\" [dir]=\"langDir\">\r\n                        <input hidden (change)=\"onFileSelect($event)\" #fileInput name=\"logo\" type=\"file\"\r\n                            name=\"Profile Photo\" fxFlex=\"30\">\r\n                        <img *ngIf=\"imgSrc\" class=\"full-width\" [src]=\"imgSrc\" />\r\n                        <img *ngIf=\"!imgSrc\" class=\"full-width\" src=\"../../assets/images/logo.png\" />\r\n                        <mat-card-actions>\r\n                            <button type=\"button\" class=\"btn btn-success btn-sm mb-2\" (click)=\"fileInput.click()\">\r\n                                <i class=\"far fa-image\"></i> {{'CHANGE_LOGO' | translate}}</button>\r\n                        </mat-card-actions>\r\n                    </mat-card>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n    <div class=\"row\">\r\n        <div class=\"col-md-12\">\r\n            <button *hasClaim=\"'SETT_UPDATE_COM_PROFILE'\" type=\"submit\" class=\"btn btn-success btn-sm mr-2\">\r\n                <i class=\"fas fa-save\"></i> {{'SAVE' | translate}}\r\n            </button>\r\n            <button [routerLink]=\"['/dashboard']\" type=\"button\" class=\"btn btn-danger btn-sm\">\r\n                <i class=\"fas fa-times-circle\"></i> {{'CANCEL' | translate}}\r\n            </button>\r\n        </div>\r\n    </div>\r\n</form>\r\n<div class=\"loading-shade\" *ngIf=\"isLoading\">\r\n    <mat-spinner *ngIf=\"isLoading\"></mat-spinner>\r\n</div>","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { CompanyProfileComponent } from './company-profile.component';\r\nimport { CompanyProfileRoutingModule } from './company-profile-routing.module';\r\nimport { SharedModule } from '@shared/shared.module';\r\nimport { ReactiveFormsModule } from '@angular/forms';\r\nimport { MatCardModule } from '@angular/material/card';\r\nimport { MatSelectModule } from '@angular/material/select';\r\n\r\n\r\n\r\n@NgModule({\r\n  declarations: [CompanyProfileComponent],\r\n  imports: [\r\n    CommonModule,\r\n    CompanyProfileRoutingModule,\r\n    SharedModule,\r\n    ReactiveFormsModule,\r\n    MatCardModule,\r\n    MatSelectModule\r\n  ]\r\n})\r\nexport class CompanyProfileModule { }\r\n"],"names":[],"sourceRoot":"webpack:///","x_google_ignoreList":[]}