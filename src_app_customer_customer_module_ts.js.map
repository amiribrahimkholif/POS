{"version":3,"file":"src_app_customer_customer_module_ts.js","mappings":"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","sources":["./src/app/customer/customer-detail/customer-detail-resolver.service.ts","./src/app/customer/customer-detail/customer-detail.component.ts","./src/app/customer/customer-detail/customer-detail.component.html","./src/app/customer/customer-list/customer-datasource.ts","./src/app/customer/customer-list/customer-list.component.ts","./src/app/customer/customer-list/customer-list.component.html","./src/app/customer/customer-list/customer-so-list/customer-so-list.component.ts","./src/app/customer/customer-list/customer-so-list/customer-so-list.component.html","./src/app/customer/customer-routing.module.ts","./src/app/customer/customer.module.ts","./node_modules/guid-typescript/dist/guid.js"],"sourcesContent":["import { Injectable } from '@angular/core';\r\nimport {\r\n  Resolve,\r\n  Router,\r\n  ActivatedRouteSnapshot,\r\n  RouterStateSnapshot,\r\n} from '@angular/router';\r\nimport { Customer } from '@core/domain-classes/customer';\r\nimport { Observable, of } from 'rxjs';\r\nimport { take, mergeMap } from 'rxjs/operators';\r\n\r\nimport { CustomerService } from '../customer.service';\r\n\r\n@Injectable()\r\nexport class CustomerResolverService implements Resolve<Customer> {\r\n  constructor(\r\n    private customerService: CustomerService,\r\n    private router: Router\r\n  ) {}\r\n  resolve(\r\n    route: ActivatedRouteSnapshot,\r\n    state: RouterStateSnapshot\r\n  ): Observable<Customer> | null {\r\n    const id = route.paramMap.get('id');\r\n    if (id === 'addItem') {\r\n      return null;\r\n    }\r\n    return this.customerService.getCustomer(id).pipe(\r\n      take(1),\r\n      mergeMap((customer) => {\r\n        if (customer) {\r\n          return of(customer);\r\n        } else {\r\n          this.router.navigate(['/customer']);\r\n          return null;\r\n        }\r\n      })\r\n    );\r\n  }\r\n}\r\n","import { Component, OnInit, ViewChild } from '@angular/core';\r\nimport { AbstractControl, UntypedFormBuilder, UntypedFormGroup, ValidatorFn, Validators } from '@angular/forms';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { City } from '@core/domain-classes/city';\r\nimport { Location } from '@angular/common';\r\nimport { Country } from '@core/domain-classes/country';\r\nimport { Customer } from '@core/domain-classes/customer';\r\nimport { CommonService } from '@core/services/common.service';\r\nimport { TranslationService } from '@core/services/translation.service';\r\nimport { environment } from '@environments/environment';\r\nimport { Guid } from 'guid-typescript';\r\nimport { ToastrService } from 'ngx-toastr';\r\nimport { Subject } from 'rxjs';\r\nimport { debounceTime, distinctUntilChanged, switchMap } from 'rxjs/operators';\r\nimport { BaseComponent } from 'src/app/base.component';\r\nimport { CustomerService } from '../customer.service';\r\nimport { EditorConfig } from '@shared/editor.config';\r\n\r\nexport class AlreadyExistValidator {\r\n  static exist(flag: boolean): ValidatorFn {\r\n    return (c: AbstractControl): { [key: string]: boolean } | null => {\r\n      if (flag) {\r\n        return { exist: true };\r\n      }\r\n      return null;\r\n    };\r\n  }\r\n}\r\n\r\n@Component({\r\n  selector: 'app-customer-detail',\r\n  templateUrl: './customer-detail.component.html',\r\n  styleUrls: ['./customer-detail.component.scss'],\r\n})\r\nexport class CustomerDetailComponent extends BaseComponent implements OnInit {\r\n\r\n  customerForm: UntypedFormGroup;\r\n  imgSrc: any = null;\r\n  isImageUpload: boolean = false;\r\n  customer: Customer;\r\n  countries: Country[] = [];\r\n  cities: City[] = [];\r\n  isLoadingCity: boolean = false;\r\n  editorConfig = EditorConfig;\r\n  public filterCityObservable$: Subject<string> = new Subject<string>();\r\n\r\n  constructor(\r\n    private fb: UntypedFormBuilder,\r\n    private customerService: CustomerService,\r\n    private commonService: CommonService,\r\n    private router: Router,\r\n    private route: ActivatedRoute,\r\n    private toastrService: ToastrService,\r\n    public translationService: TranslationService,\r\n    private location: Location\r\n  ) {\r\n    super(translationService);\r\n    this.getLangDir();\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.createCustomerForm();\r\n    this.getCountry();\r\n    this.getCityByName();\r\n    const routeSub$ = this.route.data.subscribe(\r\n      (data: { customer: Customer }) => {\r\n        if (data.customer) {\r\n          this.customer = { ...data.customer };\r\n          if (this.customer.imageUrl) {\r\n            this.imgSrc = `${environment.apiUrl}${this.customer.imageUrl}`;\r\n          }\r\n          this.patchCustomer();\r\n        } else {\r\n          if (this.customer) {\r\n            this.imgSrc = '';\r\n            this.customer = Object.assign({}, null);\r\n          }\r\n        }\r\n      }\r\n    );\r\n    this.sub$.add(routeSub$);\r\n  }\r\n\r\n  getCityByName() {\r\n    this.isLoadingCity = true;\r\n    this.sub$.sink = this.filterCityObservable$\r\n      .pipe(\r\n        debounceTime(1000),\r\n        distinctUntilChanged(),\r\n        switchMap((c: string) => {\r\n          var strArray = c.split(':');\r\n          return this.commonService.getCityByName(strArray[0], strArray[1]);\r\n        })\r\n      )\r\n      .subscribe(\r\n        (c: City[]) => {\r\n          this.cities = [...c];\r\n          this.isLoadingCity = false;\r\n        },\r\n        (err) => (this.isLoadingCity = false)\r\n      );\r\n  }\r\n\r\n  patchCustomer() {\r\n    this.customerForm.patchValue({\r\n      customerName: this.customer.customerName,\r\n      contactPerson: this.customer.contactPerson,\r\n      mobileNo: this.customer.mobileNo,\r\n      phoneNo: this.customer.phoneNo,\r\n      description: this.customer.description,\r\n      website: this.customer.website,\r\n      isVarified: this.customer.isVarified,\r\n      url: this.customer.url,\r\n      address: this.customer.address,\r\n      email: this.customer.email,\r\n      countryId: this.customer.countryId,\r\n      cityName: this.customer.cityName,\r\n      countryName: this.customer.countryName\r\n    });\r\n  }\r\n\r\n  createCustomerForm() {\r\n    this.customerForm = this.fb.group({\r\n      customerName: ['', [Validators.required, Validators.maxLength(500)]],\r\n      contactPerson: [''],\r\n      mobileNo: ['', [Validators.required]],\r\n      phoneNo: '',\r\n      website: [''],\r\n      description: [''],\r\n      address: [''],\r\n      email: ['', [Validators.required, Validators.email]],\r\n      cityId: [''],\r\n      countryId: [''],\r\n      cityName: [''],\r\n      countryName: ['']\r\n    });\r\n  }\r\n\r\n  onEmailChange(event: any) {\r\n    const email = this.customerForm.get('email').value;\r\n    if (!email) {\r\n      return;\r\n    }\r\n    const id =\r\n      this.customer && this.customer.id ? this.customer.id : Guid.create();\r\n    this.sub$.sink = this.customerService\r\n      .checkEmailOrPhoneExist('', email, id)\r\n      .subscribe((c) => {\r\n        const emailControl = this.customerForm.get('email');\r\n        if (c) {\r\n          emailControl.setValidators([\r\n            Validators.required,\r\n            AlreadyExistValidator.exist(true),\r\n          ]);\r\n        } else {\r\n          emailControl.setValidators([Validators.required]);\r\n        }\r\n        emailControl.updateValueAndValidity();\r\n      });\r\n  }\r\n\r\n  onMobileNoChange(event: any) {\r\n    const mobileno = this.customerForm.get('mobileNo').value;\r\n    if (!mobileno) {\r\n      return;\r\n    }\r\n    const id =\r\n      this.customer && this.customer.id ? this.customer.id : Guid.create();\r\n    this.sub$.sink = this.customerService\r\n      .checkEmailOrPhoneExist('', mobileno, id)\r\n      .subscribe((c) => {\r\n        const mobileNoControl = this.customerForm.get('mobileNo');\r\n        if (c) {\r\n          mobileNoControl.setValidators([\r\n            Validators.required,\r\n            AlreadyExistValidator.exist(true),\r\n          ]);\r\n        } else {\r\n          mobileNoControl.setValidators([Validators.required]);\r\n        }\r\n        mobileNoControl.updateValueAndValidity();\r\n      });\r\n  }\r\n\r\n\r\n  onFileSelect($event) {\r\n    const fileSelected = $event.target.files[0];\r\n    if (!fileSelected) {\r\n      return;\r\n    }\r\n    const mimeType = fileSelected.type;\r\n    if (mimeType.match(/image\\/*/) == null) {\r\n      return;\r\n    }\r\n    const reader = new FileReader();\r\n    reader.readAsDataURL(fileSelected);\r\n    // tslint:disable-next-line: variable-name\r\n    reader.onload = (_event) => {\r\n      this.imgSrc = reader.result;\r\n      this.isImageUpload = true;\r\n      $event.target.value = '';\r\n    }\r\n  }\r\n\r\n  onRemoveImage() {\r\n    this.imgSrc = '';\r\n    this.isImageUpload = true;\r\n  }\r\n\r\n  getCountry() {\r\n    const CountrySub$ = this.commonService.getCountry().subscribe((data) => {\r\n      this.countries = data;\r\n    });\r\n    this.sub$.add(CountrySub$);\r\n  }\r\n\r\n  handleFilterCity(cityName: string) {\r\n    const country = this.customerForm.get('countryName').value;\r\n    if (cityName && country) {\r\n      const strCountryCity = country + ':' + cityName;\r\n      this.filterCityObservable$.next(strCountryCity);\r\n    }\r\n  }\r\n\r\n  onCountryChange(country: any) {\r\n    this.customerForm.patchValue({\r\n      cityName: '',\r\n    });\r\n    if (country.value) {\r\n      const strCountry = country.value + ':' + '';\r\n      this.filterCityObservable$.next(strCountry);\r\n    } else {\r\n      this.cities = [];\r\n    }\r\n  }\r\n\r\n  onCustomerList() {\r\n    this.location.back();\r\n  }\r\n\r\n  onCustomerSubmit() {\r\n    if (this.customerForm.valid) {\r\n      const custObj = this.createBuildForm();\r\n      custObj.logo = this.imgSrc;\r\n      custObj.isImageUpload = this.isImageUpload;\r\n      if (this.customer) {\r\n        this.sub$.sink = this.customerService\r\n          .updateCustomer(this.customer.id, custObj)\r\n          .subscribe(c => {\r\n            this.toastrService.success(this.translationService.getValue('CUSTOMER_UPDATE_SUCCESSFULLY'));\r\n            this.router.navigate(['/customer']);\r\n          });\r\n      } else {\r\n        this.sub$.sink = this.customerService\r\n          .saveCustomer(custObj)\r\n          .subscribe(c => {\r\n            this.toastrService.success(this.translationService.getValue('CUSTOMER_SAVE_SUCCESSFULLY'));\r\n            this.router.navigate(['/customer']);\r\n          });\r\n      }\r\n    } else {\r\n      this.markFormGroupTouched(this.customerForm);\r\n    }\r\n  }\r\n\r\n  private markFormGroupTouched(formGroup: UntypedFormGroup) {\r\n    (<any>Object).values(formGroup.controls).forEach((control) => {\r\n      control.markAsTouched();\r\n\r\n      if (control.controls) {\r\n        this.markFormGroupTouched(control);\r\n      }\r\n    });\r\n  }\r\n\r\n  createBuildForm(): Customer {\r\n    const customerObj: Customer = {\r\n      id: this.customer ? this.customer.id : null,\r\n      customerName: this.customerForm.get('customerName').value,\r\n      contactPerson: this.customerForm.get('contactPerson').value,\r\n      mobileNo: this.customerForm.get('mobileNo').value,\r\n      phoneNo: this.customerForm.get('phoneNo').value,\r\n      website: this.customerForm.get('website').value,\r\n      description: this.customerForm.get('description').value,\r\n      url: '',\r\n      isVarified: true,\r\n      isUnsubscribe: false,\r\n      address: this.customerForm.get('address').value,\r\n      email: this.customerForm.get('email').value,\r\n      countryId: this.customerForm.get('countryId').value,\r\n      cityId: this.customerForm.get('cityId').value,\r\n      cityName: this.customerForm.get('cityName').value,\r\n      countryName: this.customerForm.get('countryName').value,\r\n    };\r\n    return customerObj;\r\n  }\r\n\r\n}\r\n","<div class=\"page-header-main\">\r\n    <div class=\"row align-items-center justify-content-between\">\r\n        <div class=\"col-md-auto col-sm-auto\">\r\n            <div class=\"content-header\">\r\n                <h1>{{'MANAGE_CUSTOMER' | translate}}</h1>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>\r\n<form autocomplete=\"off\" [formGroup]=\"customerForm\" (ngSubmit)=\"onCustomerSubmit()\">\r\n    <div class=\"row\">\r\n        <div class=\"col-md-6\">\r\n            <div class=\"form-row\">\r\n                <div class=\"col-md-6\">\r\n                    <div class=\"form-group \">\r\n                        <label class=\"text-danger\">{{'CUSTOMER_NAME' | translate}} *</label>\r\n                        <input formControlName=\"customerName\" class=\"form-control\" type=\"text\">\r\n                        <div\r\n                            *ngIf=\"customerForm.get('customerName').touched && customerForm.get('customerName').errors\">\r\n                            <div class=\"text-danger\" *ngIf=\"customerForm.get('customerName').errors?.required\">\r\n                                {{'CUSTOMER_NAME_IS_REQUIRED' | translate}}\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div class=\"col-md-6\">\r\n                    <div class=\"form-group \">\r\n                        <label>{{'CONTACT_PERSON' | translate}}</label>\r\n                        <input formControlName=\"contactPerson\" class=\"form-control\" type=\"text\">\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n        <div class=\"col-md-6\">\r\n            <div class=\"form-group\">\r\n                <label class=\"text-danger\">{{'EMAIL' | translate}} *</label>\r\n                <input (change)=\"onEmailChange($event)\" formControlName=\"email\" class=\"form-control\" type=\"text\">\r\n\r\n                <div *ngIf=\"\r\n          customerForm.get('email').touched &&\r\n          customerForm.get('email').errors?.email\" class=\"text-danger\">\r\n                    {{'PLEASE_ENTER_VALID_EMAIL' | translate}}\r\n                </div>\r\n                <div *ngIf=\"\r\n          customerForm.get('email').touched &&\r\n          customerForm.get('email').errors?.required\" class=\"text-danger\">\r\n                    {{'EMAIL_IS_REQUIRED' | translate}}\r\n                </div>\r\n            </div>\r\n        </div>\r\n\r\n        <div class=\"col-md-6\">\r\n            <div class=\"form-row\">\r\n                <div class=\"col-md-6\">\r\n                    <div class=\"form-group\">\r\n                        <label class=\"text-danger\">{{'MOBILE_NUMBER' | translate}} *</label>\r\n                        <input formControlName=\"mobileNo\" (change)=\"onMobileNoChange($event)\" class=\"form-control\"\r\n                            type=\"text\">\r\n                        <div *ngIf=\"\r\n            customerForm.get('mobileNo').touched &&\r\n            customerForm.get('mobileNo').errors?.required\" class=\"text-danger\">\r\n                            {{'MOBILE_IS_REQUIRED' | translate}}\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div class=\"col-md-6\">\r\n                    <div class=\"form-group \">\r\n                        <label>{{'PHONE_NUMBER' | translate}}</label>\r\n                        <input formControlName=\"phoneNo\" class=\"form-control\" type=\"text\">\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n        <div class=\"col-md-6\">\r\n            <div class=\"form-group \">\r\n                <label>{{'WEBSITE' | translate}}</label>\r\n                <input formControlName=\"website\" class=\"form-control\" type=\"text\">\r\n            </div>\r\n        </div>\r\n        <div class=\"col-md-12\">\r\n            <div class=\"row\">\r\n                <div class=\"col-md-6\">\r\n                    <div class=\"form-group\">\r\n                        <label>{{'ADDRESS' | translate}}</label>\r\n                        <textarea formControlName=\"address\" class=\"form-control\"></textarea>\r\n                    </div>\r\n                </div>\r\n                <div class=\"col-md-6 mt-4\">\r\n                    <div class=\"row\">\r\n                        <div class=\"col-md-6\">\r\n                            <mat-label [dir]=\"langDir\">{{'COUNTRY' | translate}}</mat-label>\r\n                            <mat-select [dir]=\"langDir\" placeholder=\"{{'SELECT_COUNTRY' | translate}}\" class=\"form-control\"\r\n                                formControlName=\"countryName\" (selectionChange)=\"onCountryChange($event)\">\r\n                                <mat-option *ngFor=\"let country of countries\" [value]=\"country.countryName\">\r\n                                    {{country.countryName}}\r\n                                </mat-option>\r\n                            </mat-select>\r\n                        </div>\r\n                        <div class=\"col-md-6\">\r\n                            <div class=\"form-group\">\r\n                                <mat-label [dir]=\"langDir\">{{'CITY' | translate}}</mat-label>\r\n                                <input class=\"form-control\" autocomplete=\"new-city\" (input)=\"handleFilterCity($event)\"\r\n                                    type=\"text\" placeholder=\"{{'SEARCH_CITY' | translate}}\" [matAutocomplete]=\"auto\"\r\n                                    formControlName=\"cityName\" />\r\n                                <mat-autocomplete [dir]=\"langDir\" #auto=\"matAutocomplete\">\r\n                                    <mat-option *ngFor=\"let city of cities\" [value]=\"city.cityName\">\r\n                                        <span>{{ city.cityName }}</span>\r\n                                    </mat-option>\r\n                                </mat-autocomplete>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n        <div class=\"col-sm-9\">\r\n            <div class=\"form-group \">\r\n                <label>\r\n                    {{'DESCRIPTION' | translate}}\r\n                </label>\r\n                <angular-editor formControlName=\"description\" [config]=\"editorConfig\"></angular-editor>\r\n            </div>\r\n        </div>\r\n        <div class=\"col-md-3\">\r\n            <label>\r\n                {{'UPLOAD_LOGO' | translate}}\r\n            </label>\r\n            <mat-card [dir]=\"langDir\" class=\"cus-mat-card text-center\">\r\n                <input hidden (change)=\"onFileSelect($event)\" #fileInput name=\"logo\" type=\"file\" name=\"Profile Image\"\r\n                    fxFlex=\"30\">\r\n                <img *ngIf=\"imgSrc\" class=\"full-width\" [src]=\"imgSrc\" />\r\n                <img *ngIf=\"!imgSrc\" class=\"full-width\" src=\"../../../assets/images/company-logo.jpg\" />\r\n                <mat-card-actions>\r\n                    <button type=\"button\" *ngIf=\"!imgSrc\" class=\"btn btn-success btn-sm m-right-10\"\r\n                        (click)=\"fileInput.click()\">\r\n                        <i class=\"far fa-image\"></i> {{'ADD_LOGO' | translate}}</button>\r\n                    <button type=\"button\" *ngIf=\"imgSrc\" class=\"btn btn-success btn-sm m-right-10\"\r\n                        (click)=\"fileInput.click()\">\r\n                        <i class=\"far fa-image\"></i> {{'CHANGE_LOGO' | translate}}</button>\r\n                    <button *ngIf=\"imgSrc\" type=\"button\" (click)=\"onRemoveImage()\" class=\"btn btn-danger btn-sm\">\r\n                        <i class=\"fas fa-trash-alt\"></i> {{'REMOVE_LOGO' | translate}}</button>\r\n                </mat-card-actions>\r\n            </mat-card>\r\n        </div>\r\n        <div class=\"m-top-10 col-md-12\">\r\n            <button *hasClaim=\"['CUST_ADD_CUSTOMER','CUST_UPDATE_CUSTOMER']\" type=\"submit\"\r\n                class=\"btn btn-success btn-sm m-right-10\">\r\n                <i class=\"fas fa-save\"></i>\r\n                {{'SAVE' | translate}}\r\n            </button>\r\n            <button type=\"button\" class=\"btn btn-danger btn-sm\" (click)=\"onCustomerList()\">\r\n                <i class=\"fas fa-times-circle\"></i>\r\n                {{'CANCEL' | translate}}\r\n            </button>\r\n        </div>\r\n    </div>\r\n</form>","import { DataSource } from '@angular/cdk/table';\r\nimport { HttpResponse } from '@angular/common/http';\r\nimport { ResponseHeader } from '@core/domain-classes/response-header';\r\nimport { BehaviorSubject, Observable, of, Subscription } from 'rxjs';\r\nimport { catchError, finalize } from 'rxjs/operators';\r\nimport { Customer } from '@core/domain-classes/customer';\r\nimport { CustomerService } from '../customer.service';\r\nimport { CustomerResourceParameter } from '@core/domain-classes/customer-resource-parameter';\r\n\r\nexport class CustomerDataSource implements DataSource<Customer> {\r\n  private _entities$ = new BehaviorSubject<Customer[]>([]);\r\n  private _responseHeaderSubject$ = new BehaviorSubject<ResponseHeader>(null);\r\n  private loadingSubject$ = new BehaviorSubject<boolean>(false);\r\n  public loading$ = this.loadingSubject$.asObservable();\r\n  private _count: number = 0;\r\n  sub$: Subscription;\r\n\r\n  public get count(): number {\r\n    return this._count;\r\n  }\r\n  public responseHeaderSubject$ = this._responseHeaderSubject$.asObservable();\r\n\r\n  constructor(private customerService: CustomerService) {\r\n    this.sub$ = new Subscription();\r\n  }\r\n\r\n  connect(): Observable<Customer[]> {\r\n    return this._entities$.asObservable();\r\n  }\r\n\r\n  disconnect(): void {\r\n    this._entities$.complete();\r\n    this.loadingSubject$.complete();\r\n    this.sub$.unsubscribe();\r\n  }\r\n\r\n  loadData(resource: CustomerResourceParameter) {\r\n    this.loadingSubject$.next(true);\r\n    this.sub$ = this.customerService.getCustomers(resource)\r\n      .pipe(\r\n        catchError(() => of([])),\r\n        finalize(() => this.loadingSubject$.next(false)))\r\n      .subscribe((resp: HttpResponse<Customer[]>) => {\r\n        if (resp && resp.headers.get('X-Pagination')) {\r\n          const paginationParam = JSON.parse(\r\n            resp.headers.get('X-Pagination')\r\n          ) as ResponseHeader;\r\n          this._responseHeaderSubject$.next(paginationParam);\r\n          const entities = [...resp.body];\r\n          this._count = entities.length;\r\n          this._entities$.next(entities);\r\n        } else {\r\n          this._entities$.next([]);\r\n        }\r\n      });\r\n  }\r\n}\r\n","import { ChangeDetectorRef, Component, OnInit, ViewChild } from '@angular/core';\r\nimport { BaseComponent } from 'src/app/base.component';\r\nimport { CustomerService } from '../customer.service';\r\nimport { merge, Observable, Subject } from 'rxjs';\r\nimport { Router } from '@angular/router';\r\nimport { debounceTime, distinctUntilChanged, tap } from 'rxjs/operators';\r\nimport { CustomerResourceParameter } from '@core/domain-classes/customer-resource-parameter';\r\nimport { Customer } from '@core/domain-classes/customer';\r\nimport { ResponseHeader } from '@core/domain-classes/response-header';\r\nimport { CustomerDataSource } from './customer-datasource';\r\nimport { MatPaginator } from '@angular/material/paginator';\r\nimport { MatSort } from '@angular/material/sort';\r\nimport { ToastrService } from 'ngx-toastr';\r\nimport { CommonDialogService } from '@core/common-dialog/common-dialog.service';\r\nimport { TranslationService } from '@core/services/translation.service';\r\nimport { MatDialog } from '@angular/material/dialog';\r\nimport { animate, state, style, transition, trigger } from '@angular/animations';\r\n\r\n@Component({\r\n  selector: 'app-customer-list',\r\n  templateUrl: './customer-list.component.html',\r\n  styleUrls: ['./customer-list.component.scss'],\r\n  animations: [\r\n    trigger('detailExpand', [\r\n      state('collapsed', style({ height: '0px', minHeight: '0' })),\r\n      state('expanded', style({ height: '*' })),\r\n      transition('expanded <=> collapsed', animate('225ms cubic-bezier(0.4, 0.0, 0.2, 1)')),\r\n    ]),\r\n  ],\r\n})\r\nexport class CustomerListComponent extends BaseComponent implements OnInit {\r\n  dataSource: CustomerDataSource;\r\n  customers: Customer[] = [];\r\n  displayedColumns: string[] = ['action', 'customerName', 'contactPerson', 'email', 'mobileNo', 'website'];\r\n  columnsToDisplay: string[] = [\"footer\"];\r\n  isLoadingResults = true;\r\n  customerResource: CustomerResourceParameter;\r\n  loading$: Observable<boolean>;\r\n  @ViewChild(MatPaginator) paginator: MatPaginator;\r\n  @ViewChild(MatSort) sort: MatSort;\r\n  _nameFilter: string;\r\n  _emailFilter: string;\r\n  _mobileOrPhoneFilter: string;\r\n  _websiteFilter: string;\r\n  _contactPersonFilter: string;\r\n  public filterObservable$: Subject<string> = new Subject<string>();\r\n  expandedElement: Customer | null;\r\n\r\n  public get NameFilter(): string {\r\n    return this._nameFilter;\r\n  }\r\n\r\n  public set ContactFilter(v: string) {\r\n    this._contactPersonFilter = v;\r\n    const customerNameFilter = `contactPerson##${v}`;\r\n    this.filterObservable$.next(customerNameFilter);\r\n  }\r\n\r\n  public set NameFilter(v: string) {\r\n    this._nameFilter = v;\r\n    const nameFilter = `customerName##${v}`;\r\n    this.filterObservable$.next(nameFilter);\r\n  }\r\n\r\n  public get WebsiteFilter(): string {\r\n    return this._websiteFilter;\r\n  }\r\n\r\n  public set WebsiteFilter(v: string) {\r\n    this._websiteFilter = v;\r\n    const websiteFilter = `website##${v}`;\r\n    this.filterObservable$.next(websiteFilter);\r\n  }\r\n\r\n  public get EmailFilter(): string {\r\n    return this._emailFilter;\r\n  }\r\n  public set EmailFilter(v: string) {\r\n    this._emailFilter = v;\r\n    const emailFilter = `email##${v}`;\r\n    this.filterObservable$.next(emailFilter);\r\n  }\r\n\r\n  public get MobileOrPhoneFilter(): string {\r\n    return this._mobileOrPhoneFilter;\r\n  }\r\n\r\n  public set MobileOrPhoneFilter(v: string) {\r\n    this._mobileOrPhoneFilter = v;\r\n    const mobileOrFilter = `mobileNo##${v}`;\r\n    this.filterObservable$.next(mobileOrFilter);\r\n  }\r\n\r\n  constructor(\r\n    private customerService: CustomerService,\r\n    private toastrService: ToastrService,\r\n    private commonDialogService: CommonDialogService,\r\n    private router: Router,\r\n    public translationService: TranslationService,\r\n    private dialog: MatDialog,\r\n    private cd: ChangeDetectorRef) {\r\n    super(translationService);\r\n    this.getLangDir();\r\n    this.customerResource = new CustomerResourceParameter();\r\n    this.customerResource.pageSize = 20;\r\n    this.customerResource.orderBy = 'customerName asc'\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.dataSource = new CustomerDataSource(this.customerService);\r\n    this.dataSource.loadData(this.customerResource);\r\n    this.getResourceParameter();\r\n    this.sub$.sink = this.filterObservable$\r\n      .pipe(\r\n        debounceTime(1000),\r\n        distinctUntilChanged())\r\n      .subscribe((c) => {\r\n        this.customerResource.skip = 0;\r\n        this.paginator.pageIndex = 0;\r\n        const strArray: Array<string> = c.split('##');\r\n        if (strArray[0] === 'customerName') {\r\n          this.customerResource.customerName = escape(strArray[1]);\r\n        } else if (strArray[0] === 'email') {\r\n          this.customerResource.email = strArray[1];\r\n        } else if (strArray[0] === 'mobileNo') {\r\n          this.customerResource.mobileNo = strArray[1];\r\n        }\r\n        else if (strArray[0] === 'contactPerson') {\r\n          this.customerResource.contactPerson = strArray[1];\r\n        }\r\n        else if (strArray[0] === 'website') {\r\n          this.customerResource.website = encodeURI(strArray[1].trim());\r\n        }\r\n        this.dataSource.loadData(this.customerResource);\r\n      });\r\n  }\r\n\r\n  ngAfterViewInit() {\r\n    this.sort.sortChange.subscribe(() => this.paginator.pageIndex = 0);\r\n\r\n    this.sub$.sink = merge(this.sort.sortChange, this.paginator.page)\r\n      .pipe(\r\n        tap((c: any) => {\r\n          this.customerResource.skip = this.paginator.pageIndex * this.paginator.pageSize;\r\n          this.customerResource.pageSize = this.paginator.pageSize;\r\n          this.customerResource.orderBy = this.sort.active + ' ' + this.sort.direction;\r\n          this.dataSource.loadData(this.customerResource);\r\n        })\r\n      )\r\n      .subscribe();\r\n  }\r\n\r\n  deleteCustomer(customer: Customer) {\r\n    this.sub$.sink = this.commonDialogService\r\n      .deleteConformationDialog(`${this.translationService.getValue('ARE_YOU_SURE_YOU_WANT_TO_DELETE')} ${customer.customerName}`)\r\n      .subscribe((isTrue: boolean) => {\r\n        if (isTrue) {\r\n          this.sub$.sink = this.customerService.deleteCustomer(customer.id)\r\n            .subscribe(() => {\r\n              this.toastrService.success(this.translationService.getValue('CUSTOMER_DELETED_SUCCESSFULLY'));\r\n              this.paginator.pageIndex = 0;\r\n              this.dataSource.loadData(this.customerResource);\r\n            });\r\n        }\r\n      });\r\n  }\r\n\r\n  getResourceParameter() {\r\n    this.sub$.sink = this.dataSource.responseHeaderSubject$\r\n      .subscribe((c: ResponseHeader) => {\r\n        if (c) {\r\n          this.customerResource.pageSize = c.pageSize;\r\n          this.customerResource.skip = c.skip;\r\n          this.customerResource.totalCount = c.totalCount;\r\n        }\r\n      });\r\n  }\r\n\r\n  editCustomer(customerId: string) {\r\n    this.router.navigate(['/customer', customerId])\r\n  }\r\n\r\n  toggleRow(customer: Customer) {\r\n    this.expandedElement = this.expandedElement === customer ? null : customer;\r\n    this.cd.detectChanges();\r\n  }\r\n}\r\n","<div class=\"page-header-main\">\r\n    <div class=\"row align-items-center justify-content-between\">\r\n        <div class=\"col-md-auto col-sm-auto col\">\r\n            <div class=\"content-header\">\r\n                <h1>{{'CUSTOMERS' | translate}}</h1>\r\n            </div>\r\n        </div>\r\n        <div class=\"col-md-auto col-sm-auto col-auto\">\r\n            <button *hasClaim=\"'CUST_ADD_CUSTOMER'\" class=\"btn blue-btn btn-sm m-right-10\"\r\n                [routerLink]=\"['/customer/addItem']\">\r\n                <i class=\"fas fa-plus\"></i> {{'ADD_CUSTOMER' | translate}}\r\n            </button>\r\n        </div>\r\n    </div>\r\n</div>\r\n<div class=\"loading-shade\" *ngIf=\"dataSource.loading$ | async\">\r\n    <mat-spinner></mat-spinner>\r\n</div>\r\n<div class=\"table-responsive\">\r\n    <table [dir]=\"langDir\" mat-table [dataSource]=\"dataSource\" matSort multiTemplateDataRows\r\n        matSortActive=\"customerName\" class=\"table table-bordered table-hover grid-height\">\r\n        <ng-container matColumnDef=\"action\" sticky>\r\n            <th class=\"table-column-150\" mat-header-cell *matHeaderCellDef>\r\n            </th>\r\n            <td class=\"table-column-150\" mat-cell *matCellDef=\"let customer\">\r\n                <button mat-icon-button (click)=\"toggleRow(customer)\">\r\n                    <mat-icon *ngIf=\"customer != expandedElement\">chevron_right</mat-icon>\r\n                    <mat-icon *ngIf=\"customer == expandedElement\">expand_more</mat-icon>\r\n                </button>\r\n                <button class=\"\" *hasClaim=\"['CUST_UPDATE_CUSTOMER','CUST_DELETE_CUSTOMER']\" mat-icon-button\r\n                    [matMenuTriggerFor]=\"menu\" aria-label=\"Action\">\r\n                    <mat-icon>more_vert</mat-icon>\r\n                </button>\r\n                <mat-menu #menu=\"matMenu\">\r\n                    <button *hasClaim=\"'CUST_UPDATE_CUSTOMER'\" (click)=\"editCustomer(customer.id)\" mat-menu-item>\r\n                        <mat-icon>edit</mat-icon>\r\n                        <span>{{'EDIT' | translate}}</span>\r\n                    </button>\r\n                    <button *hasClaim=\"'CUST_DELETE_CUSTOMER'\" mat-menu-item (click)=\"deleteCustomer(customer)\">\r\n                        <mat-icon>delete</mat-icon>\r\n                        <span>{{'DELETE' | translate}}</span>\r\n                    </button>\r\n                </mat-menu>\r\n            </td>\r\n        </ng-container>\r\n        <ng-container matColumnDef=\"customerName\" sticky>\r\n            <th class=\"table-column-300\" mat-header-cell *matHeaderCellDef mat-sort-header> {{'NAME' | translate}} </th>\r\n            <td class=\"table-column-300\" mat-cell *matCellDef=\"let row\"> {{row.customerName}} </td>\r\n        </ng-container>\r\n        <ng-container matColumnDef=\"contactPerson\">\r\n            <th class=\"table-column-150\" mat-header-cell *matHeaderCellDef mat-sort-header> {{'CONTACT_PERSON' |\r\n                translate}}\r\n            </th>\r\n            <td class=\"table-column-150\" mat-cell *matCellDef=\"let row\"> {{row.contactPerson}} </td>\r\n        </ng-container>\r\n        <ng-container matColumnDef=\"email\">\r\n            <th class=\"table-column-200\" mat-header-cell *matHeaderCellDef mat-sort-header> {{'EMAIL' | translate}}\r\n            </th>\r\n            <td class=\"table-column-200\" mat-cell *matCellDef=\"let row\">\r\n                <ng-container *ngIf=\"row.email\">\r\n                    <a href=\"mailto:{{row.email}}\">{{row.email}}</a>\r\n                </ng-container>\r\n            </td>\r\n        </ng-container>\r\n        <ng-container matColumnDef=\"mobileNo\">\r\n            <th class=\"table-column-150\" mat-header-cell *matHeaderCellDef mat-sort-header> {{'MOBILE' |\r\n                translate}}\r\n            </th>\r\n            <td class=\"table-column-150\" mat-cell *matCellDef=\"let row\"> {{row.mobileNo}} </td>\r\n        </ng-container>\r\n        <ng-container matColumnDef=\"website\">\r\n            <th class=\"table-column-150\" mat-header-cell *matHeaderCellDef mat-sort-header> {{'WEBSITE' | translate}}\r\n            </th>\r\n            <td class=\"table-column-150\" mat-cell *matCellDef=\"let row\"> {{row.website}} </td>\r\n        </ng-container>\r\n\r\n        <ng-container matColumnDef=\"action-search\" sticky>\r\n            <th class=\"table-column-50\" class=\"pr-5\" mat-header-cell *matHeaderCellDef> </th>\r\n        </ng-container>\r\n        <ng-container matColumnDef=\"customerName-search\" sticky>\r\n            <th class=\"table-column-300\" mat-header-cell *matHeaderCellDef>\r\n                <input type=\"text\" class=\"form-control w-90\" [(ngModel)]=\"NameFilter\">\r\n            </th>\r\n        </ng-container>\r\n        <ng-container matColumnDef=\"contactPerson-search\">\r\n            <th class=\"table-column-150\" mat-header-cell *matHeaderCellDef>\r\n                <input type=\"text\" class=\"form-control w-90\" [(ngModel)]=\"ContactFilter\">\r\n            </th>\r\n        </ng-container>\r\n        <ng-container matColumnDef=\"email-search\">\r\n            <th class=\"table-column-200\" mat-header-cell *matHeaderCellDef>\r\n                <input type=\"text\" class=\"form-control w-90\" [(ngModel)]=\"EmailFilter\">\r\n            </th>\r\n        </ng-container>\r\n        <ng-container matColumnDef=\"mobileNo-search\">\r\n            <th class=\"table-column-150\" mat-header-cell *matHeaderCellDef>\r\n                <input type=\"text\" class=\"form-control w-90\" [(ngModel)]=\"MobileOrPhoneFilter\">\r\n            </th>\r\n        </ng-container>\r\n        <ng-container matColumnDef=\"website-search\">\r\n            <th class=\"table-column-150\" mat-header-cell *matHeaderCellDef>\r\n                <input type=\"text\" class=\"form-control w-90\" [(ngModel)]=\"WebsiteFilter\">\r\n            </th>\r\n        </ng-container>\r\n        <ng-container matColumnDef=\"footer\">\r\n            <td mat-footer-cell colspan=\"8\" *matFooterCellDef>\r\n                <mat-paginator [length]=\"customerResource.totalCount\" [pageSize]=\"customerResource.pageSize\"\r\n                    [pageSizeOptions]=\"[10, 20, 30]\">\r\n                </mat-paginator>\r\n            </td>\r\n        </ng-container>\r\n\r\n        <ng-container matColumnDef=\"expandedDetail\">\r\n            <td mat-cell *matCellDef=\"let customer\" [attr.colspan]=\"displayedColumns.length\">\r\n                <ng-container *ngIf=\"customer == expandedElement\">\r\n                    <div class=\"example-element-detail\"\r\n                        [@detailExpand]=\"customer == expandedElement ? 'expanded' : 'collapsed'\">\r\n                        <div class=\"inner-table mat-elevation-z8\">\r\n                            <app-customer-so-list [customerId]=\"customer.id\">\r\n                            </app-customer-so-list>\r\n                        </div>\r\n                    </div>\r\n                </ng-container>\r\n            </td>\r\n        </ng-container>\r\n        <tr *matNoDataRow>\r\n            <td colspan=\"9\">\r\n                <span class=\"p-4 mt-4\">\r\n                    <b> {{'NO_DATA_FOUND' | translate}}</b>\r\n                </span>\r\n            </td>\r\n        </tr>\r\n        <tr mat-header-row *matHeaderRowDef=\"displayedColumns;sticky: true\"></tr>\r\n        <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\"></tr>\r\n        <tr mat-header-row\r\n            *matHeaderRowDef=\"['action-search','customerName-search','contactPerson-search', 'email-search','mobileNo-search','website-search'];sticky: true\"\r\n            class=\"example-second-header-row\"> </tr>\r\n        <tr mat-footer-row *matFooterRowDef=\"columnsToDisplay;sticky: true\"></tr>\r\n        <tr mat-row *matRowDef=\"let row; columns: ['expandedDetail']\" class=\"example-detail-row\"></tr>\r\n    </table>\r\n</div>","import { Component, Input, OnChanges, SimpleChanges, ViewChild } from '@angular/core';\r\nimport { MatPaginator } from '@angular/material/paginator';\r\nimport { MatSort } from '@angular/material/sort';\r\nimport { ResponseHeader } from '@core/domain-classes/response-header';\r\nimport { SalesOrder } from '@core/domain-classes/sales-order';\r\nimport { SalesOrderResourceParameter } from '@core/domain-classes/sales-order-resource-parameter';\r\nimport { TranslationService } from '@core/services/translation.service';\r\nimport { merge, Observable } from 'rxjs';\r\nimport { tap } from 'rxjs/operators';\r\nimport { BaseComponent } from 'src/app/base.component';\r\nimport { SalesOrderDataSource } from 'src/app/sales-order/sales-order-datasource';\r\nimport { SalesOrderService } from 'src/app/sales-order/sales-order.service';\r\n\r\n@Component({\r\n  selector: 'app-customer-so-list',\r\n  templateUrl: './customer-so-list.component.html',\r\n  styleUrls: ['./customer-so-list.component.scss']\r\n})\r\nexport class CustomerSoListComponent extends BaseComponent implements OnChanges {\r\n  @Input() customerId: string;\r\n  dataSource: SalesOrderDataSource;\r\n  saleOrders: SalesOrder[] = [];\r\n  displayedColumns: string[] = ['soCreatedDate', 'orderNumber',  'totalDiscount', 'totalTax', 'totalAmount','paymentStatus'];\r\n  footerToDisplayed: string[] = ['footer'];\r\n  salesOrderResource: SalesOrderResourceParameter;\r\n  loading$: Observable<boolean>;\r\n  @ViewChild(MatPaginator) paginator: MatPaginator;\r\n  @ViewChild(MatSort) sort: MatSort;\r\n\r\n\r\n  constructor(\r\n    private salesOrderService: SalesOrderService,\r\n    public translationService: TranslationService) {\r\nsuper(translationService);\r\n    this.getLangDir();\r\n  }\r\n\r\n  ngOnChanges(changes: SimpleChanges): void {\r\n    if (changes['customerId']) {\r\n      this.getSalesOrder();\r\n    }\r\n  }\r\n\r\n  getSalesOrder(): void {\r\n    this.salesOrderResource = new SalesOrderResourceParameter();\r\n    this.salesOrderResource.pageSize = 5;\r\n    this.salesOrderResource.orderBy = 'soCreatedDate asc'\r\n    this.salesOrderResource.customerId = this.customerId;\r\n    this.dataSource = new SalesOrderDataSource(this.salesOrderService);\r\n    this.dataSource.loadData(this.salesOrderResource);\r\n    this.getResourceParameter();\r\n  }\r\n\r\n  ngAfterViewInit() {\r\n    this.sort.sortChange.subscribe(() => this.paginator.pageIndex = 0);\r\n    this.sub$.sink = merge(this.sort.sortChange, this.paginator.page)\r\n      .pipe(\r\n        tap(() => {\r\n          this.salesOrderResource.skip = this.paginator.pageIndex * this.paginator.pageSize;\r\n          this.salesOrderResource.pageSize = this.paginator.pageSize;\r\n          this.salesOrderResource.orderBy = this.sort.active + ' ' + this.sort.direction;\r\n          this.dataSource.loadData(this.salesOrderResource);\r\n        })\r\n      )\r\n      .subscribe();\r\n  }\r\n\r\n  getResourceParameter() {\r\n    this.sub$.sink = this.dataSource.responseHeaderSubject$\r\n      .subscribe((c: ResponseHeader) => {\r\n        if (c) {\r\n          this.salesOrderResource.pageSize = c.pageSize;\r\n          this.salesOrderResource.skip = c.skip;\r\n          this.salesOrderResource.totalCount = c.totalCount;\r\n        }\r\n      });\r\n  }\r\n}\r\n","<div class=\"page-header-main\">\r\n    <div class=\"row align-items-center justify-content-between\">\r\n        <div class=\"col-md-auto col-sm-auto\">\r\n            <div class=\"content-header\">\r\n                <h1>{{'SALES_ORDERS' | translate}}</h1>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>\r\n<div class=\"loading-shade\" *ngIf=\"dataSource.loading$ | async\">\r\n    <mat-spinner></mat-spinner>\r\n</div>\r\n<div class=\"row\">\r\n    <div class=\"col-sm-12\">\r\n        <div class=\"table-responsive\">\r\n            <table [dir]=\"langDir\" mat-table [dataSource]=\"dataSource\" multiTemplateDataRows class=\"table table-bordered table-hover\"\r\n                matSort matSortActive=\"soCreatedDate\">\r\n                <ng-container matColumnDef=\"soCreatedDate\">\r\n                    <th class=\"table-column-100\" mat-header-cell *matHeaderCellDef mat-sort-header> {{'CREATED_DATE' |\r\n                        translate}}\r\n                    </th>\r\n                    <td class=\"table-column-100\" mat-cell *matCellDef=\"let so\"> {{so.soCreatedDate |\r\n                        utcToLocalTime:'shortDate' }} </td>\r\n                </ng-container>\r\n                <ng-container matColumnDef=\"orderNumber\">\r\n                    <th class=\"table-column-150\" mat-header-cell *matHeaderCellDef mat-sort-header> {{'ORDER_NUMBER' |\r\n                        translate}}\r\n                    </th>\r\n                    <td class=\"table-column-150\" mat-cell *matCellDef=\"let so\">\r\n                        <a [routerLink]=\"['/sales-order/detail',so.id]\">{{so.orderNumber}} </a>\r\n                    </td>\r\n                </ng-container>\r\n                <ng-container matColumnDef=\"paymentStatus\">\r\n                    <th class=\"table-column-150\" mat-header-cell *matHeaderCellDef mat-sort-header> {{'PAYMENT_STATUS' |\r\n                        translate}}</th>\r\n                    <td mat-cell *matCellDef=\"let so\" style=\"text-align: center;\">\r\n                        <span class=\"badge-pill\" [ngClass]=\"{'badge-success': so.paymentStatus == 0 ,\r\n                              'badge-danger' : so.paymentStatus == 1,\r\n                              'badge-warning' : so.paymentStatus == 2}\">\r\n                            {{so.paymentStatus | paymentStatus }}</span>\r\n                    </td>\r\n                </ng-container>\r\n                <ng-container matColumnDef=\"totalDiscount\">\r\n                    <th class=\"table-column-150\" mat-header-cell *matHeaderCellDef mat-sort-header>\r\n                        {{'TOTAL_DISCOUNT' | translate}}\r\n                    </th>\r\n                    <td class=\"table-column-150\" mat-cell *matCellDef=\"let so\">\r\n                        {{so.totalDiscount | customCurrency }}\r\n                    </td>\r\n                </ng-container>\r\n                <ng-container matColumnDef=\"totalTax\">\r\n                    <th mat-header-cell *matHeaderCellDef mat-sort-header> {{'TOTAL_TAX' | translate }} </th>\r\n                    <td mat-cell *matCellDef=\"let so\">\r\n                        {{so.totalTax | customCurrency }}\r\n                    </td>\r\n                </ng-container>\r\n                <ng-container matColumnDef=\"totalAmount\">\r\n                    <th mat-header-cell *matHeaderCellDef mat-sort-header> {{'TOTAL_AMOUNT' | translate}} </th>\r\n                    <td mat-cell *matCellDef=\"let so\">\r\n                        {{so.totalAmount | customCurrency }}\r\n                    </td>\r\n                </ng-container>\r\n                <ng-container matColumnDef=\"footer\">\r\n                    <td mat-footer-cell colspan=\"7\" *matFooterCellDef>\r\n                        <mat-paginator [length]=\"salesOrderResource.totalCount\" [pageSize]=\"salesOrderResource.pageSize\"\r\n                            [pageSizeOptions]=\"[5, 10, 15]\">\r\n                        </mat-paginator>\r\n                    </td>\r\n                </ng-container>\r\n\r\n                <tr mat-header-row *matHeaderRowDef=\"displayedColumns;sticky: true\"></tr>\r\n                <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\"></tr>\r\n                <tr mat-footer-row *matFooterRowDef=\"footerToDisplayed;sticky: true\"></tr>\r\n            </table>\r\n            <ng-container *ngIf=\"dataSource.count === 0\">\r\n                <div class=\"row\">\r\n                    <div class=\"col-sm-12 ml-4 mt-3\">\r\n                        <label class=\"font-weight-bold\"> {{'NO_DATA_FOUND' | translate}}</label>\r\n                    </div>\r\n                </div>\r\n            </ng-container>\r\n        </div>\r\n    </div>\r\n</div>","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport { CustomerListComponent } from './customer-list/customer-list.component';\r\nimport { CustomerDetailComponent } from './customer-detail/customer-detail.component';\r\nimport { CustomerResolverService } from './customer-detail/customer-detail-resolver.service';\r\nimport { AuthGuard } from '@core/security/auth.guard';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: '',\r\n    component: CustomerListComponent,\r\n    data: { claimType: 'CUST_VIEW_CUSTOMERS' },\r\n    canActivate: [AuthGuard]\r\n  },\r\n  {\r\n    path: ':id',\r\n    component: CustomerDetailComponent,\r\n    resolve: {\r\n      customer: CustomerResolverService\r\n    },\r\n    data: { claimType: ['CUST_ADD_CUSTOMER', 'CUST_UPDATE_CUSTOMER'] },\r\n    canActivate: [AuthGuard]\r\n  }\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule],\r\n})\r\nexport class CustomerRoutingModule { }\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport { CustomerRoutingModule } from './customer-routing.module';\r\nimport { CustomerListComponent } from './customer-list/customer-list.component';\r\nimport { CustomerDetailComponent } from './customer-detail/customer-detail.component';\r\nimport { CustomerResolverService } from './customer-detail/customer-detail-resolver.service';\r\nimport { SharedModule } from '@shared/shared.module';\r\nimport { MatSelectModule } from '@angular/material/select';\r\nimport { MatAutocompleteModule } from '@angular/material/autocomplete';\r\nimport { MatCardModule } from '@angular/material/card';\r\nimport { MatPaginatorModule } from '@angular/material/paginator';\r\nimport { MatSortModule } from '@angular/material/sort';\r\nimport { MatProgressSpinnerModule } from '@angular/material/progress-spinner';\r\nimport { MatTableModule } from '@angular/material/table';\r\nimport { MatInputModule } from '@angular/material/input';\r\nimport { MatMenuModule } from '@angular/material/menu';\r\nimport { MatDialogModule } from '@angular/material/dialog';\r\nimport { MatIconModule } from '@angular/material/icon';\r\nimport { MatButtonModule } from '@angular/material/button';\r\nimport { CustomerSoListComponent } from './customer-list/customer-so-list/customer-so-list.component';\r\nimport { AngularEditorModule } from '@kolkov/angular-editor';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    CustomerListComponent,\r\n    CustomerDetailComponent,\r\n    CustomerSoListComponent,],\r\n  imports: [\r\n    CommonModule,\r\n    CustomerRoutingModule,\r\n    FormsModule,\r\n    ReactiveFormsModule,\r\n    SharedModule,\r\n    AngularEditorModule,\r\n    MatSelectModule,\r\n    MatAutocompleteModule,\r\n    MatCardModule,\r\n    MatPaginatorModule,\r\n    MatSortModule,\r\n    MatProgressSpinnerModule,\r\n    MatTableModule,\r\n    MatInputModule,\r\n    MatMenuModule,\r\n    MatDialogModule,\r\n    MatIconModule,\r\n    MatButtonModule\r\n  ],\r\n  providers:[\r\n    CustomerResolverService\r\n  ]\r\n})\r\nexport class CustomerModule {\r\n\r\n}\r\n","\"use strict\";\r\nexports.__esModule = true;\r\nvar Guid = /** @class */ (function () {\r\n    function Guid(guid) {\r\n        if (!guid) {\r\n            throw new TypeError(\"Invalid argument; `value` has no value.\");\r\n        }\r\n        this.value = Guid.EMPTY;\r\n        if (guid && Guid.isGuid(guid)) {\r\n            this.value = guid;\r\n        }\r\n    }\r\n    Guid.isGuid = function (guid) {\r\n        var value = guid.toString();\r\n        return guid && (guid instanceof Guid || Guid.validator.test(value));\r\n    };\r\n    Guid.create = function () {\r\n        return new Guid([Guid.gen(2), Guid.gen(1), Guid.gen(1), Guid.gen(1), Guid.gen(3)].join(\"-\"));\r\n    };\r\n    Guid.createEmpty = function () {\r\n        return new Guid(\"emptyguid\");\r\n    };\r\n    Guid.parse = function (guid) {\r\n        return new Guid(guid);\r\n    };\r\n    Guid.raw = function () {\r\n        return [Guid.gen(2), Guid.gen(1), Guid.gen(1), Guid.gen(1), Guid.gen(3)].join(\"-\");\r\n    };\r\n    Guid.gen = function (count) {\r\n        var out = \"\";\r\n        for (var i = 0; i < count; i++) {\r\n            // tslint:disable-next-line:no-bitwise\r\n            out += (((1 + Math.random()) * 0x10000) | 0).toString(16).substring(1);\r\n        }\r\n        return out;\r\n    };\r\n    Guid.prototype.equals = function (other) {\r\n        // Comparing string `value` against provided `guid` will auto-call\r\n        // toString on `guid` for comparison\r\n        return Guid.isGuid(other) && this.value === other.toString();\r\n    };\r\n    Guid.prototype.isEmpty = function () {\r\n        return this.value === Guid.EMPTY;\r\n    };\r\n    Guid.prototype.toString = function () {\r\n        return this.value;\r\n    };\r\n    Guid.prototype.toJSON = function () {\r\n        return {\r\n            value: this.value\r\n        };\r\n    };\r\n    Guid.validator = new RegExp(\"^[a-z0-9]{8}-[a-z0-9]{4}-[a-z0-9]{4}-[a-z0-9]{4}-[a-z0-9]{12}$\", \"i\");\r\n    Guid.EMPTY = \"00000000-0000-0000-0000-000000000000\";\r\n    return Guid;\r\n}());\r\nexports.Guid = Guid;\r\n"],"names":["exports","__esModule","Guid","guid","TypeError","value","EMPTY","isGuid","toString","validator","test","create","gen","join","createEmpty","parse","raw","count","out","i","Math","random","substring","prototype","equals","other","isEmpty","toJSON","RegExp"],"sourceRoot":"webpack:///","x_google_ignoreList":[10]}