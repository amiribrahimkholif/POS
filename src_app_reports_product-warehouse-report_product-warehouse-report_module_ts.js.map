{"version":3,"file":"src_app_reports_product-warehouse-report_product-warehouse-report_module_ts.js","mappings":"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","sources":["./src/app/reports/product-warehouse-report/product-warehouse-item/product-warehouse-item.component.ts","./src/app/reports/product-warehouse-report/product-warehouse-item/product-warehouse-item.component.html","./src/app/reports/product-warehouse-report/product-warehouse-report-routing.module.ts","./src/app/reports/product-warehouse-report/product-warehouse-report.component.ts","./src/app/reports/product-warehouse-report/product-warehouse-report.component.html","./src/app/reports/product-warehouse-report/product-warehouse-report.module.ts","./src/app/reports/product-warehouse-report/product-warehouse-report.service.ts"],"sourcesContent":["import { Component, Input, OnChanges, OnInit, SimpleChanges } from '@angular/core';\r\nimport { Product } from '@core/domain-classes/product';\r\nimport { ProductShort } from '@core/domain-classes/productshort';\r\nimport { TranslationService } from '@core/services/translation.service';\r\nimport { BaseComponent } from 'src/app/base.component';\r\nimport { ProductWarehouseReportService } from '../product-warehouse-report.service';\r\n\r\n@Component({\r\n  selector: 'app-product-warehouse-item',\r\n  templateUrl: './product-warehouse-item.component.html',\r\n  styleUrls: ['./product-warehouse-item.component.scss']\r\n})\r\nexport class ProductWarehouseItemComponent extends BaseComponent implements  OnInit, OnChanges {\r\n  @Input() warehouse: Product;\r\n  warehouseInventory: ProductShort[] = [];\r\n  isLoading = false;\r\n  displayedColumns: string[] = ['name','stock'];\r\n\r\n  constructor(private productWarehouseReportService: ProductWarehouseReportService,public translationService:TranslationService) {\r\n    super(translationService);\r\n    this.getLangDir();\r\n   }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n  ngOnChanges(changes: SimpleChanges): void {\r\n    if (changes['warehouse']) {\r\n      this.getWarehouseProduct();\r\n    }\r\n  }\r\n\r\n  getWarehouseProduct() {\r\n    this.isLoading = true;\r\n    this.productWarehouseReportService.getProductWarehouse(this.warehouse.id)\r\n      .subscribe((data: ProductShort[]) => {\r\n        this.isLoading = false;\r\n        this.warehouseInventory = data;\r\n      }, () => this.isLoading = false)\r\n  }\r\n\r\n}\r\n","<div class=\"page-header-main\">\r\n  <div class=\"row align-items-center\">\r\n      <div class=\"col-md-auto col-sm-auto\">\r\n          <div class=\"content-header\">\r\n              <h1>{{\"WAREHOUSE\" | translate}}</h1>\r\n          </div>\r\n      </div>\r\n  </div>\r\n</div>\r\n<div class=\"loading-shade\" *ngIf=\"isLoading\">\r\n  <mat-spinner></mat-spinner>\r\n</div>\r\n\r\n<div class=\"table-responsive\">\r\n  <table [dir]=\"langDir\" mat-table [dataSource]=\"warehouseInventory\" class=\"table table-bordered table-hover\">\r\n      <ng-container matColumnDef=\"name\">\r\n          <th mat-header-cell *matHeaderCellDef>{{\"NAME\" | translate}}</th>\r\n          <td mat-cell *matCellDef=\"let element\">\r\n              {{element.name}}\r\n          </td>\r\n      </ng-container>\r\n      <ng-container matColumnDef=\"stock\">\r\n          <th mat-header-cell *matHeaderCellDef>  {{\"STOCK\" | translate}} </th>\r\n          <td mat-cell *matCellDef=\"let element\">\r\n              {{element.stock}}&nbsp;{{element.unitCode}}\r\n          </td>\r\n      </ng-container>\r\n      <tr mat-header-row *matHeaderRowDef=\"displayedColumns;sticky: true\"></tr>\r\n      <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\" [class.bg-warning1]=\"row.status===1\"></tr>\r\n  </table>\r\n</div>\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { RouterModule, Routes } from '@angular/router';\r\nimport { ProductWarehouseReportComponent } from './product-warehouse-report.component';\r\nimport { AuthGuard } from '@core/security/auth.guard';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: '',\r\n    component: ProductWarehouseReportComponent,\r\n    data: { claimType: 'REP_VIEW_WAR_REP' },\r\n    canActivate: [AuthGuard],\r\n  },\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule],\r\n})\r\nexport class ProductWarehouseReportRoutingModule {}\r\n","import {\r\n  animate,\r\n  state,\r\n  style,\r\n  transition,\r\n  trigger,\r\n} from '@angular/animations';\r\nimport { ChangeDetectorRef, Component, OnInit } from '@angular/core';\r\nimport { Product } from '@core/domain-classes/product';\r\nimport { ProductShort } from '@core/domain-classes/productshort';\r\nimport { SalesOrder } from '@core/domain-classes/sales-order';\r\nimport { TranslationService } from '@core/services/translation.service';\r\nimport { BaseComponent } from 'src/app/base.component';\r\nimport { ProductWarehouseReportService } from './product-warehouse-report.service';\r\n\r\n@Component({\r\n  selector: 'app-product-warehouse-report',\r\n  templateUrl: './product-warehouse-report.component.html',\r\n  styleUrls: ['./product-warehouse-report.component.scss'],\r\n  animations: [\r\n    trigger('detailExpand', [\r\n      state('collapsed', style({ height: '0px', minHeight: '0' })),\r\n      state('expanded', style({ height: '*' })),\r\n      transition(\r\n        'expanded <=> collapsed',\r\n        animate('225ms cubic-bezier(0.4, 0.0, 0.2, 1)')\r\n      ),\r\n    ]),\r\n  ],\r\n})\r\nexport class ProductWarehouseReportComponent extends BaseComponent implements OnInit\r\n{\r\n  displayedColumns: string[] = ['action', 'name', 'stock'];\r\n  expandedElement: SalesOrder | null;\r\n  products: Product[] = [];\r\n  waehouseList: ProductShort[] = [];\r\n\r\n  constructor(\r\n    private cd: ChangeDetectorRef,\r\n    public translationService: TranslationService,\r\n    private productWarehouseReportService: ProductWarehouseReportService\r\n  ) {\r\n    super(translationService);\r\n    this.getLangDir();\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.getWarehouseProduct();\r\n  }\r\n\r\n  getWarehouseProduct() {\r\n    return this.productWarehouseReportService.getWarehouseProduct().subscribe(\r\n      (resp) => {\r\n        if (resp) {\r\n          this.waehouseList = resp;\r\n        }\r\n      },\r\n      (err) => {}\r\n    );\r\n  }\r\n\r\n  toggleRow(element: SalesOrder) {\r\n    this.expandedElement = this.expandedElement === element ? null : element;\r\n    this.cd.detectChanges();\r\n  }\r\n}\r\n","<div class=\"page-header-main\">\r\n  <div class=\"row align-items-center justify-content-between\">\r\n    <div class=\"col-md-auto col-sm-auto\">\r\n      <div class=\"content-header\">\r\n        <h1>{{'PRODUCT_WAREHOUSE_REPORT' | translate}}</h1>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</div>\r\n<!-- <div class=\"loading-shade\" *ngIf=\"waehouseList.length == 0\">\r\n  <mat-spinner></mat-spinner>\r\n</div> -->\r\n<div class=\"row\">\r\n  <div class=\"col-sm-12\">\r\n    <div class=\"table-responsive\">\r\n      <table [dir]=\"langDir\" mat-table [dataSource]=\"waehouseList\" multiTemplateDataRows\r\n        class=\"table table-bordered table-hover grid-height\" matSort>\r\n        <ng-container matColumnDef=\"action\">\r\n          <th class=\"table-column-100\" mat-header-cell *matHeaderCellDef>\r\n          </th>\r\n          <td class=\"table-column-100\" mat-cell *matCellDef=\"let so\">\r\n            <button mat-icon-button (click)=\"toggleRow(so)\">\r\n              <mat-icon *ngIf=\"so != expandedElement\">chevron_right</mat-icon>\r\n              <mat-icon *ngIf=\"so == expandedElement\">expand_more</mat-icon>\r\n            </button>\r\n          </td>\r\n        </ng-container>\r\n\r\n        <ng-container matColumnDef=\"name\">\r\n          <th class=\"table-column-300\" mat-header-cell  *matHeaderCellDef> {{'NAME' | translate}} </th>\r\n          <td class=\"table-column-300\" mat-cell *matCellDef=\"let so\">\r\n            {{so.name}}\r\n          </td>\r\n        </ng-container>\r\n        <ng-container matColumnDef=\"stock\">\r\n          <th class=\"table-column-300\" mat-header-cell *matHeaderCellDef> {{'STOCK' |\r\n            translate}} </th>\r\n          <td class=\"table-column-300\" mat-cell *matCellDef=\"let so\">\r\n            {{so.stock}} &nbsp;{{so.unitCode}}\r\n          </td>\r\n        </ng-container>\r\n        <ng-container matColumnDef=\"expandedDetail\">\r\n          <td mat-cell *matCellDef=\"let soObject\" [attr.colspan]=\"displayedColumns.length\">\r\n            <ng-container *ngIf=\"soObject == expandedElement\">\r\n              <div class=\"example-element-detail\"\r\n                [@detailExpand]=\"soObject == expandedElement ? 'expanded' : 'collapsed'\">\r\n                <div class=\"inner-table mat-elevation-z8\">\r\n                  <app-product-warehouse-item [warehouse]=\"soObject\">\r\n                  </app-product-warehouse-item>\r\n                </div>\r\n              </div>\r\n            </ng-container>\r\n          </td>\r\n        </ng-container>\r\n        <tr *matNoDataRow>\r\n          <td colspan=\"9\">\r\n            <span class=\"p-4 mt-4\">\r\n              <b> {{'NO_DATA_FOUND' | translate}}</b>\r\n            </span>\r\n          </td>\r\n        </tr>\r\n        <tr mat-header-row *matHeaderRowDef=\"displayedColumns;sticky: true\"></tr>\r\n        <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\" [class.bg-warning1]=\"row.status===1\"></tr>\r\n        <tr mat-row *matRowDef=\"let row; columns: ['expandedDetail']\" class=\"example-detail-row\"></tr>\r\n      </table>\r\n    </div>\r\n  </div>\r\n</div>\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { ProductWarehouseReportComponent } from './product-warehouse-report.component';\r\nimport { ProductWarehouseReportRoutingModule } from './product-warehouse-report-routing.module';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport { MatButtonModule } from '@angular/material/button';\r\nimport { MatCardModule } from '@angular/material/card';\r\nimport { MatCheckboxModule } from '@angular/material/checkbox';\r\nimport { MatNativeDateModule } from '@angular/material/core';\r\nimport { MatDatepickerModule } from '@angular/material/datepicker';\r\nimport { MatDividerModule } from '@angular/material/divider';\r\nimport { MatFormFieldModule } from '@angular/material/form-field';\r\nimport { MatIconModule } from '@angular/material/icon';\r\nimport { MatInputModule } from '@angular/material/input';\r\nimport { MatMenuModule } from '@angular/material/menu';\r\nimport { MatPaginatorModule } from '@angular/material/paginator';\r\nimport { MatProgressSpinnerModule } from '@angular/material/progress-spinner';\r\nimport { MatSelectModule } from '@angular/material/select';\r\nimport { MatSortModule } from '@angular/material/sort';\r\nimport { MatTableModule } from '@angular/material/table';\r\nimport { SharedModule } from '@shared/shared.module';\r\nimport { OwlDateTimeModule, OwlNativeDateTimeModule } from 'ng-pick-datetime-ex';\r\nimport { ProductWarehouseItemComponent } from './product-warehouse-item/product-warehouse-item.component';\r\n\r\n\r\n\r\n@NgModule({\r\n  declarations: [\r\n    ProductWarehouseReportComponent,\r\n    ProductWarehouseItemComponent\r\n  ],\r\n  imports: [\r\n    CommonModule,\r\n    ProductWarehouseReportRoutingModule,\r\n    FormsModule,\r\n    SharedModule,\r\n    MatTableModule,\r\n    MatSortModule,\r\n    MatIconModule,\r\n    MatButtonModule,\r\n    MatProgressSpinnerModule,\r\n  ]\r\n})\r\nexport class ProductWarehouseReportModule { }\r\n","import { HttpClient } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { ProductShort } from '@core/domain-classes/productshort';\r\nimport { Observable } from 'rxjs';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class ProductWarehouseReportService {\r\n  constructor(private http: HttpClient) {}\r\n\r\n  getWarehouseProduct(): Observable<ProductShort[]> {\r\n    const url = 'product/bywarehouse';\r\n    return this.http.get<ProductShort[]>(url);\r\n  }\r\n\r\n  getProductWarehouse(productId: string): Observable<ProductShort[]> {\r\n    const url = `warehouse/product/${productId}`;\r\n    return this.http.get<ProductShort[]>(url);\r\n  }\r\n}\r\n"],"names":[],"sourceRoot":"webpack:///","x_google_ignoreList":[]}