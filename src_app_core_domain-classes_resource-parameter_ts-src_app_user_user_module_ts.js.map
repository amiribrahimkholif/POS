{"version":3,"file":"src_app_core_domain-classes_resource-parameter_ts-src_app_user_user_module_ts.js","mappings":"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","sources":["./src/app/core/domain-classes/resource-parameter.ts","./src/app/user/manage-user/manage-user.component.ts","./src/app/user/manage-user/manage-user.component.html","./src/app/user/reset-password/reset-password.component.ts","./src/app/user/reset-password/reset-password.component.html","./src/app/user/user-detail-resolver.ts","./src/app/user/user-list/user-datasource.ts","./src/app/user/user-list/user-list.component.ts","./src/app/user/user-list/user-list.component.html","./src/app/user/user-permission-presentation/user-permission-presentation.component.ts","./src/app/user/user-permission-presentation/user-permission-presentation.component.html","./src/app/user/user-permission/user-permission.component.ts","./src/app/user/user-permission/user-permission.component.html","./src/app/user/user-routing.module.ts","./src/app/user/user.module.ts"],"sourcesContent":["export abstract class ResourceParameter {\r\n  fields = '';\r\n  orderBy = '';\r\n  searchQuery = '';\r\n  pageSize = 30;\r\n  skip = 0;\r\n  name = '';\r\n  totalCount = 0;\r\n}\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { FormArray, UntypedFormBuilder, UntypedFormGroup, Validators } from '@angular/forms';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { Role } from '@core/domain-classes/role';\r\nimport { User } from '@core/domain-classes/user';\r\nimport { CommonService } from '@core/services/common.service';\r\nimport { TranslationService } from '@core/services/translation.service';\r\nimport { environment } from '@environments/environment';\r\nimport { ToastrService } from 'ngx-toastr';\r\nimport { BaseComponent } from 'src/app/base.component';\r\nimport { UserService } from '../user.service';\r\n\r\n\r\n@Component({\r\n  selector: 'app-manage-user',\r\n  templateUrl: './manage-user.component.html',\r\n  styleUrls: ['./manage-user.component.scss']\r\n})\r\nexport class ManageUserComponent extends BaseComponent implements OnInit {\r\n  user: User;\r\n  userForm: UntypedFormGroup;\r\n  roleList: Role[];\r\n  isEditMode = false;\r\n  selectedRoles: Role[] = [];\r\n  imgSrc: string | ArrayBuffer;\r\n  isImageUpdate: boolean = false;\r\n  constructor(private fb: UntypedFormBuilder,\r\n    private router: Router,\r\n    private activeRoute: ActivatedRoute,\r\n    private userService: UserService,\r\n    private toastrService: ToastrService,\r\n    private commonService: CommonService,\r\n    public translationService: TranslationService) {\r\n    super(translationService);\r\n    this.getLangDir();\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.createUserForm();\r\n    this.sub$.sink = this.activeRoute.data.subscribe(\r\n      (data: { user: User }) => {\r\n        if (data.user) {\r\n          this.isEditMode = true;\r\n          this.userForm.patchValue(data.user);\r\n          this.user = data.user;\r\n          if (this.user.profilePhoto) {\r\n            this.imgSrc = environment.apiUrl + this.user.profilePhoto;\r\n          }\r\n        } else {\r\n          this.userForm.get('password').setValidators([Validators.required, Validators.minLength(6)]);\r\n          this.userForm.get('confirmPassword').setValidators([Validators.required]);\r\n        }\r\n      });\r\n    this.getRoles();\r\n  }\r\n\r\n  createUserForm() {\r\n    this.userForm = this.fb.group({\r\n      id: [''],\r\n      firstName: ['', [Validators.required]],\r\n      lastName: ['', [Validators.required]],\r\n      email: ['', [Validators.required, Validators.email]],\r\n      phoneNumber: ['', [Validators.required]],\r\n      password: [''],\r\n      confirmPassword: [''],\r\n      address: [''],\r\n      isActive: [true],\r\n    }, {\r\n      validator: this.checkPasswords\r\n    });\r\n  }\r\n\r\n  checkPasswords(group: UntypedFormGroup) {\r\n    let pass = group.get('password').value;\r\n    let confirmPass = group.get('confirmPassword').value;\r\n    return pass === confirmPass ? null : { notSame: true }\r\n  }\r\n\r\n  onFileSelect($event) {\r\n    const fileSelected = $event.target.files[0];\r\n    if (!fileSelected) {\r\n      return;\r\n    }\r\n    const mimeType = fileSelected.type;\r\n    if (mimeType.match(/image\\/*/) == null) {\r\n      return;\r\n    }\r\n    const reader = new FileReader();\r\n    reader.readAsDataURL(fileSelected);\r\n    // tslint:disable-next-line: variable-name\r\n    reader.onload = (_event) => {\r\n      this.imgSrc = reader.result;\r\n      this.isImageUpdate = true;\r\n      $event.target.value = '';\r\n    }\r\n  }\r\n\r\n  onRemoveImage() {\r\n    this.isImageUpdate = true;\r\n    this.imgSrc = '';\r\n  }\r\n\r\n  saveUser() {\r\n    if (this.userForm.valid) {\r\n      const user = this.createBuildObject();\r\n      if (this.isEditMode) {\r\n        this.sub$.sink = this.userService.updateUser(user).subscribe(() => {\r\n          this.toastrService.success(this.translationService.getValue('USER_UPDATED_SUCCESSFULLY'));\r\n          this.router.navigate(['/users']);\r\n        });\r\n      } else {\r\n        this.sub$.sink = this.userService.addUser(user).subscribe(() => {\r\n          this.toastrService.success(this.translationService.getValue('USER_CREATED_SUCCESSFULLY'));\r\n          this.router.navigate(['/users']);\r\n        });\r\n      }\r\n    } else {\r\n      this.userForm.markAllAsTouched();\r\n    }\r\n  }\r\n\r\n  createBuildObject(): User {\r\n    const userId = this.userForm.get('id').value;\r\n    const user: User = {\r\n      id: userId,\r\n      firstName: this.userForm.get('firstName').value,\r\n      lastName: this.userForm.get('lastName').value,\r\n      email: this.userForm.get('email').value,\r\n      phoneNumber: this.userForm.get('phoneNumber').value,\r\n      password: this.userForm.get('password').value,\r\n      userName: this.userForm.get('email').value,\r\n      isActive: this.userForm.get('isActive').value,\r\n      address: this.userForm.get('address').value,\r\n      userRoles: this.getSelectedRoles(),\r\n      isImageUpdate: this.isImageUpdate,\r\n      imgSrc: this.imgSrc as string\r\n    }\r\n    return user;\r\n  }\r\n\r\n  getSelectedRoles() {\r\n    return this.selectedRoles.map((role) => {\r\n      return {\r\n        userId: this.userForm.get('id').value,\r\n        roleId: role.id\r\n      }\r\n    })\r\n  }\r\n\r\n  getRoles() {\r\n    this.sub$.sink = this.commonService.getRoles().subscribe((roles: Role[]) => {\r\n      this.roleList = roles;\r\n      if (this.isEditMode) {\r\n        const selectedRoleIds = this.user.userRoles.map(c => c.roleId);\r\n        this.selectedRoles = this.roleList.filter(c => selectedRoleIds.indexOf(c.id) > -1);\r\n      }\r\n    });\r\n  }\r\n}\r\n","<div class=\"page-header-main\">\r\n  <div class=\"row align-items-center justify-content-between\">\r\n    <div class=\"col-md-auto col-sm-auto\">\r\n      <div class=\"content-header\">\r\n        <h1 *ngIf=\"!isEditMode\">{{'ADD_USER' | translate}}</h1>\r\n        <h1 *ngIf=\"isEditMode\">{{'EDIT_USER' | translate}}</h1>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</div>\r\n\r\n<form [formGroup]=\"userForm\">\r\n  <div class=\"row\">\r\n    <div class=\"col-md-9\">\r\n      <div class=\"form-row\">\r\n        <div class=\"col-md-6\">\r\n          <div class=\"form-row\">\r\n            <div class=\"col-md-6\">\r\n              <div class=\"form-group\">\r\n                <label class=\"text-danger\">{{'FIRST_NAME' | translate}}*</label>\r\n                <input formControlName=\"firstName\" class=\"form-control\" type=\"text\">\r\n                <div *ngIf=\"userForm.get('firstName').touched && userForm.get('firstName').errors\">\r\n                  <div class=\"text-danger\" *ngIf=\"userForm.get('firstName').errors?.required\">\r\n                    {{'FIRST_NAME_IS_REQUIRED' | translate}}\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n            <div class=\"col-md-6\">\r\n              <div class=\"form-group \">\r\n                <label class=\"text-danger\">{{'LAST_NAME' | translate}}*</label>\r\n                <input formControlName=\"lastName\" class=\"form-control\" type=\"text\">\r\n                <div *ngIf=\"userForm.get('lastName').touched && userForm.get('lastName').errors\">\r\n                  <div class=\"text-danger\" *ngIf=\"userForm.get('lastName').errors?.required\">\r\n                    {{'LAST_NAME_IS_REQUIRED' | translate}}\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div class=\"col-md-6\">\r\n          <div class=\"form-group \">\r\n            <label class=\"text-danger\">{{'MOBILE_NUMBER' | translate}} *</label>\r\n            <input formControlName=\"phoneNumber\" class=\"form-control\" type=\"number\">\r\n            <div *ngIf=\"userForm.get('phoneNumber').touched && userForm.get('phoneNumber').errors\">\r\n              <div class=\"text-danger\" *ngIf=\"userForm.get('phoneNumber').errors?.required\">\r\n                {{'MOBILE_IS_REQUIRED' | translate}}\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div class=\"col-md-6\">\r\n          <div class=\"form-group\">\r\n            <label class=\"text-danger\">{{'EMAIL' | translate}} *</label>\r\n            <input [attr.disabled]=\"isEditMode ? '' : null\" formControlName=\"email\" class=\"form-control\" type=\"email\">\r\n            <div *ngIf=\"userForm.get('email').touched && userForm.get('email').errors\">\r\n              <div class=\"text-danger\" *ngIf=\"userForm.get('email').errors?.required\">\r\n                {{'EMAIL_IS_REQUIRED' | translate}}\r\n              </div>\r\n              <div class=\"text-danger\" *ngIf=\"userForm.get('email').errors?.email\">\r\n                {{'PLEASE_ENTER_VALID_EMAIL' | translate}}\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div class=\"col-md-6\">\r\n          <div class=\"form-row\">\r\n            <div *ngIf=\"!isEditMode\" class=\"col-md-6\">\r\n              <div class=\"form-group\">\r\n                <label class=\"text-danger\">{{'PASSWORD' | translate}} *</label>\r\n                <input autocomplete=\"new-password\" formControlName=\"password\" class=\"form-control\" type=\"password\">\r\n                <div *ngIf=\"userForm.get('password').touched && userForm.get('password').errors\">\r\n                  <div class=\"text-danger\" *ngIf=\"userForm.get('password').errors?.required\">\r\n                    {{'PASSWORD_IS_REQUIRED' | translate}}\r\n                  </div>\r\n                  <div class=\"text-danger\" *ngIf=\"userForm.get('password').errors?.minlength\">\r\n                    {{'YOU_HAVE_TO_ENTER_AT_LEAST_6_DIGIT' | translate}}\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n            <div *ngIf=\"!isEditMode\" class=\"col-md-6\">\r\n              <div class=\"form-group\">\r\n                <label class=\"text-danger\">{{'CONFIRM_PASSWORD' | translate}} *</label>\r\n                <input autocomplete=\"new-password\" formControlName=\"confirmPassword\" class=\"form-control\"\r\n                  type=\"password\">\r\n                <div *ngIf=\"userForm.get('confirmPassword').touched && userForm.get('confirmPassword').errors\">\r\n                  <div class=\"text-danger\" *ngIf=\"userForm.get('confirmPassword').errors?.required\">\r\n                    {{'CONFIRM_PASSWORD_IS_REQUIRED' | translate}}\r\n                  </div>\r\n                </div>\r\n                <div class=\"text-danger\"\r\n                  *ngIf=\"userForm.get('confirmPassword').touched && userForm.hasError('notSame')\">\r\n                  {{'PASSWORDS_DO_NOT_MATCH' | translate}}\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div class=\"col-md-6\">\r\n          <div class=\"form-row\">\r\n            <div class=\"form-group col-md-9\">\r\n              <mat-label [dir]=\"langDir\">{{'ROLES' | translate}}</mat-label>\r\n              <mat-select [dir]=\"langDir\" class=\"form-control\" [(value)]=\"selectedRoles\" multiple>\r\n                <mat-select-trigger [dir]=\"langDir\">\r\n                  <span *ngIf=\"selectedRoles.length > 0\">\r\n                    {{selectedRoles[0].name}}\r\n                  </span>\r\n                  <span *ngIf=\"selectedRoles.length > 1\" class=\"example-additional-selection\">\r\n                    (+{{selectedRoles.length - 1}} {{selectedRoles.length === 2 ? 'other' : 'others'}})\r\n                  </span>\r\n                </mat-select-trigger>\r\n                <mat-option *ngFor=\"let role of roleList\" [value]=\"role\">{{role.name}}</mat-option>\r\n              </mat-select>\r\n            </div>\r\n            <div class=\"form-group col-md-3 status-switch mt-8\">\r\n              <mat-slide-toggle [dir]=\"langDir\" formControlName=\"isActive\">\r\n                <span *ngIf=\"userForm.get('isActive').value\">{{'ACTIVE' | translate}}</span>\r\n                <span *ngIf=\"!userForm.get('isActive').value\">{{'INACTIVE' | translate}}</span>\r\n              </mat-slide-toggle>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div class=\"col-md-12\">\r\n          <div class=\"row\">\r\n            <div class=\"col-md-6\">\r\n              <div class=\"form-group\">\r\n                <label>{{'ADDRESS' | translate}}</label>\r\n                <textarea formControlName=\"address\" class=\"form-control\"></textarea>\r\n              </div>\r\n\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n    <div class=\"col-md-3\">\r\n      <div class=\"row\">\r\n        <div class=\"col-md-12 text-center\">\r\n          <mat-card class=\"cus-mat-card\" [dir]=\"langDir\">\r\n            <input hidden (change)=\"onFileSelect($event)\" #fileInput name=\"logo\" type=\"file\" name=\"Profile Photo\"\r\n              fxFlex=\"30\">\r\n            <img *ngIf=\"imgSrc\" class=\"full-width\" [src]=\"imgSrc\" />\r\n            <img *ngIf=\"!imgSrc\" class=\"full-width\" src=\"../../../assets/images/user-profile.jpg\" />\r\n            <mat-card-actions [dir]=\"langDir\">\r\n              <button type=\"button\" *ngIf=\"!imgSrc\" class=\"btn btn-success btn-sm\" (click)=\"fileInput.click()\">\r\n                <i class=\"far fa-image\"></i> {{'ADD_PROFILE' | translate}}</button>\r\n              <button type=\"button\" *ngIf=\"imgSrc\" class=\"btn btn-success btn-sm mb-2\" (click)=\"fileInput.click()\">\r\n                <i class=\"far fa-image\"></i> {{'CHANGE_PROFILE' | translate}}</button>\r\n              <button *ngIf=\"imgSrc\" type=\"button\" (click)=\"onRemoveImage()\" class=\"btn btn-danger btn-sm\">\r\n                <i class=\"fas fa-trash-alt\"></i> {{'REMOVE_PROFILE' | translate}} </button>\r\n            </mat-card-actions>\r\n          </mat-card>\r\n        </div>\r\n      </div>\r\n    </div>\r\n    <div class=\"m-top-10 col-md-12\">\r\n      <ng-container *ngIf=\"isEditMode\">\r\n        <button *hasClaim=\"'USR_UPDATE_USER'\" class=\"btn btn-success btn-sm m-right-10\" (click)=\"saveUser()\"\r\n          cdkFocusInitial><i class=\"fas fa-save\"></i> {{'SAVE' | translate}}</button>\r\n      </ng-container>\r\n      <ng-container *ngIf=\"!isEditMode\">\r\n        <button *hasClaim=\"'USR_ADD_USER'\" class=\"btn btn-success btn-sm m-right-10\" (click)=\"saveUser()\"\r\n          cdkFocusInitial><i class=\"fas fa-save\"></i> {{'SAVE' | translate}}</button>\r\n      </ng-container>\r\n      <button type=\"button\" class=\"btn btn-danger btn-sm\" [routerLink]=\"['/users']\"><i class=\"fas fa-times-circle\"></i>\r\n        {{'CANCEL' | translate}}</button>\r\n    </div>\r\n  </div>\r\n</form>","import { Component, Inject, OnInit } from '@angular/core';\r\nimport { UntypedFormBuilder, UntypedFormGroup, Validators } from '@angular/forms';\r\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\r\nimport { User } from '@core/domain-classes/user';\r\nimport { TranslationService } from '@core/services/translation.service';\r\nimport { ToastrService } from 'ngx-toastr';\r\nimport { BaseComponent } from 'src/app/base.component';\r\nimport { UserService } from '../user.service';\r\n\r\n@Component({\r\n  selector: 'app-reset-password',\r\n  templateUrl: './reset-password.component.html',\r\n  styleUrls: ['./reset-password.component.scss']\r\n})\r\nexport class ResetPasswordComponent extends BaseComponent implements OnInit {\r\n  resetPasswordForm: UntypedFormGroup;\r\n  constructor(\r\n    private userService: UserService,\r\n    private fb: UntypedFormBuilder,\r\n    public dialogRef: MatDialogRef<ResetPasswordComponent>,\r\n    @Inject(MAT_DIALOG_DATA) public data: User,\r\n    private toastrService: ToastrService,\r\n    public translationService: TranslationService) {\r\n    super(translationService);\r\n    this.getLangDir();\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.createResetPasswordForm();\r\n    this.resetPasswordForm.get('email').setValue(this.data.email);\r\n  }\r\n\r\n  createResetPasswordForm() {\r\n    this.resetPasswordForm = this.fb.group({\r\n      email: [],\r\n      password: ['', [Validators.required, Validators.minLength(6)]],\r\n      confirmPassword: ['', [Validators.required]],\r\n    }, {\r\n      validator: this.checkPasswords\r\n    });\r\n  }\r\n\r\n  checkPasswords(group: UntypedFormGroup) {\r\n    let pass = group.get('password').value;\r\n    let confirmPass = group.get('confirmPassword').value;\r\n    return pass === confirmPass ? null : { notSame: true }\r\n  }\r\n\r\n  resetPassword() {\r\n    if (this.resetPasswordForm.valid) {\r\n      this.sub$.sink = this.userService.resetPassword(this.createBuildObject()).subscribe(d => {\r\n        this.toastrService.success(this.translationService.getValue('SUCCESSFULLY_RESET_PASSWORD'))\r\n        this.dialogRef.close();\r\n      })\r\n    }\r\n  }\r\n\r\n  createBuildObject(): User {\r\n    return {\r\n      email: '',\r\n      password: this.resetPasswordForm.get('password').value,\r\n      userName: this.resetPasswordForm.get('email').value,\r\n    }\r\n  }\r\n\r\n  onNoClick(): void {\r\n    this.dialogRef.close();\r\n  }\r\n}\r\n","<div class=\"close-btn-modal\" (click)=\"onNoClick()\">\r\n  <i class=\"fa fa-times\"></i>\r\n</div>\r\n<div class=\"container\">\r\n  <h1 mat-dialog-title [dir]=\"langDir\">{{'RESET_PASSWORD' | translate}}</h1>\r\n  <div mat-dialog-content [dir]=\"langDir\">\r\n    <form [formGroup]=\"resetPasswordForm\">\r\n      <div class=\"col-md-12\">\r\n        <div class=\"form-group\">\r\n          <label>{{'EMAIL' | translate}}</label>\r\n          <input [attr.disabled]=\"true\" formControlName=\"email\" class=\"form-control\" type=\"email\">\r\n        </div>\r\n      </div>\r\n      <div class=\"col-md-12\">\r\n        <div class=\"form-group\">\r\n          <label class=\"text-danger\">{{'PASSWORD' | translate}} *</label>\r\n          <input autocomplete=\"new-password\" formControlName=\"password\" class=\"form-control\" type=\"password\">\r\n          <div *ngIf=\"resetPasswordForm.get('password').touched && resetPasswordForm.get('password').errors\">\r\n            <div class=\"text-danger\" *ngIf=\"resetPasswordForm.get('password').errors?.required\">\r\n              {{'PASSWORD_IS_REQUIRED' | translate}}\r\n            </div>\r\n            <div class=\"text-danger\" *ngIf=\"resetPasswordForm.get('password').errors?.minlength\">\r\n              {{'YOU_HAVE_TO_ENTER_AT_LEAST_6_DIGIT' | translate}}\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div class=\"col-md-12\">\r\n        <div class=\"form-group\">\r\n          <label class=\"text-danger\">{{'CONFIRM_PASSWORD' | translate}} *</label>\r\n          <input autocomplete=\"new-password\" formControlName=\"confirmPassword\" class=\"form-control\" type=\"password\">\r\n          <div\r\n            *ngIf=\"resetPasswordForm.get('confirmPassword').touched && resetPasswordForm.get('confirmPassword').errors\">\r\n            <div class=\"text-danger\" *ngIf=\"resetPasswordForm.get('confirmPassword').errors?.required\">\r\n              {{'CONFIRM_PASSWORD_IS_REQUIRED' | translate}}\r\n            </div>\r\n          </div>\r\n          <div class=\"text-danger\"\r\n            *ngIf=\"resetPasswordForm.get('confirmPassword').touched && resetPasswordForm.hasError('notSame')\">\r\n            {{'PASSWORDS_DO_NOT_MATCH' | translate}}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </form>\r\n  </div>\r\n  <div mat-dialog-actions [dir]=\"langDir\">\r\n    <button *hasClaim=\"'USR_RESET_PWD'\" class=\"btn btn-success btn-sm m-right-10\" (click)=\"resetPassword()\" cdkFocusInitial> <i\r\n        class=\"fas fa-save\"></i> {{'SAVE' | translate}}</button>\r\n    <button class=\"btn btn-danger btn-sm\" (click)=\"onNoClick()\"><i class=\"fas fa-times-circle\"></i> {{'CANCEL' |\r\n      translate}}</button>\r\n  </div>\r\n</div>\r\n","import { Injectable } from '@angular/core';\r\nimport {\r\n    Resolve,\r\n    ActivatedRouteSnapshot,\r\n    RouterStateSnapshot\r\n} from '@angular/router';\r\nimport { User } from '@core/domain-classes/user';\r\nimport { Observable } from 'rxjs';\r\nimport { UserService } from './user.service';\r\n\r\n@Injectable()\r\nexport class UserDetailResolverService implements Resolve<User> {\r\n    constructor(private userService: UserService) { }\r\n    resolve(\r\n        route: ActivatedRouteSnapshot,\r\n        state: RouterStateSnapshot\r\n    ): Observable<User> {\r\n        const id = route.paramMap.get('id');\r\n        return this.userService.getUser(id) as Observable<User>;\r\n    }\r\n}\r\n","import { DataSource } from '@angular/cdk/table';\r\nimport { HttpResponse } from '@angular/common/http';\r\nimport { ResponseHeader } from '@core/domain-classes/response-header';\r\nimport { User } from '@core/domain-classes/user';\r\nimport { UserResource } from '@core/domain-classes/user-resource';\r\nimport { BehaviorSubject, Observable, of, Subscription } from 'rxjs';\r\nimport { catchError, finalize } from 'rxjs/operators';\r\nimport { UserService } from '../user.service';\r\n\r\nexport class UserDataSource implements DataSource<User> {\r\n    private userSubject = new BehaviorSubject<User[]>([]);\r\n    private responseHeaderSubject = new BehaviorSubject<ResponseHeader>(null);\r\n    private loadingSubject = new BehaviorSubject<boolean>(false);\r\n\r\n    public loading$ = this.loadingSubject.asObservable();\r\n    private _count: number = 0;\r\n    sub$: Subscription;\r\n\r\n    public get count(): number {\r\n        return this._count;\r\n    }\r\n\r\n    public responseHeaderSubject$ = this.responseHeaderSubject.asObservable();\r\n\r\n    constructor(private userService: UserService) {\r\n      this.sub$= new Subscription();\r\n    }\r\n\r\n    connect(): Observable<User[]> {\r\n        return this.userSubject.asObservable();\r\n    }\r\n\r\n    disconnect(): void {\r\n        this.userSubject.complete();\r\n        this.loadingSubject.complete();\r\n        this.sub$.unsubscribe();\r\n    }\r\n\r\n    loadUsers(userResource: UserResource) {\r\n        this.loadingSubject.next(true);\r\n       this.sub$= this.userService.getUsers(userResource).pipe(\r\n            catchError(() => of([])),\r\n            finalize(() => this.loadingSubject.next(false)))\r\n            .subscribe((resp: HttpResponse<User[]>) => {\r\n                const paginationParam = JSON.parse(\r\n                    resp.headers.get('X-Pagination')\r\n                ) as ResponseHeader;\r\n                this.responseHeaderSubject.next(paginationParam);\r\n                const users = [...resp.body];\r\n                this._count = users.length;\r\n                this.userSubject.next(users);\r\n            });\r\n    }\r\n}\r\n","import { AfterViewInit, Component, ElementRef, OnInit, ViewChild } from '@angular/core';\r\nimport { MatDialog } from '@angular/material/dialog';\r\nimport { MatPaginator } from '@angular/material/paginator';\r\nimport { MatSort } from '@angular/material/sort';\r\nimport { Router } from '@angular/router';\r\nimport { CommonDialogService } from '@core/common-dialog/common-dialog.service';\r\nimport { ResponseHeader } from '@core/domain-classes/response-header';\r\nimport { User } from '@core/domain-classes/user';\r\nimport { UserResource } from '@core/domain-classes/user-resource';\r\nimport { TranslationService } from '@core/services/translation.service';\r\nimport { ToastrService } from 'ngx-toastr';\r\nimport { fromEvent, merge, Observable } from 'rxjs';\r\nimport { debounceTime, distinctUntilChanged, tap } from 'rxjs/operators';\r\nimport { BaseComponent } from 'src/app/base.component';\r\nimport { ResetPasswordComponent } from '../reset-password/reset-password.component';\r\nimport { UserService } from '../user.service';\r\nimport { UserDataSource } from './user-datasource';\r\n\r\n@Component({\r\n  selector: 'app-user-list',\r\n  templateUrl: './user-list.component.html',\r\n  styleUrls: ['./user-list.component.scss']\r\n})\r\nexport class UserListComponent extends BaseComponent implements OnInit, AfterViewInit {\r\n  dataSource: UserDataSource;\r\n  users: User[] = [];\r\n  displayedColumns: string[] = ['action', 'email', 'firstName', 'lastName', 'phoneNumber', 'isActive'];\r\n  footerToDisplayed = ['footer'];\r\n  isLoadingResults = true;\r\n  userResource: UserResource;\r\n  loading$: Observable<boolean>;\r\n  @ViewChild(MatPaginator) paginator: MatPaginator;\r\n  @ViewChild(MatSort) sort: MatSort;\r\n  @ViewChild('input') input: ElementRef;\r\n\r\n  constructor(\r\n    private userService: UserService,\r\n    private toastrService: ToastrService,\r\n    private commonDialogService: CommonDialogService,\r\n    private dialog: MatDialog,\r\n    private router: Router,\r\n    public translationService: TranslationService) {\r\n    super(translationService);\r\n    this.getLangDir();\r\n    this.userResource = new UserResource();\r\n    this.userResource.pageSize = 10;\r\n    this.userResource.orderBy = 'email desc'\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.dataSource = new UserDataSource(this.userService);\r\n    this.dataSource.loadUsers(this.userResource);\r\n    this.getResourceParameter();\r\n  }\r\n\r\n  ngAfterViewInit() {\r\n    this.sort.sortChange.subscribe(() => this.paginator.pageIndex = 0);\r\n\r\n    this.sub$.sink = merge(this.sort.sortChange, this.paginator.page)\r\n      .pipe(\r\n        tap((c: any) => {\r\n          this.userResource.skip = this.paginator.pageIndex * this.paginator.pageSize;\r\n          this.userResource.pageSize = this.paginator.pageSize;\r\n          this.userResource.orderBy = this.sort.active + ' ' + this.sort.direction;\r\n          this.dataSource.loadUsers(this.userResource);\r\n        })\r\n      )\r\n      .subscribe();\r\n\r\n    this.sub$.sink = fromEvent(this.input.nativeElement, 'keyup')\r\n      .pipe(\r\n        debounceTime(1000),\r\n        distinctUntilChanged(),\r\n        tap(() => {\r\n          this.paginator.pageIndex = 0;\r\n          this.userResource.name = this.input.nativeElement.value;\r\n          this.dataSource.loadUsers(this.userResource);\r\n        })\r\n      )\r\n      .subscribe();\r\n  }\r\n\r\n  deleteUser(user: User) {\r\n    this.sub$.sink = this.commonDialogService\r\n      .deleteConformationDialog(`${this.translationService.getValue('ARE_YOU_SURE_YOU_WANT_TO_DELETE')} ${user.email}`)\r\n      .subscribe((isTrue: boolean) => {\r\n        if (isTrue) {\r\n          this.sub$.sink = this.userService.deleteUser(user.id)\r\n            .subscribe(() => {\r\n              this.toastrService.success(this.translationService.getValue('USER_DELETED_SUCCESSFULLY'));\r\n              this.paginator.pageIndex = 0;\r\n              this.userResource.name = this.input.nativeElement.value;\r\n              this.dataSource.loadUsers(this.userResource);\r\n            });\r\n        }\r\n      });\r\n  }\r\n\r\n  getResourceParameter() {\r\n    this.sub$.sink = this.dataSource.responseHeaderSubject$\r\n      .subscribe((c: ResponseHeader) => {\r\n        if (c) {\r\n          this.userResource.pageSize = c.pageSize;\r\n          this.userResource.skip = c.skip;\r\n          this.userResource.totalCount = c.totalCount;\r\n        }\r\n      });\r\n  }\r\n\r\n  resetPassword(user: User): void {\r\n    this.dialog.open(ResetPasswordComponent, {\r\n      width: '350px',\r\n      direction:this.langDir,\r\n      data: Object.assign({}, user)\r\n    });\r\n  }\r\n\r\n  editUser(userId: string) {\r\n    this.router.navigate(['/users/manage', userId])\r\n  }\r\n\r\n  userPermission(userId: string) {\r\n    this.router.navigate(['/users/permission', userId])\r\n  }\r\n}\r\n","<div class=\"page-header-main\">\r\n    <div class=\"row align-items-center justify-content-between\">\r\n        <div class=\"col-md-auto col-sm-auto col\">\r\n            <div class=\"content-header\">\r\n                <h1>{{'USERS' | translate}}</h1>\r\n            </div>\r\n        </div>\r\n        <div class=\"col-md-auto col-sm-auto col-auto\">\r\n            <button *hasClaim=\"'USR_ADD_USER'\" class=\"btn blue-btn btn-sm m-right-10\" [routerLink]=\"['/users/manage']\">\r\n                <i class=\"fas fa-plus\"></i> {{'ADD_USER' | translate}}\r\n            </button>\r\n        </div>\r\n    </div>\r\n</div>\r\n<div class=\"table-responsive\">\r\n    <div class=\"loading-shade\" *ngIf=\"dataSource.loading$ | async\">\r\n        <mat-spinner></mat-spinner>\r\n    </div>\r\n    <div class=\"col-sm-6 mb-3\">\r\n        <input class=\"form-control\" placeholder=\"{{'SEARCH_BY_EMAIL_FIRST_NAME_LAST_NAME_PHONE_NUMBER' | translate}}\"\r\n            #input>\r\n    </div>\r\n    <table mat-table [dir]=\"langDir\" class=\"table table-bordered table-hover\" [dataSource]=\"dataSource\" matSort\r\n        matSortActive=\"email\">\r\n        <ng-container matColumnDef=\"action\">\r\n            <th class=\"table-column-150\" mat-header-cell *matHeaderCellDef>\r\n                <span> {{'ACTION' | translate}} </span>\r\n            </th>\r\n            <td class=\"table-column-150\" mat-cell *matCellDef=\"let user\">\r\n                <button *hasClaim=\"['USR_UPDATE_USER','USR_ASSIGN_USR_PERMISSIONS','USR_RESET_PWD','USR_DELETE_USER']\"\r\n                    mat-icon-button [matMenuTriggerFor]=\"menu\" aria-label=\"Action\">\r\n                    <mat-icon>more_vert</mat-icon>\r\n                </button>\r\n                <mat-menu #menu=\"matMenu\" [dir]=\"langDir\">\r\n                    <button *hasClaim=\"'USR_UPDATE_USER'\" (click)=\"editUser(user.id)\" mat-menu-item>\r\n                        <mat-icon>edit</mat-icon>\r\n                        <span>{{'EDIT' | translate}}</span>\r\n                    </button>\r\n                    <button *hasClaim=\"'USR_ASSIGN_USR_PERMISSIONS'\" mat-menu-item (click)=\"userPermission(user.id)\">\r\n                        <mat-icon>admin_panel_settings</mat-icon>\r\n                        <span>{{'PERMISSION' | translate}}</span>\r\n                    </button>\r\n                    <button *hasClaim=\"'USR_RESET_PWD'\" mat-menu-item (click)=\"resetPassword(user)\">\r\n                        <mat-icon>vpn_key</mat-icon>\r\n                        <span>{{'RESET_PASSWORD' | translate}}</span>\r\n                    </button>\r\n                    <button *hasClaim=\"'USR_DELETE_USER'\" mat-menu-item (click)=\"deleteUser(user)\">\r\n                        <mat-icon>delete</mat-icon>\r\n                        <span>{{'DELETE' | translate}}</span>\r\n                    </button>\r\n                </mat-menu>\r\n            </td>\r\n        </ng-container>\r\n        <ng-container matColumnDef=\"email\">\r\n            <th class=\"table-column-300\" mat-header-cell *matHeaderCellDef mat-sort-header> {{'EMAIL' | translate}}\r\n            </th>\r\n            <td class=\"table-column-300\" mat-cell *matCellDef=\"let user\">\r\n                <ng-container *ngIf=\"user.email\">\r\n                    <a href=\"mailto:{{user.email}}\">{{user.email}}</a>\r\n                </ng-container>\r\n            </td>\r\n        </ng-container>\r\n        <ng-container matColumnDef=\"firstName\">\r\n            <th class=\"table-column-200\" mat-header-cell *matHeaderCellDef mat-sort-header> {{'FIRST_NAME' | translate}}\r\n            </th>\r\n            <td class=\"table-column-200\" mat-cell *matCellDef=\"let user\"> {{user.firstName}} </td>\r\n        </ng-container>\r\n        <ng-container matColumnDef=\"lastName\">\r\n            <th class=\"table-column-175\" mat-header-cell *matHeaderCellDef mat-sort-header> {{'LAST_NAME' | translate}}\r\n            </th>\r\n            <td class=\"table-column-175\" mat-cell *matCellDef=\"let user\"> {{user.lastName}} </td>\r\n        </ng-container>\r\n        <ng-container matColumnDef=\"phoneNumber\">\r\n            <th class=\"table-column-200\" mat-header-cell *matHeaderCellDef mat-sort-header> {{'PHONE_NUMBER' |\r\n                translate}} </th>\r\n            <td class=\"table-column-200\" mat-cell *matCellDef=\"let user\"> {{user.phoneNumber}} </td>\r\n        </ng-container>\r\n        <ng-container matColumnDef=\"isActive\">\r\n            <th class=\"table-column-150\" mat-header-cell *matHeaderCellDef mat-sort-header> {{'STATUS' | translate}}\r\n            </th>\r\n            <td class=\"table-column-150\" mat-cell *matCellDef=\"let user\">\r\n                <span *ngIf=\"user.isActive\" class=\"badge badge-success\">{{'ACTIVE' | translate}}</span>\r\n                <span *ngIf=\"!user.isActive\" class=\"badge badge-warning\">{{'INACTIVE' | translate}}</span>\r\n            </td>\r\n        </ng-container>\r\n        <ng-container matColumnDef=\"footer\">\r\n            <td mat-footer-cell colspan=\"6\" *matFooterCellDef>\r\n                <mat-paginator  [dir]=\"langDir\" [length]=\"userResource.totalCount\" [pageSize]=\"userResource.pageSize\"\r\n                    [pageSizeOptions]=\"[10, 20, 30]\">\r\n                </mat-paginator>\r\n            </td>\r\n        </ng-container>\r\n        <tr *matNoDataRow>\r\n            <td colspan=\"9\">\r\n                <span class=\"p-4 mt-4\">\r\n                    <b> {{'NO_DATA_FOUND' | translate}}</b>\r\n                </span>\r\n            </td>\r\n        </tr>\r\n          <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\r\n          <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\"></tr>\r\n          <tr mat-footer-row *matFooterRowDef=\"footerToDisplayed\"></tr>\r\n    </table>\r\n</div>","import { Component, EventEmitter, Input, OnChanges, OnInit, Output } from '@angular/core';\r\nimport { Action } from '@core/domain-classes/action';\r\nimport { User } from '@core/domain-classes/user';\r\nimport { Page } from '@core/domain-classes/page';\r\nimport { MatSlideToggleChange } from '@angular/material/slide-toggle';\r\nimport { MatCheckboxChange } from '@angular/material/checkbox';\r\nimport { TranslationService } from '@core/services/translation.service';\r\nimport { BaseComponent } from 'src/app/base.component';\r\n\r\n@Component({\r\n  selector: 'app-user-permission-presentation',\r\n  templateUrl: './user-permission-presentation.component.html',\r\n  styleUrls: ['./user-permission-presentation.component.scss']\r\n})\r\nexport class UserPermissionPresentationComponent extends BaseComponent implements OnInit {\r\n  @Input() pages: Page[];\r\n  @Input() user: User;\r\n  @Output() manageUserClaimAction: EventEmitter<User> = new EventEmitter<User>();\r\n  step: number = 0;\r\n  constructor(public translationService:TranslationService) { \r\n    super(translationService);\r\n    this.getLangDir(); }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n  checkPermission(actionId: string): boolean {\r\n    const pageAction = this.user.userClaims.find(c => c.actionId === actionId);\r\n    if (pageAction) {\r\n      return true;\r\n    } else {\r\n      return false;\r\n    }\r\n  }\r\n\r\n  onPermissionChange(flag: MatSlideToggleChange, page: Page, action: Action) {\r\n    if (flag.checked) {\r\n      this.user.userClaims.push({\r\n        userId: this.user.id,\r\n        claimType: action.code,\r\n        claimValue: '',\r\n        actionId: action.id\r\n      })\r\n    } else {\r\n      const roleClaimToRemove = this.user.userClaims.find(c => c.actionId === action.id);\r\n      const index = this.user.userClaims.indexOf(roleClaimToRemove, 0);\r\n      if (index > -1) {\r\n        this.user.userClaims.splice(index, 1);\r\n      }\r\n    }\r\n  }\r\n\r\n  onPageSelect(event: MatCheckboxChange, page: Page) {\r\n    if (event.checked) {\r\n      page.pageActions.forEach(action => {\r\n        if (!this.checkPermission(action.id)) {\r\n          this.user.userClaims.push({\r\n            userId: this.user.id,\r\n            claimType: action.code,\r\n            claimValue: '',\r\n            actionId: action.id,\r\n          });\r\n        }\r\n      });\r\n    } else {\r\n      var actions = page.pageActions?.map(c => c.id);\r\n      this.user.userClaims = this.user.userClaims.filter(c => actions.indexOf(c.actionId) < 0);\r\n    }\r\n  }\r\n\r\n  saveUserClaim() {\r\n    this.manageUserClaimAction.emit(this.user);\r\n  }\r\n\r\n  selecetAll(event: MatCheckboxChange) {\r\n    if (event.checked) {\r\n      this.pages.forEach(page => {\r\n        page.pageActions.forEach(action => {\r\n          if (!this.checkPermission(action.id)) {\r\n            this.user.userClaims.push({\r\n              userId: this.user.id,\r\n              claimType: action.code,\r\n              claimValue: '',\r\n              actionId: action.id\r\n            });\r\n          }\r\n        });\r\n      });\r\n    } else {\r\n      this.user.userClaims = [];\r\n    }\r\n  }\r\n}\r\n","<div class=\"page-header-main\">\r\n  <div class=\"row align-items-center justify-content-between\">\r\n    <div class=\"col-md-auto col-sm-auto\">\r\n      <div class=\"content-header\">\r\n        <h1>\r\n          {{'USER_PAGE_PERMISSION_TO' | translate }} :\r\n          <span class=\"text-info\">{{user?.firstName}} {{user?.lastName}}</span>\r\n        </h1>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</div>\r\n<div class=\"row align-items-center\">\r\n  <div class=\"col-sm-12\">\r\n    <h4 class=\"widget-title\">{{'PERMISSION' | translate}}</h4>\r\n    <mat-checkbox  [dir]=\"langDir\" color=\"primary\" (change)=\"selecetAll($event)\" class=\"example-margin\">Select All</mat-checkbox>\r\n  </div>\r\n</div>\r\n<div class=\"row\">\r\n  <div class=\"col-sm-12\">\r\n    <div fxLayout=\"row wrap\" *ngFor='let page of pages; let i=index'>\r\n      <div fxFlex=\"100\" fxFlex.sm=\"100\">\r\n        <mat-checkbox [dir]=\"langDir\" color=\"primary\" (change)=\"onPageSelect($event,page)\">\r\n          <b> {{page.name}}</b>\r\n        </mat-checkbox>\r\n      </div>\r\n      <div class=\"row ml-2\">\r\n        <div class=\"col-sm-3\" *ngFor='let action of page.pageActions'>\r\n          <mat-checkbox [dir]=\"langDir\" color=\"primary\" [checked]=\"checkPermission(action.id)\"\r\n            (change)=\"onPermissionChange($event,page,action)\">\r\n            {{action.name}}\r\n          </mat-checkbox>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</div>\r\n<div class=\"row mt-2\">\r\n  <div class=\"col-sm-12\">\r\n    <button *hasClaim=\"'USR_ASSIGN_USR_PERMISSIONS'\" class=\"btn btn-success btn-sm m-right-10\" (click)=\"saveUserClaim()\"\r\n      cdkFocusInitial><i class=\"fas fa-save\"></i> Save</button>\r\n    <a class=\"btn btn-danger btn-sm\" [routerLink]=\"['/users']\"><i class=\"fas fa-times-circle\"></i> Cancel</a>\r\n  </div>\r\n</div>","import { Component, OnInit } from '@angular/core';\r\nimport { Action } from '@core/domain-classes/action';\r\nimport { Page } from '@core/domain-classes/page';\r\nimport { ActionService } from '@core/services/action.service';\r\nimport { PageService } from '@core/services/page.service';\r\nimport { forkJoin, Observable } from 'rxjs';\r\nimport { tap } from 'rxjs/operators';\r\nimport { BaseComponent } from 'src/app/base.component';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { ToastrService } from 'ngx-toastr';\r\nimport { User } from '@core/domain-classes/user';\r\nimport { UserService } from '../user.service';\r\nimport { TranslationService } from '@core/services/translation.service';\r\n\r\n@Component({\r\n  selector: 'app-user-permission',\r\n  templateUrl: './user-permission.component.html',\r\n  styleUrls: ['./user-permission.component.scss']\r\n})\r\nexport class UserPermissionComponent extends BaseComponent implements OnInit {\r\n  pages: Page[];\r\n  user: User;\r\n\r\n  constructor(\r\n    private activeRoute: ActivatedRoute,\r\n    private router: Router,\r\n    private toastrService: ToastrService,\r\n    private pageService: PageService,\r\n    private actionService: ActionService,\r\n    private userService: UserService,\r\n    public translationService: TranslationService) {\r\n    super(translationService);\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.sub$.sink = this.activeRoute.data.subscribe(\r\n      (data: { user: User }) => {\r\n        this.user = data.user;\r\n      });\r\n\r\n    const getActionRequest = this.actionService.getAll();\r\n    const getPageRequest = this.pageService.getAll();\r\n    forkJoin({ getActionRequest, getPageRequest }).subscribe(response => {\r\n      this.pages = response.getPageRequest;\r\n      this.pages = this.pages.map((p: any) => {\r\n        const pageActions = response.getActionRequest.filter(c => c.pageId == p.id);\r\n        const result = Object.assign({}, p, { pageActions: pageActions });\r\n        return result;\r\n      })\r\n    })\r\n  }\r\n\r\n  manageUserClaimAction(user: User): void {\r\n    this.sub$.sink = this.userService.updateUserClaim(user.userClaims, user.id).subscribe(() => {\r\n      this.toastrService.success(this.translationService.getValue('USER_PERMISSION_UPDATED_SUCCESSFULLY'));\r\n      this.router.navigate(['/users']);\r\n    })\r\n  }\r\n}\r\n","<app-user-permission-presentation [pages]=\"pages\"\r\n     [user]=\"user\" (manageUserClaimAction)=\"manageUserClaimAction($event)\">\r\n</app-user-permission-presentation>\r\n","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport { AuthGuard } from '@core/security/auth.guard';\r\nimport { ManageUserComponent } from './manage-user/manage-user.component';\r\nimport { UserDetailResolverService } from './user-detail-resolver';\r\nimport { UserListComponent } from './user-list/user-list.component';\r\nimport { UserPermissionComponent } from './user-permission/user-permission.component';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: '',\r\n    component: UserListComponent,\r\n    data: { claimType: 'USR_VIEW_USERS' },\r\n    canActivate: [AuthGuard]\r\n  }, {\r\n    path: 'manage/:id',\r\n    component: ManageUserComponent,\r\n    resolve: { user: UserDetailResolverService },\r\n    data: { claimType: 'USR_UPDATE_USER' },\r\n    canActivate: [AuthGuard]\r\n  }, {\r\n    path: 'manage',\r\n    component: ManageUserComponent,\r\n    data: { claimType: 'USR_ADD_USER' },\r\n    canActivate: [AuthGuard]\r\n  }, {\r\n    path: 'permission/:id',\r\n    component: UserPermissionComponent,\r\n    resolve: { user: UserDetailResolverService },\r\n    data: { claimType: 'USR_ASSIGN_USR_PERMISSIONS' },\r\n    canActivate: [AuthGuard]\r\n  }\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class UserRoutingModule { }\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { UserRoutingModule } from './user-routing.module';\r\n\r\nimport { UserListComponent } from './user-list/user-list.component';\r\nimport { ManageUserComponent } from './manage-user/manage-user.component';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport { MatTableModule } from '@angular/material/table';\r\nimport { MatProgressSpinnerModule } from '@angular/material/progress-spinner';\r\nimport { MatDialogModule } from '@angular/material/dialog';\r\nimport { MatSelectModule } from '@angular/material/select';\r\nimport { UserDetailResolverService } from './user-detail-resolver';\r\nimport { UserPermissionComponent } from './user-permission/user-permission.component';\r\nimport { UserPermissionPresentationComponent } from './user-permission-presentation/user-permission-presentation.component';\r\nimport { MatSlideToggleModule } from '@angular/material/slide-toggle';\r\nimport { SharedModule } from '@shared/shared.module';\r\nimport { ResetPasswordComponent } from './reset-password/reset-password.component';\r\nimport { MyProfileComponent } from './my-profile/my-profile.component';\r\nimport { ChangePasswordComponent } from './change-password/change-password.component';\r\nimport { MatMenuModule } from '@angular/material/menu';\r\nimport { MatButtonModule } from '@angular/material/button';\r\nimport {MatCardModule} from '@angular/material/card';\r\nimport { MatPaginatorModule } from '@angular/material/paginator';\r\nimport { MatSortModule } from '@angular/material/sort';\r\nimport { MatInputModule } from '@angular/material/input';\r\nimport { MatIconModule } from '@angular/material/icon';\r\nimport { MatExpansionModule } from '@angular/material/expansion';\r\nimport { MatCheckboxModule } from '@angular/material/checkbox';\r\n\r\n\r\n@NgModule({\r\n  declarations: [\r\n    UserListComponent,\r\n    ManageUserComponent,\r\n    UserPermissionComponent,\r\n    UserPermissionPresentationComponent,\r\n    ResetPasswordComponent,\r\n    MyProfileComponent,\r\n    ChangePasswordComponent\r\n  ],\r\n  imports: [\r\n    CommonModule,\r\n    UserRoutingModule,\r\n    FormsModule,\r\n    ReactiveFormsModule,\r\n    MatTableModule,\r\n    MatProgressSpinnerModule,\r\n    MatDialogModule,\r\n    MatSelectModule,\r\n    MatSlideToggleModule,\r\n    SharedModule,\r\n    MatMenuModule,\r\n    MatButtonModule,\r\n    MatCardModule,\r\n    MatPaginatorModule,\r\n    MatSortModule,\r\n    MatInputModule,\r\n    MatIconModule,\r\n    MatExpansionModule,\r\n    MatCheckboxModule\r\n  ],\r\n  providers: [\r\n    UserDetailResolverService\r\n  ]\r\n})\r\nexport class UserModule { }\r\n"],"names":[],"sourceRoot":"webpack:///","x_google_ignoreList":[]}